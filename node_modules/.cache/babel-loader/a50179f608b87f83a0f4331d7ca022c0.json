{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/Asset/fintify/node_modules/babel-loader/lib/index.js!/Users/naveenmuthyala/Documents/Projects/Asset/fintify/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/naveenmuthyala/Documents/Projects/Asset/fintify/src/store/modules/exchange/actions.js","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/fintify/src/store/modules/exchange/actions.js","mtime":1663867175571},{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/fintify/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/fintify/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/fintify/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1649977087118}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvbmF2ZWVubXV0aHlhbGEvRG9jdW1lbnRzL1Byb2plY3RzL0Fzc2V0L2ZpbnRpZnkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9uYXZlZW5tdXRoeWFsYS9Eb2N1bWVudHMvUHJvamVjdHMvQXNzZXQvZmludGlmeS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0IHsgVmFyaWFudEludmVudG9yeVNlcnZpY2UgfSBmcm9tICdAL2NvbW1vbi9hcGkuc2VydmljZSc7CmltcG9ydCB7IEZFVENIX1ZBUklBTlRTLCBVUERBVEVfU0VMRUNURURfSVRFTV9XSVRIX0VYQ0hBTkdFX1ZBUklBTlRTIH0gZnJvbSAnQC9zdG9yZS9jb25zdGFudHMnOwppbXBvcnQgeyBmbGF0dGVuVmFyaWFudHMgfSBmcm9tICdAL3V0aWxzJzsKZXhwb3J0IGRlZmF1bHQgX2RlZmluZVByb3BlcnR5KHt9LCBGRVRDSF9WQVJJQU5UUywgZnVuY3Rpb24gKF9yZWYsIGl0ZW1zVG9FeGNoYW5nZSkgewogIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgdmFyIGNvbW1pdCwgaXRlbVNLVXM7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICBjb21taXQoJ3NldExvYWRpbmcnLCB0cnVlKTsKICAgICAgICAgICAgaXRlbVNLVXMgPSBpdGVtc1RvRXhjaGFuZ2UubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0uc2t1OwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA2OwogICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoaXRlbVNLVXMubWFwKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShza3UpIHsKICAgICAgICAgICAgICAgIHZhciBpdGVtVG9FeGNoYW5nZSwgcGFyYW1zLCBfeWllbGQkVmFyaWFudEludmVudG8sIGRhdGEsIGZsYXR0ZW5lZFZhcmlhbnRzOwoKICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgaXRlbVRvRXhjaGFuZ2UgPSBpdGVtc1RvRXhjaGFuZ2UuZmluZChmdW5jdGlvbiAoaSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpLnNrdSA9PT0gc2t1OwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgcGFyYW1zID0gewogICAgICAgICAgICAgICAgICAgICAgICAgIHNrdTogc2t1LAogICAgICAgICAgICAgICAgICAgICAgICAgIHByb2R1Y3RfaWRlbnRpZmllcjogaXRlbVRvRXhjaGFuZ2UucHJvZHVjdF9pZGVudGlmaWVyLAogICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnRfaWRlbnRpZmllcjogaXRlbVRvRXhjaGFuZ2UudmFyaWFudF9pZGVudGlmaWVyLAogICAgICAgICAgICAgICAgICAgICAgICAgIHVuaXRfcHJpY2VfYW1vdW50X2NlbnRzOiBpdGVtVG9FeGNoYW5nZS51bml0X3ByaWNlX2Ftb3VudF9jZW50cwogICAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFZhcmlhbnRJbnZlbnRvcnlTZXJ2aWNlLmdldFZhcmlhbnRzQnlTS1UocGFyYW1zKTsKCiAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgICAgIF95aWVsZCRWYXJpYW50SW52ZW50byA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkVmFyaWFudEludmVudG8uZGF0YTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgICAgICAgICAgZmxhdHRlbmVkVmFyaWFudHMgPSBmbGF0dGVuVmFyaWFudHMoZGF0YS52YXJpYW50cyk7CiAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1pdCgnb3JkZXIvJyArIFVQREFURV9TRUxFQ1RFRF9JVEVNX1dJVEhfRVhDSEFOR0VfVkFSSUFOVFMsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBmbGF0dGVuZWRWYXJpYW50cywKICAgICAgICAgICAgICAgICAgICAgICAgICBpZGVudGlmaWVyOiBpdGVtVG9FeGNoYW5nZS5pZGVudGlmaWVyCiAgICAgICAgICAgICAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAgICAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9KCkpKTsKCiAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTE7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA4OwogICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoewogICAgICAgICAgICAgIGVycm9yOiBfY29udGV4dDIudDAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMTsKICAgICAgICAgICAgY29tbWl0KCdzZXRMb2FkaW5nJywgZmFsc2UpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmZpbmlzaCgxMSk7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMSwgOCwgMTEsIDE0XV0pOwogIH0pKSgpOwp9KTs="},{"version":3,"sources":["/Users/naveenmuthyala/Documents/Projects/Asset/fintify/src/store/modules/exchange/actions.js"],"names":["VariantInventoryService","FETCH_VARIANTS","UPDATE_SELECTED_ITEM_WITH_EXCHANGE_VARIANTS","flattenVariants","itemsToExchange","commit","itemSKUs","map","item","sku","Promise","all","itemToExchange","find","i","params","product_identifier","variant_identifier","unit_price_amount_cents","getVariantsBySKU","data","flattenedVariants","variants","identifier","root","console","error"],"mappings":";;;;;;;;AAAA,SAASA,uBAAT,QAAwC,sBAAxC;AACA,SACEC,cADF,EAEEC,2CAFF,QAGO,mBAHP;AAIA,SAASC,eAAT,QAAgC,SAAhC;AAEA,mCACSF,cADT,kBACsCG,eADtC,EACuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3BC,YAAAA,MAA2B,QAA3BA,MAA2B;AAAA;AAEjDA,YAAAA,MAAM,CAAC,YAAD,EAAe,IAAf,CAAN;AACMC,YAAAA,QAH2C,GAGhCF,eAAe,CAACG,GAAhB,CAAoB,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACC,GAAf;AAAA,aAApB,CAHgC;AAAA;AAAA,mBAK3CC,OAAO,CAACC,GAAR,CACJL,QAAQ,CAACC,GAAT;AAAA,kFAAa,iBAAOE,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLG,wBAAAA,cADK,GACYR,eAAe,CAACS,IAAhB,CAAqB,UAACC,CAAD;AAAA,iCAAOA,CAAC,CAACL,GAAF,KAAUA,GAAjB;AAAA,yBAArB,CADZ;AAGLM,wBAAAA,MAHK,GAGI;AACbN,0BAAAA,GAAG,EAAEA,GADQ;AAEbO,0BAAAA,kBAAkB,EAAEJ,cAAc,CAACI,kBAFtB;AAGbC,0BAAAA,kBAAkB,EAAEL,cAAc,CAACK,kBAHtB;AAIbC,0BAAAA,uBAAuB,EAAEN,cAAc,CAACM;AAJ3B,yBAHJ;AAAA;AAAA,+BAUYlB,uBAAuB,CAACmB,gBAAxB,CAAyCJ,MAAzC,CAVZ;;AAAA;AAAA;AAUHK,wBAAAA,IAVG,yBAUHA,IAVG;;AAAA,4BAWNA,IAXM;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAeLC,wBAAAA,iBAfK,GAeelB,eAAe,CAACiB,IAAI,CAACE,QAAN,CAf9B;AAAA;AAAA,+BAgBLjB,MAAM,CACV,WAAWH,2CADD,EAEV;AAAEkB,0BAAAA,IAAI,EAAEC,iBAAR;AAA2BE,0BAAAA,UAAU,EAAEX,cAAc,CAACW;AAAtD,yBAFU,EAGV;AAAEC,0BAAAA,IAAI,EAAE;AAAR,yBAHU,CAhBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAb;;AAAA;AAAA;AAAA;AAAA,gBADI,CAL2C;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8BjDC,YAAAA,OAAO,CAACC,KAAR,CAAc;AAAEA,cAAAA,KAAK;AAAP,aAAd;;AA9BiD;AAAA;AAgCjDrB,YAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AAhCiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCpD,CAnCH","sourcesContent":["import { VariantInventoryService } from '@/common/api.service'\nimport {\n  FETCH_VARIANTS,\n  UPDATE_SELECTED_ITEM_WITH_EXCHANGE_VARIANTS\n} from '@/store/constants'\nimport { flattenVariants } from '@/utils'\n\nexport default {\n  async [FETCH_VARIANTS] ({ commit }, itemsToExchange) {\n    try {\n      commit('setLoading', true)\n      const itemSKUs = itemsToExchange.map((item) => item.sku)\n\n      await Promise.all(\n        itemSKUs.map(async (sku) => {\n          const itemToExchange = itemsToExchange.find((i) => i.sku === sku)\n\n          const params = {\n            sku: sku,\n            product_identifier: itemToExchange.product_identifier,\n            variant_identifier: itemToExchange.variant_identifier,\n            unit_price_amount_cents: itemToExchange.unit_price_amount_cents\n          }\n\n          const { data } = await VariantInventoryService.getVariantsBySKU(params)\n          if (!data) {\n            return\n          }\n\n          const flattenedVariants = flattenVariants(data.variants)\n          await commit(\n            'order/' + UPDATE_SELECTED_ITEM_WITH_EXCHANGE_VARIANTS,\n            { data: flattenedVariants, identifier: itemToExchange.identifier },\n            { root: true }\n          )\n        })\n      )\n    } catch (error) {\n      console.error({ error })\n    } finally {\n      commit('setLoading', false)\n    }\n  }\n}\n"]}]}