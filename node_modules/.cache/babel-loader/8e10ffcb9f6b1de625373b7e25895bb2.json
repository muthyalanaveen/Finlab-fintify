{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/store/modules/exchange/actions.js","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/store/modules/exchange/actions.js","mtime":1650905206298},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1649977087118}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvbmF2ZWVubXV0aHlhbGEvRG9jdW1lbnRzL1Byb2plY3RzL3JldHVybnNfcG9ydGFsX3VpL3JldHVybnNfcG9ydGFsX3VpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMvbmF2ZWVubXV0aHlhbGEvRG9jdW1lbnRzL1Byb2plY3RzL3JldHVybnNfcG9ydGFsX3VpL3JldHVybnNfcG9ydGFsX3VpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgeyBWYXJpYW50SW52ZW50b3J5U2VydmljZSB9IGZyb20gJ0AvY29tbW9uL2FwaS5zZXJ2aWNlJzsKaW1wb3J0IHsgRkVUQ0hfVkFSSUFOVFMsIFVQREFURV9TRUxFQ1RFRF9JVEVNX1dJVEhfRVhDSEFOR0VfVkFSSUFOVFMgfSBmcm9tICdAL3N0b3JlL2NvbnN0YW50cyc7CmltcG9ydCB7IGZsYXR0ZW5WYXJpYW50cyB9IGZyb20gJ0AvdXRpbHMnOwpleHBvcnQgZGVmYXVsdCBfZGVmaW5lUHJvcGVydHkoe30sIEZFVENIX1ZBUklBTlRTLCBmdW5jdGlvbiAoX3JlZiwgaXRlbXNUb0V4Y2hhbmdlKSB7CiAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICB2YXIgY29tbWl0LCBpdGVtU0tVczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgIGNvbW1pdCgnc2V0TG9hZGluZycsIHRydWUpOwogICAgICAgICAgICBpdGVtU0tVcyA9IGl0ZW1zVG9FeGNoYW5nZS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICByZXR1cm4gaXRlbS5za3U7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDY7CiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChpdGVtU0tVcy5tYXAoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgdmFyIF9yZWYyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHNrdSkgewogICAgICAgICAgICAgICAgdmFyIGl0ZW1Ub0V4Y2hhbmdlLCBwYXJhbXMsIF95aWVsZCRWYXJpYW50SW52ZW50bywgZGF0YSwgZmxhdHRlbmVkVmFyaWFudHM7CgogICAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgICAgICBpdGVtVG9FeGNoYW5nZSA9IGl0ZW1zVG9FeGNoYW5nZS5maW5kKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGkuc2t1ID09PSBza3U7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXMgPSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc2t1OiBza3UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgdW5pdF9wcmljZV9hbW91bnRfY2VudHM6IGl0ZW1Ub0V4Y2hhbmdlLnVuaXRfcHJpY2VfYW1vdW50X2NlbnRzCiAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gVmFyaWFudEludmVudG9yeVNlcnZpY2UuZ2V0VmFyaWFudHNCeVNLVShwYXJhbXMpOwoKICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgICAgICAgX3lpZWxkJFZhcmlhbnRJbnZlbnRvID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRWYXJpYW50SW52ZW50by5kYXRhOwoKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgICAgICAgICBmbGF0dGVuZWRWYXJpYW50cyA9IGZsYXR0ZW5WYXJpYW50cyhkYXRhLnZhcmlhbnRzKTsKICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29tbWl0KCdvcmRlci8nICsgVVBEQVRFX1NFTEVDVEVEX0lURU1fV0lUSF9FWENIQU5HRV9WQVJJQU5UUywgewogICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IGZsYXR0ZW5lZFZhcmlhbnRzLAogICAgICAgICAgICAgICAgICAgICAgICAgIGlkZW50aWZpZXI6IGl0ZW1Ub0V4Y2hhbmdlLmlkZW50aWZpZXIKICAgICAgICAgICAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICAgICAgICB9KSk7CgogICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0oKSkpOwoKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDg7CiAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgY29uc29sZS5lcnJvcih7CiAgICAgICAgICAgICAgZXJyb3I6IF9jb250ZXh0Mi50MAogICAgICAgICAgICB9KTsKCiAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDExOwogICAgICAgICAgICBjb21taXQoJ3NldExvYWRpbmcnLCBmYWxzZSk7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuZmluaXNoKDExKTsKCiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCA4LCAxMSwgMTRdXSk7CiAgfSkpKCk7Cn0pOw=="},{"version":3,"sources":["/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/store/modules/exchange/actions.js"],"names":["VariantInventoryService","FETCH_VARIANTS","UPDATE_SELECTED_ITEM_WITH_EXCHANGE_VARIANTS","flattenVariants","itemsToExchange","commit","itemSKUs","map","item","sku","Promise","all","itemToExchange","find","i","params","unit_price_amount_cents","getVariantsBySKU","data","flattenedVariants","variants","identifier","root","console","error"],"mappings":";;;;;;;;AAAA,SAASA,uBAAT,QAAwC,sBAAxC;AACA,SACEC,cADF,EAEEC,2CAFF,QAGO,mBAHP;AAIA,SAASC,eAAT,QAAgC,SAAhC;AAEA,mCACSF,cADT,kBACsCG,eADtC,EACuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA3BC,YAAAA,MAA2B,QAA3BA,MAA2B;AAAA;AAEjDA,YAAAA,MAAM,CAAC,YAAD,EAAe,IAAf,CAAN;AACMC,YAAAA,QAH2C,GAGhCF,eAAe,CAACG,GAAhB,CAAoB,UAACC,IAAD;AAAA,qBAAUA,IAAI,CAACC,GAAf;AAAA,aAApB,CAHgC;AAAA;AAAA,mBAK3CC,OAAO,CAACC,GAAR,CACJL,QAAQ,CAACC,GAAT;AAAA,kFAAa,iBAAOE,GAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLG,wBAAAA,cADK,GACYR,eAAe,CAACS,IAAhB,CAAqB,UAACC,CAAD;AAAA,iCAAOA,CAAC,CAACL,GAAF,KAAUA,GAAjB;AAAA,yBAArB,CADZ;AAGLM,wBAAAA,MAHK,GAGI;AACbN,0BAAAA,GAAG,EAAEA,GADQ;AAEbO,0BAAAA,uBAAuB,EAAEJ,cAAc,CAACI;AAF3B,yBAHJ;AAAA;AAAA,+BAQYhB,uBAAuB,CAACiB,gBAAxB,CAAyCF,MAAzC,CARZ;;AAAA;AAAA;AAQHG,wBAAAA,IARG,yBAQHA,IARG;;AAAA,4BASNA,IATM;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAaLC,wBAAAA,iBAbK,GAaehB,eAAe,CAACe,IAAI,CAACE,QAAN,CAb9B;AAAA;AAAA,+BAcLf,MAAM,CACV,WAAWH,2CADD,EAEV;AAAEgB,0BAAAA,IAAI,EAAEC,iBAAR;AAA2BE,0BAAAA,UAAU,EAAET,cAAc,CAACS;AAAtD,yBAFU,EAGV;AAAEC,0BAAAA,IAAI,EAAE;AAAR,yBAHU,CAdD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAb;;AAAA;AAAA;AAAA;AAAA,gBADI,CAL2C;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4BjDC,YAAAA,OAAO,CAACC,KAAR,CAAc;AAAEA,cAAAA,KAAK;AAAP,aAAd;;AA5BiD;AAAA;AA8BjDnB,YAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AA9BiD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCpD,CAjCH","sourcesContent":["import { VariantInventoryService } from '@/common/api.service'\nimport {\n  FETCH_VARIANTS,\n  UPDATE_SELECTED_ITEM_WITH_EXCHANGE_VARIANTS\n} from '@/store/constants'\nimport { flattenVariants } from '@/utils'\n\nexport default {\n  async [FETCH_VARIANTS] ({ commit }, itemsToExchange) {\n    try {\n      commit('setLoading', true)\n      const itemSKUs = itemsToExchange.map((item) => item.sku)\n\n      await Promise.all(\n        itemSKUs.map(async (sku) => {\n          const itemToExchange = itemsToExchange.find((i) => i.sku === sku)\n\n          const params = {\n            sku: sku,\n            unit_price_amount_cents: itemToExchange.unit_price_amount_cents\n          }\n\n          const { data } = await VariantInventoryService.getVariantsBySKU(params)\n          if (!data) {\n            return\n          }\n\n          const flattenedVariants = flattenVariants(data.variants)\n          await commit(\n            'order/' + UPDATE_SELECTED_ITEM_WITH_EXCHANGE_VARIANTS,\n            { data: flattenedVariants, identifier: itemToExchange.identifier },\n            { root: true }\n          )\n        })\n      )\n    } catch (error) {\n      console.error({ error })\n    } finally {\n      commit('setLoading', false)\n    }\n  }\n}\n"]}]}