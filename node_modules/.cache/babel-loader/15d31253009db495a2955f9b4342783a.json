{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/utils/index.js","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/utils/index.js","mtime":1657724657846},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1649977087118}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/utils/index.js"],"names":["pako","pad","num","size","toString","length","validateOrderId","str","orderIdRex","undefined","test","validateZipcode","zipcodeRex","validateEmail","emailRegex","getFormattedDate","date","Date","year","getFullYear","month","getMonth","padStart","day","getDate","dayOfWeekAsString","dayIndex","toRegularTime","hours","minutes","convertImageData","imageBase64Data","strData","atob","charData","split","map","x","charCodeAt","binData","Uint8Array","data","inflate","imgData","String","fromCharCode","apply","Uint16Array","encodedImgData","encodeURIComponent","image","flattenVariant","variant","flattenedAttributes","attributes","forEach","a","name","toLowerCase","value","flattenVariants","rawVariants","v","getDistanceValue","measure","parseFloat","replace","isStoreWithinDistance","distance","maxDistance","getLookupKeys","keysArr","checkingString","splitCheckingStringArr","reqdKeys","filter","lookupKey","splitLookupStringArr","delay","ms","Promise","resolve","setTimeout","objectMap","obj","fn","Object","fromEntries","entries","i","k","trim","returnFormattedOrderNumber","orderNumber","trimExtraSpacesFromStringsInObject"],"mappings":"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","sourcesContent":["import pako from 'pako'\n\nexport function pad (num, size) {\n  num = num.toString()\n  while (num.length < size) num = '0' + num\n  return num\n}\n\nexport function validateOrderId (str) {\n  const orderIdRex = /[a-zA-Z0-9]/g\n  if (str !== undefined && str !== null) {\n    if (str.length >= 4 && orderIdRex.test(str)) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function validateZipcode (str) {\n  const zipcodeRex = /[0-9]/g\n  if (str !== undefined && str !== null) {\n    if (str.length === 5 && zipcodeRex.test(str)) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function validateEmail (str) {\n  const emailRegex = /.+@.+\\..+/\n  if (str !== undefined && str !== null) {\n    if (emailRegex.test(str)) {\n      return true\n    }\n  }\n  return false\n}\n\nexport function getFormattedDate (date) {\n  date = new Date(date)\n  if (date) {\n    const year = date.getFullYear()\n    const month = (1 + date.getMonth()).toString().padStart(2, '0')\n    const day = date\n      .getDate()\n      .toString()\n      .padStart(2, '0')\n\n    return month + '/' + day + '/' + year\n  }\n  return date\n}\n\nexport function dayOfWeekAsString (dayIndex) {\n  return (\n    [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday'\n    ][dayIndex] || ''\n  )\n}\n\nexport function toRegularTime ({ dayIndex = '', hours, minutes }) {\n  return hours === null || hours === null\n    ? ''\n    : `${hours > 12 ? hours - 12 : hours}:${\n        minutes < 10 ? '0' + minutes : minutes\n      } ${hours >= 12 ? 'PM' : 'AM'} ${dayIndex &&\n        'on ' + dayOfWeekAsString(dayIndex)}`\n}\n\nexport function convertImageData (imageBase64Data) {\n  if (!imageBase64Data) return\n\n  // Decode base64 (convert ascii to binary)\n  const strData = atob(imageBase64Data)\n\n  // Convert binary string to character-number array\n  const charData = strData.split('').map(function (x) {\n    return x.charCodeAt(0)\n  })\n\n  // Turn number array into byte-array\n  const binData = new Uint8Array(charData)\n\n  // Pako magic\n  const data = pako.inflate(binData)\n\n  // Convert gunzipped byteArray back to ascii string:\n  const imgData = String.fromCharCode.apply(null, new Uint16Array(data))\n  const encodedImgData = encodeURIComponent(imgData)\n  const image = 'data:image/svg+xml;utf8,' + encodedImgData\n\n  return image\n}\n\nexport function flattenVariant (variant) {\n  const flattenedAttributes = {}\n  variant.attributes.forEach((a) => {\n    flattenedAttributes[a.name.toLowerCase()] = a.value\n  })\n  return {\n    ...flattenedAttributes,\n    ...variant\n  }\n}\n\nexport function flattenVariants (rawVariants) {\n  return rawVariants.map((v) => flattenVariant(v))\n}\n\nexport function getDistanceValue (measure) {\n  return parseFloat(measure?.replace(/,/g, '').split(' ')[0]) // separate unit part and return only value as a number\n}\n\nexport function isStoreWithinDistance (distance, maxDistance) {\n  return getDistanceValue(distance) <= maxDistance\n}\n\nexport function getLookupKeys (keysArr, checkingString) {\n  // ${state}_${zipCode}_${city}_${name}_${type}_info\n  const splitCheckingStringArr = checkingString.split('_')\n  const reqdKeys = keysArr.filter((lookupKey) => {\n    const splitLookupStringArr = lookupKey.split('_')\n    if (\n      splitCheckingStringArr.length === 6 &&\n      splitCheckingStringArr[0] === splitLookupStringArr[0] &&\n      splitCheckingStringArr[1] === splitLookupStringArr[1] &&\n      splitCheckingStringArr[2] === splitLookupStringArr[2] &&\n      splitCheckingStringArr[5] === splitLookupStringArr[5]\n    ) {\n      return true\n    }\n    return false\n  })\n  return reqdKeys\n}\n\nexport const delay = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const objectMap = (obj, fn) => obj ? Object.fromEntries(\n  Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)])\n) : obj\n\nexport const trim = (v) => {\n  if (typeof v === 'string') {\n    return v.trim()\n  }\n  return v\n}\n\nexport const returnFormattedOrderNumber = (orderNumber) => {\n  return 'Order #' + orderNumber\n}\n\nexport const trimExtraSpacesFromStringsInObject = (obj) => objectMap(obj, trim)\n"]}]}