{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/organism/ExpressReturnMethod.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/organism/ExpressReturnMethod.vue","mtime":1653330817032},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js","mtime":1649977089802}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ExpressReturnMethod.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <v-overlay\n      :value=\"isLoading\"\n      :z-index=\"1\"\n    >\n      <v-progress-circular\n        class=\"loader\"\n        indeterminate\n        size=\"50\"\n      />\n    </v-overlay>\n    <o-shipping-address\n      v-if=\"!isLoading\"\n      :dialog-type=\"DIALOG_SEARCH_LOCATION\"\n      :formatted-address=\"formattedAddress\"\n      :open-map-modal=\"openMapModal\"\n      :class=\"{\n        'ml-2': $vuetify.breakpoint.xs,\n        'mt-3': $vuetify.breakpoint.mdAndDown,\n        'mt-5': $vuetify.breakpoint.lgAndUp\n      }\"\n      class=\"mb-5 shipping-address\"\n    />\n    <div :class=\"$vuetify.breakpoint.mdAndDown ? 'map-view-sm' : 'map-view-lg'\">\n      <div id=\"map\" :class=\"$vuetify.breakpoint.mdAndDown ? 'map-sm' : 'map-lg'\" />\n      <map-tiles\n        :carriers=\"placesToCoords\"\n        :class=\"$vuetify.breakpoint.mdAndDown ? 'map-tiles-sm' : 'map-tiles-lg'\"\n        ref=\"map-tiles\"\n        :scroll-to-view=\"scrollToView\"\n      />\n    </div>\n    <o-dialog\n      :visible=\"isMapModalOpen\"\n      :is-full-screen=\"true\"\n      @close=\"closeMapModal\"\n    >\n      <search-return-location source=\"mapView\" />\n    </o-dialog>\n  </div>\n</template>\n\n<script>\nimport { findAllExpressReturnLocations } from '@/controllers/MapController.js'\nimport { mapGetters, mapMutations } from 'vuex'\nimport { CONSTANTS } from '@/constants/index.js'\nimport {\n  DIALOG_SEARCH_LOCATION\n} from '@/store/constants'\nimport OShippingAddress from '@/components/atoms/OShippingAddress.vue'\nimport ODialog from '@/components/atoms/ODialog.vue'\nimport SearchReturnLocation from '@/components/organism/SearchReturnLocation.vue'\nimport MapTiles from '@/components/organism/MapTiles.vue'\n\nexport default {\n  /* eslint-disable no-new */\n  /* eslint-disable no-undef */\n  name: 'ExpressReturnMethod',\n  components: { OShippingAddress, ODialog, SearchReturnLocation, MapTiles },\n  data () {\n    return {\n      shippingAddress: {},\n      DIALOG_SEARCH_LOCATION: DIALOG_SEARCH_LOCATION,\n      placesToCoords: [],\n      isLoading: true,\n      map: null,\n      markers: [],\n      isMapModalOpen: false,\n      centerIndex: 0,\n      centerIcon: {\n        url: require('@/assets/images/StaplesIcon.png'),\n        scaledSize: new google.maps.Size(28, 28)\n      },\n      mainIcon: {\n        url: require('@/assets/images/StaplesIcon.png'),\n        scaledSize: new google.maps.Size(20, 20)\n      },\n      homeIcon: {\n        url: require('@/assets/images/location-icon.png'),\n        scaledSize: new google.maps.Size(40, 40)\n      },\n      openedInfoWindow: null\n    }\n  },\n  computed: {\n    ...mapGetters({\n      policyReturnMethods: 'returns/policyReturnMethods',\n      returnMethods: 'returns/returnMethods',\n      formattedAddress: 'returns/formattedShippingAddress',\n      isModalOpen: 'returns/getIsModalOpen',\n      unformattedAddress: 'returns/getAddress'\n    })\n  },\n  watch: {\n    formattedAddress: {\n      deep: true,\n      handler () {\n        this.loadDropoffLocationData()\n      }\n    }\n  },\n  async mounted () {\n    try {\n      this.initMap()\n      await this.setInitialMarkers()\n    } catch (e) {\n      console.error(e)\n    }\n  },\n  methods: {\n    ...mapMutations({\n      closeModal: 'returns/closeModal'\n    }),\n    openMapModal () {\n      this.isMapModalOpen = true\n    },\n    closeMapModal () {\n      this.isMapModalOpen = false\n    },\n    async loadDropoffLocationData () {\n      // remove all existing markers\n      this.markers.map(marker => {\n        marker.marker.setMap(null)\n      })\n\n      // reset markers\n      this.markers = []\n\n      // close any necessary info window\n      if (this.openedInfoWindow !== null) {\n        this.openedInfoWindow.close()\n      }\n\n      // close modal if open\n      if (this.isMapModalOpen) {\n        this.closeMapModal()\n      }\n\n      try {\n        await this.setInitialMarkers()\n      } catch (e) {\n        console.error(e)\n      }\n      // reset refs\n      var lngth = Object.keys(this.$refs['map-tiles'].$refs).length\n      var initDiv = 'item' + String(0)\n      for (let j = this.placesToCoords.length; j < lngth; j++) {\n        const divName = 'item' + String(j)\n        delete this.$refs['map-tiles'].$refs[divName]\n      }\n      // reset center index\n      this.centerIndex = 0\n      this.$refs['map-tiles'].$refs[initDiv][0].$el.classList.add('bg-well')\n      this.$refs['map-tiles'].$refs[initDiv][0].$el.classList.remove('white')\n    },\n    scrollToView (i, openWindow) {\n      const refName = 'item' + String(i)\n      this.$refs['map-tiles'].$refs[refName][0].$el.scrollIntoView({ behavior: 'smooth' })\n      for (let j = 0; j < Object.keys(this.$refs['map-tiles'].$refs).length; j++) {\n        const divName = 'item' + String(j)\n        if (j === i) { // grey out clicked on tile\n          this.$refs['map-tiles'].$refs[divName][0].$el.classList.add('bg-well')\n          this.$refs['map-tiles'].$refs[divName][0].$el.classList.remove('white')\n        } else { // white out every other tile\n          this.$refs['map-tiles'].$refs[divName][0].$el.classList.add('white')\n          this.$refs['map-tiles'].$refs[divName][0].$el.classList.remove('bg-well')\n        }\n      }\n      if (openWindow) { // clicked on tile so open window\n        this.openInfoWindow(this.map, this.markers[i].marker, i, false)\n      }\n    },\n    initMap () {\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        center: { lng: CONSTANTS.BASE_LNG, lat: CONSTANTS.BASE_LAT },\n        zoom: 12,\n        options: {\n          zoomControl: false,\n          mapTypeControl: false,\n          scaleControl: false,\n          streetViewControl: false,\n          rotateControl: false,\n          fullscreenControl: false\n        }\n      })\n    },\n    openInfoWindow (map, marker, index, scrollToView) {\n      // change icons\n      // map.setCenter(marker.getPosition())\n\n      if (scrollToView) { // clicked on marker to scroll tile\n        this.scrollToView(index, false)\n      }\n\n      // not shipping address\n      if (index !== -1) {\n        marker.setIcon(this.centerIcon)\n      }\n      this.markers[this.centerIndex].marker.setIcon(this.mainIcon)\n\n      if (index !== -1) {\n        this.centerIndex = index\n      }\n\n      // open/close info windows\n      if (this.openedInfoWindow !== null) {\n        this.openedInfoWindow.close()\n      }\n\n      const infoWindow = new google.maps.InfoWindow({\n        content: this.createContentString(index)\n      })\n\n      infoWindow.open(map, marker)\n\n      this.openedInfoWindow = infoWindow\n    },\n    createMarker (map, openInfoWindow, index) {\n      let marker\n\n      if (index === this.centerIndex && index !== -1) { // first marker automatically bigger, center index is 0 atm\n        marker = new google.maps.Marker({\n          position: this.placesToCoords[index].position,\n          map,\n          icon: this.centerIcon\n        })\n      } else if (index !== -1) { // all other icons\n        marker = new google.maps.Marker({\n          position: this.placesToCoords[index].position,\n          map,\n          icon: this.mainIcon\n        })\n      } else { // home icon, no click listener\n        marker = new google.maps.Marker({\n          position: this.shippingAddress.position,\n          map,\n          icon: this.homeIcon\n        })\n      }\n\n      if (index !== -1) {\n        marker.addListener('click', (function (map, marker, index) {\n          return function () {\n            openInfoWindow(map, marker, index, true)\n          }\n        }(map, marker, index)))\n      }\n\n      this.markers.push({ marker: marker, distance: index !== -1 ? this.placesToCoords[index].distance : null, closingTime: index !== -1 ? this.placesToCoords[index].closingTime : null })\n    },\n    async setInitialMarkers () {\n      this.isLoading = true\n\n      const result = await findAllExpressReturnLocations(this.returnMethods, this.policyReturnMethods, true)\n      this.shippingAddress = result.shippingAddress\n      this.placesToCoords = result.placesToCoords\n\n      const { map, openInfoWindow } = this\n      for (let i = 0; i < this.placesToCoords.length; i++) {\n        this.createMarker(map, openInfoWindow, i)\n      }\n      this.createMarker(map, openInfoWindow, -1)\n      map.setCenter(this.markers[0].marker.getPosition()) // center is always first address for the moment\n\n      // have the first window automatically opened\n      const infoWindow = new google.maps.InfoWindow({\n        content: this.createContentString(0)\n      })\n\n      if (this.markers[0].distance !== null || this.markers[0].closingTime !== null) { // not home icon\n        infoWindow.open(map, this.markers[0].marker)\n        this.openedInfoWindow = infoWindow\n      }\n\n      this.isLoading = false\n    },\n    createContentString (index) {\n      if (this.markers[index].distance !== null && this.markers[index].closingTime !== null) {\n        const distance = this.markers[index].distance !== CONSTANTS.UNKNOWN ? (this.markers[index].distance) : ''\n        const closesAt = this.markers[index].closingTime !== CONSTANTS.UNKNOWN ? ('closes at ' + String(this.markers[index].closingTime)) : ''\n        const middle = (closesAt === '' || distance === '') ? '' : '  ' + '&middot;' + '  '\n        return '<div class=\"info-window-content\"><span class=\"info-window-text\">' + distance + middle + closesAt +\n        '</span></div>'\n      }\n      return ''\n    }\n  }\n}\n</script>\n\n<style>\n  .gmnoprint, .gm-style-cc {\n    display: none !important;\n    visibility: hidden !important;\n  }\n  .loader {\n    z-index: 11;\n    display: flex;\n    justify-content: center;\n  }\n  .map-lg {\n    width: 50%;\n    height: auto;\n  }\n  .info-window-text {\n    font-family: var(--bs-body-font-family);\n    font-size: 11px;\n    font-weight: var(--bs-body-font-weight);\n    color: var(--bs-body-color);\n    line-height: var(--bs-body-line-height);\n  }\n  .gm-style .gm-style-iw-c {\n    border-radius: 16px !important;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n    width: 180px;\n    height: 42px;\n    padding: 10px;\n  }\n  .gm-ui-hover-effect {\n    top: -3px !important;\n    right: 0px !important;\n  }\n  .map-view-lg {\n    display: flex;\n    height: 720px;\n    margin-bottom: 8px;\n    flex-direction: row-reverse;\n  }\n  .map-tiles-lg {\n    width: 50%;\n  }\n  .map-sm {\n    height: 342px;\n    width: 100%;\n  }\n  .map-tiles-sm {\n    width: 100%;\n  }\n  .map-view-sm {\n    flex-direction: column;\n    height: unset;\n  }\n  .shipping-address {\n    overflow: hidden !important;\n  }\n</style>\n"],"sourceRoot":"src/components/organism"}]}