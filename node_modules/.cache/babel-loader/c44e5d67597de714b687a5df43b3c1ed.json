{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/utils/index.js","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/utils/index.js","mtime":1664903772845},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1649977087118}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9Vc2Vycy9uYXZlZW5tdXRoeWFsYS9Eb2N1bWVudHMvUHJvamVjdHMvcmV0dXJuc19wb3J0YWxfdWkvcmV0dXJuc19wb3J0YWxfdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICIvVXNlcnMvbmF2ZWVubXV0aHlhbGEvRG9jdW1lbnRzL1Byb2plY3RzL3JldHVybnNfcG9ydGFsX3VpL3JldHVybnNfcG9ydGFsX3VpL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucGFkLXN0YXJ0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDgtYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5jb3B5LXdpdGhpbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmV2ZXJ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmlsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkubGFzdC1pbmRleC1vZi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJlZHVjZS1yaWdodC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnJldmVyc2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zZXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNvbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc3ViYXJyYXkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS50by1sb2NhbGUtc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkudWludDE2LWFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5mcm9tLWVudHJpZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgcGFrbyBmcm9tICdwYWtvJzsKaW1wb3J0IHsgT1JERVJfRElTUExBWSB9IGZyb20gJ2JyYW5kaW5nL3N0cmluZ3MuanNvbic7CmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRUZXh0KHdvcmQpIHsKICByZXR1cm4gd29yZC5zcGxpdCgnICcpLm1hcChmdW5jdGlvbiAod29yZCkgewogICAgaWYgKHdvcmQubGVuZ3RoIDwgMTgpIHJldHVybiB3b3JkO2Vsc2UgcmV0dXJuIHNwbGl0V29yZCh3b3JkKTsKICB9KS5qb2luKCcgJyk7Cn0KZXhwb3J0IGZ1bmN0aW9uIHNwbGl0V29yZCh3b3JkKSB7CiAgdmFyIG1pZGRsZSA9IE1hdGguZmxvb3Iod29yZC5sZW5ndGggLyAyKTsKICB2YXIgczEgPSB3b3JkLnN1YnN0cigwLCBtaWRkbGUpOwogIHZhciBzMiA9IHdvcmQuc3Vic3RyKG1pZGRsZSArIDEpOwogIHJldHVybiBzMSArICcgJyArIHMyOwp9CmV4cG9ydCBmdW5jdGlvbiBwYWQobnVtLCBzaXplKSB7CiAgbnVtID0gbnVtLnRvU3RyaW5nKCk7CgogIHdoaWxlIChudW0ubGVuZ3RoIDwgc2l6ZSkgewogICAgbnVtID0gJzAnICsgbnVtOwogIH0KCiAgcmV0dXJuIG51bTsKfQpleHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVPcmRlcklkKHN0cikgewogIHZhciBvcmRlcklkUmV4ID0gL1thLXpBLVowLTldL2c7CgogIGlmIChzdHIgIT09IHVuZGVmaW5lZCAmJiBzdHIgIT09IG51bGwpIHsKICAgIGlmIChzdHIubGVuZ3RoID49IDQgJiYgb3JkZXJJZFJleC50ZXN0KHN0cikpIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CiAgfQoKICByZXR1cm4gZmFsc2U7Cn0KZXhwb3J0IHZhciB2YWxpZGF0ZUVtYWlsID0gZnVuY3Rpb24gdmFsaWRhdGVFbWFpbChlbWFpbCkgewogIHJldHVybiBTdHJpbmcoZW1haWwpLnRvTG93ZXJDYXNlKCkubWF0Y2goL14oKFtePD4oKVtcXVxcLiw7OlxzQCJdKyhcLltePD4oKVtcXVxcLiw7OlxzQCJdKykqKXwoIi4rIikpQCgoXFtbMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XC5bMC05XXsxLDN9XF0pfCgoW2EtekEtWlwtMC05XStcLikrW2EtekEtWl17Mix9KSkkLyk7Cn07CmV4cG9ydCB2YXIgdmFsaWRhdGVaaXBjb2RlID0gZnVuY3Rpb24gdmFsaWRhdGVaaXBjb2RlKHppcGNvZGUpIHsKICB2YXIgemlwY29kZVJleCA9IC8oXlxkezV9JCl8KF5cZHs5fSQpfCheXGR7NX0tXGR7NH0kKS9nOwoKICBpZiAoemlwY29kZS5sZW5ndGggPT09IDYgfHwgemlwY29kZS5sZW5ndGggPT09IDcpIHsKICAgIHppcGNvZGVSZXggPSAvXltBQkNFR0hKLU5QUlNUVlhZXVxkW0FCQ0VHSEotTlBSU1RWLVpdWyAtXT9cZFtBQkNFR0hKLU5QUlNUVi1aXVxkJC9pOwogIH0KCiAgdmFyIGNoZWNrSXNaaXBjb2RlID0gemlwY29kZVJleC50ZXN0KHppcGNvZGUpOwogIHJldHVybiBjaGVja0lzWmlwY29kZTsKfTsKZXhwb3J0IGZ1bmN0aW9uIGdldEZvcm1hdHRlZERhdGUoZGF0ZSkgewogIGRhdGUgPSBuZXcgRGF0ZShkYXRlKTsKCiAgaWYgKGRhdGUpIHsKICAgIHZhciB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpOwogICAgdmFyIG1vbnRoID0gKDEgKyBkYXRlLmdldE1vbnRoKCkpLnRvU3RyaW5nKCkucGFkU3RhcnQoMiwgJzAnKTsKICAgIHZhciBkYXkgPSBkYXRlLmdldERhdGUoKS50b1N0cmluZygpLnBhZFN0YXJ0KDIsICcwJyk7CiAgICByZXR1cm4gbW9udGggKyAnLycgKyBkYXkgKyAnLycgKyB5ZWFyOwogIH0KCiAgcmV0dXJuIGRhdGU7Cn0KZXhwb3J0IGZ1bmN0aW9uIGRheU9mV2Vla0FzU3RyaW5nKGRheUluZGV4KSB7CiAgcmV0dXJuIFsnU3VuZGF5JywgJ01vbmRheScsICdUdWVzZGF5JywgJ1dlZG5lc2RheScsICdUaHVyc2RheScsICdGcmlkYXknLCAnU2F0dXJkYXknXVtkYXlJbmRleF0gfHwgJyc7Cn0KZXhwb3J0IGZ1bmN0aW9uIHRvUmVndWxhclRpbWUoX3JlZikgewogIHZhciBfcmVmJGRheUluZGV4ID0gX3JlZi5kYXlJbmRleCwKICAgICAgZGF5SW5kZXggPSBfcmVmJGRheUluZGV4ID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkZGF5SW5kZXgsCiAgICAgIGhvdXJzID0gX3JlZi5ob3VycywKICAgICAgbWludXRlcyA9IF9yZWYubWludXRlczsKICByZXR1cm4gaG91cnMgPT09IG51bGwgfHwgaG91cnMgPT09IG51bGwgPyAnJyA6ICIiLmNvbmNhdChob3VycyA+IDEyID8gaG91cnMgLSAxMiA6IGhvdXJzLCAiOiIpLmNvbmNhdChtaW51dGVzIDwgMTAgPyAnMCcgKyBtaW51dGVzIDogbWludXRlcywgIiAiKS5jb25jYXQoaG91cnMgPj0gMTIgPyAnUE0nIDogJ0FNJywgIiAiKS5jb25jYXQoZGF5SW5kZXggJiYgJ29uICcgKyBkYXlPZldlZWtBc1N0cmluZyhkYXlJbmRleCkpOwp9CmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0SW1hZ2VEYXRhKGltYWdlQmFzZTY0RGF0YSkgewogIGlmICghaW1hZ2VCYXNlNjREYXRhKSByZXR1cm47IC8vIERlY29kZSBiYXNlNjQgKGNvbnZlcnQgYXNjaWkgdG8gYmluYXJ5KQoKICB2YXIgc3RyRGF0YSA9IGF0b2IoaW1hZ2VCYXNlNjREYXRhKTsgLy8gQ29udmVydCBiaW5hcnkgc3RyaW5nIHRvIGNoYXJhY3Rlci1udW1iZXIgYXJyYXkKCiAgdmFyIGNoYXJEYXRhID0gc3RyRGF0YS5zcGxpdCgnJykubWFwKGZ1bmN0aW9uICh4KSB7CiAgICByZXR1cm4geC5jaGFyQ29kZUF0KDApOwogIH0pOyAvLyBUdXJuIG51bWJlciBhcnJheSBpbnRvIGJ5dGUtYXJyYXkKCiAgdmFyIGJpbkRhdGEgPSBuZXcgVWludDhBcnJheShjaGFyRGF0YSk7IC8vIFBha28gbWFnaWMKCiAgdmFyIGRhdGEgPSBwYWtvLmluZmxhdGUoYmluRGF0YSk7IC8vIENvbnZlcnQgZ3VuemlwcGVkIGJ5dGVBcnJheSBiYWNrIHRvIGFzY2lpIHN0cmluZzoKCiAgdmFyIGltZ0RhdGEgPSBTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIG5ldyBVaW50MTZBcnJheShkYXRhKSk7CiAgdmFyIGVuY29kZWRJbWdEYXRhID0gZW5jb2RlVVJJQ29tcG9uZW50KGltZ0RhdGEpOwogIHZhciBpbWFnZSA9ICdkYXRhOmltYWdlL3N2Zyt4bWw7dXRmOCwnICsgZW5jb2RlZEltZ0RhdGE7CiAgcmV0dXJuIGltYWdlOwp9CmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuVmFyaWFudCh2YXJpYW50KSB7CiAgdmFyIGZsYXR0ZW5lZEF0dHJpYnV0ZXMgPSB7fTsKICB2YXJpYW50LmF0dHJpYnV0ZXMuZm9yRWFjaChmdW5jdGlvbiAoYSkgewogICAgZmxhdHRlbmVkQXR0cmlidXRlc1thLm5hbWUudG9Mb3dlckNhc2UoKV0gPSBhLnZhbHVlOwogIH0pOwogIHJldHVybiBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGZsYXR0ZW5lZEF0dHJpYnV0ZXMpLCB2YXJpYW50KTsKfQpleHBvcnQgZnVuY3Rpb24gZmxhdHRlblZhcmlhbnRzKHJhd1ZhcmlhbnRzKSB7CiAgcmV0dXJuIHJhd1ZhcmlhbnRzLm1hcChmdW5jdGlvbiAodikgewogICAgcmV0dXJuIGZsYXR0ZW5WYXJpYW50KHYpOwogIH0pOwp9CmV4cG9ydCBmdW5jdGlvbiBnZXREaXN0YW5jZVZhbHVlKG1lYXN1cmUpIHsKICByZXR1cm4gcGFyc2VGbG9hdChtZWFzdXJlID09PSBudWxsIHx8IG1lYXN1cmUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1lYXN1cmUucmVwbGFjZSgvLC9nLCAnJykuc3BsaXQoJyAnKVswXSk7IC8vIHNlcGFyYXRlIHVuaXQgcGFydCBhbmQgcmV0dXJuIG9ubHkgdmFsdWUgYXMgYSBudW1iZXIKfQpleHBvcnQgZnVuY3Rpb24gaXNTdG9yZVdpdGhpbkRpc3RhbmNlKGRpc3RhbmNlLCBtYXhEaXN0YW5jZSkgewogIHJldHVybiBnZXREaXN0YW5jZVZhbHVlKGRpc3RhbmNlKSA8PSBtYXhEaXN0YW5jZTsKfQpleHBvcnQgZnVuY3Rpb24gZ2V0TG9va3VwS2V5cyhrZXlzQXJyLCBjaGVja2luZ1N0cmluZykgewogIC8vICR7c3RhdGV9XyR7emlwQ29kZX1fJHtjaXR5fV8ke25hbWV9XyR7dHlwZX1faW5mbwogIHZhciBzcGxpdENoZWNraW5nU3RyaW5nQXJyID0gY2hlY2tpbmdTdHJpbmcuc3BsaXQoJ18nKTsKICB2YXIgcmVxZEtleXMgPSBrZXlzQXJyLmZpbHRlcihmdW5jdGlvbiAobG9va3VwS2V5KSB7CiAgICB2YXIgc3BsaXRMb29rdXBTdHJpbmdBcnIgPSBsb29rdXBLZXkuc3BsaXQoJ18nKTsKCiAgICBpZiAoc3BsaXRDaGVja2luZ1N0cmluZ0Fyci5sZW5ndGggPT09IDYgJiYgc3BsaXRDaGVja2luZ1N0cmluZ0FyclswXSA9PT0gc3BsaXRMb29rdXBTdHJpbmdBcnJbMF0gJiYgc3BsaXRDaGVja2luZ1N0cmluZ0FyclsxXSA9PT0gc3BsaXRMb29rdXBTdHJpbmdBcnJbMV0gJiYgc3BsaXRDaGVja2luZ1N0cmluZ0FyclsyXSA9PT0gc3BsaXRMb29rdXBTdHJpbmdBcnJbMl0gJiYgc3BsaXRDaGVja2luZ1N0cmluZ0Fycls1XSA9PT0gc3BsaXRMb29rdXBTdHJpbmdBcnJbNV0pIHsKICAgICAgcmV0dXJuIHRydWU7CiAgICB9CgogICAgcmV0dXJuIGZhbHNlOwogIH0pOwogIHJldHVybiByZXFkS2V5czsKfQpleHBvcnQgdmFyIGRlbGF5ID0gZnVuY3Rpb24gZGVsYXkobXMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUpIHsKICAgIHJldHVybiBzZXRUaW1lb3V0KHJlc29sdmUsIG1zKTsKICB9KTsKfTsKZXhwb3J0IHZhciBvYmplY3RNYXAgPSBmdW5jdGlvbiBvYmplY3RNYXAob2JqLCBmbikgewogIHJldHVybiBvYmogPyBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMob2JqKS5tYXAoZnVuY3Rpb24gKF9yZWYyLCBpKSB7CiAgICB2YXIgX3JlZjMgPSBfc2xpY2VkVG9BcnJheShfcmVmMiwgMiksCiAgICAgICAgayA9IF9yZWYzWzBdLAogICAgICAgIHYgPSBfcmVmM1sxXTsKCiAgICByZXR1cm4gW2ssIGZuKHYsIGssIGkpXTsKICB9KSkgOiBvYmo7Cn07CmV4cG9ydCB2YXIgdHJpbSA9IGZ1bmN0aW9uIHRyaW0odikgewogIGlmICh0eXBlb2YgdiA9PT0gJ3N0cmluZycpIHsKICAgIHJldHVybiB2LnRyaW0oKTsKICB9CgogIHJldHVybiB2Owp9OwpleHBvcnQgdmFyIHJldHVybkZvcm1hdHRlZE9yZGVyTnVtYmVyID0gZnVuY3Rpb24gcmV0dXJuRm9ybWF0dGVkT3JkZXJOdW1iZXIob3JkZXJOdW1iZXIpIHsKICByZXR1cm4gT1JERVJfRElTUExBWS5PUkRFUiArICcgIycgKyBvcmRlck51bWJlcjsKfTsKZXhwb3J0IHZhciB0cmltRXh0cmFTcGFjZXNGcm9tU3RyaW5nc0luT2JqZWN0ID0gZnVuY3Rpb24gdHJpbUV4dHJhU3BhY2VzRnJvbVN0cmluZ3NJbk9iamVjdChvYmopIHsKICByZXR1cm4gb2JqZWN0TWFwKG9iaiwgdHJpbSk7Cn07CmV4cG9ydCB2YXIgZm9ybWF0VGFncyA9IGZ1bmN0aW9uIGZvcm1hdFRhZ3MoaXRlbSkgewogIHZhciBfaXRlbSR0YWdzOwoKICB2YXIgZm9ybWF0dGVkSXRlbVRhZ3MgPSB7fTsgLy8gcGFyc2UgdGFncyBpZiBpbiBmb3JtYXQgdGFnOnZhbHVlCgogIHZhciBwYXJzZWRUYWdzID0gaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2l0ZW0kdGFncyA9IGl0ZW0udGFncykgPT09IG51bGwgfHwgX2l0ZW0kdGFncyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2l0ZW0kdGFncy5tYXAoZnVuY3Rpb24gKHRhZykgewogICAgcmV0dXJuIHRhZyAhPT0gbnVsbCAmJiB0YWcgIT09IHZvaWQgMCAmJiB0YWcuaW5jbHVkZXMoJzonKSA/IHRhZyA9PT0gbnVsbCB8fCB0YWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRhZy5zcGxpdCgnOicpIDogdGFnOwogIH0pOyAvLyBhZGQgdGFncyB0byBmb3JtYXR0ZWRUYWdzIG9iamVjdCAtLSBmb3JtYXQ6IHRhZzp2YWx1ZSBvciB0YWc6dHJ1ZQoKICBpZiAocGFyc2VkVGFncykgewogICAgcGFyc2VkVGFncy5mb3JFYWNoKGZ1bmN0aW9uICh0YWcpIHsKICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGFnKSAmJiB0YWcubGVuZ3RoID4gMSkgewogICAgICAgIGZvcm1hdHRlZEl0ZW1UYWdzW3RhZ1swXV0gPSB0YWdbMV07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZm9ybWF0dGVkSXRlbVRhZ3NbdGFnXSA9IHRydWU7CiAgICAgIH0KICAgIH0pOwogIH0KCiAgcmV0dXJuIGZvcm1hdHRlZEl0ZW1UYWdzOwp9Ow=="},{"version":3,"sources":["/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/utils/index.js"],"names":["pako","ORDER_DISPLAY","formatText","word","split","map","length","splitWord","join","middle","Math","floor","s1","substr","s2","pad","num","size","toString","validateOrderId","str","orderIdRex","undefined","test","validateEmail","email","String","toLowerCase","match","validateZipcode","zipcode","zipcodeRex","checkIsZipcode","getFormattedDate","date","Date","year","getFullYear","month","getMonth","padStart","day","getDate","dayOfWeekAsString","dayIndex","toRegularTime","hours","minutes","convertImageData","imageBase64Data","strData","atob","charData","x","charCodeAt","binData","Uint8Array","data","inflate","imgData","fromCharCode","apply","Uint16Array","encodedImgData","encodeURIComponent","image","flattenVariant","variant","flattenedAttributes","attributes","forEach","a","name","value","flattenVariants","rawVariants","v","getDistanceValue","measure","parseFloat","replace","isStoreWithinDistance","distance","maxDistance","getLookupKeys","keysArr","checkingString","splitCheckingStringArr","reqdKeys","filter","lookupKey","splitLookupStringArr","delay","ms","Promise","resolve","setTimeout","objectMap","obj","fn","Object","fromEntries","entries","i","k","trim","returnFormattedOrderNumber","orderNumber","ORDER","trimExtraSpacesFromStringsInObject","formatTags","item","formattedItemTags","parsedTags","tags","tag","includes","Array","isArray"],"mappings":"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","sourcesContent":["import pako from 'pako'\nimport { ORDER_DISPLAY } from 'branding/strings.json'\n\nexport function formatText (word) {\n  return word\n    .split(' ')\n    .map((word) => {\n      if (word.length < 18) return word\n      else return splitWord(word)\n    })\n    .join(' ')\n}\n\nexport function splitWord (word) {\n  var middle = Math.floor(word.length / 2)\n\n  var s1 = word.substr(0, middle)\n  var s2 = word.substr(middle + 1)\n\n  return s1 + ' ' + s2\n}\n\nexport function pad (num, size) {\n  num = num.toString()\n  while (num.length < size) num = '0' + num\n  return num\n}\n\nexport function validateOrderId (str) {\n  const orderIdRex = /[a-zA-Z0-9]/g\n  if (str !== undefined && str !== null) {\n    if (str.length >= 4 && orderIdRex.test(str)) {\n      return true\n    }\n  }\n  return false\n}\n\nexport const validateEmail = (email) => String(email)\n  .toLowerCase()\n  .match(\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  )\n\nexport const validateZipcode = (zipcode) => {\n  let zipcodeRex = /(^\\d{5}$)|(^\\d{9}$)|(^\\d{5}-\\d{4}$)/g\n  if (zipcode.length === 6 || zipcode.length === 7) {\n    zipcodeRex = /^[ABCEGHJ-NPRSTVXY]\\d[ABCEGHJ-NPRSTV-Z][ -]?\\d[ABCEGHJ-NPRSTV-Z]\\d$/i\n  }\n  const checkIsZipcode = zipcodeRex.test(zipcode)\n  return checkIsZipcode\n}\n\nexport function getFormattedDate (date) {\n  date = new Date(date)\n  if (date) {\n    const year = date.getFullYear()\n    const month = (1 + date.getMonth()).toString().padStart(2, '0')\n    const day = date\n      .getDate()\n      .toString()\n      .padStart(2, '0')\n\n    return month + '/' + day + '/' + year\n  }\n  return date\n}\n\nexport function dayOfWeekAsString (dayIndex) {\n  return (\n    [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday'\n    ][dayIndex] || ''\n  )\n}\n\nexport function toRegularTime ({ dayIndex = '', hours, minutes }) {\n  return hours === null || hours === null\n    ? ''\n    : `${hours > 12 ? hours - 12 : hours}:${\n        minutes < 10 ? '0' + minutes : minutes\n      } ${hours >= 12 ? 'PM' : 'AM'} ${dayIndex &&\n        'on ' + dayOfWeekAsString(dayIndex)}`\n}\n\nexport function convertImageData (imageBase64Data) {\n  if (!imageBase64Data) return\n\n  // Decode base64 (convert ascii to binary)\n  const strData = atob(imageBase64Data)\n\n  // Convert binary string to character-number array\n  const charData = strData.split('').map(function (x) {\n    return x.charCodeAt(0)\n  })\n\n  // Turn number array into byte-array\n  const binData = new Uint8Array(charData)\n\n  // Pako magic\n  const data = pako.inflate(binData)\n\n  // Convert gunzipped byteArray back to ascii string:\n  const imgData = String.fromCharCode.apply(null, new Uint16Array(data))\n  const encodedImgData = encodeURIComponent(imgData)\n  const image = 'data:image/svg+xml;utf8,' + encodedImgData\n\n  return image\n}\n\nexport function flattenVariant (variant) {\n  const flattenedAttributes = {}\n  variant.attributes.forEach((a) => {\n    flattenedAttributes[a.name.toLowerCase()] = a.value\n  })\n  return {\n    ...flattenedAttributes,\n    ...variant\n  }\n}\n\nexport function flattenVariants (rawVariants) {\n  return rawVariants.map((v) => flattenVariant(v))\n}\n\nexport function getDistanceValue (measure) {\n  return parseFloat(measure?.replace(/,/g, '').split(' ')[0]) // separate unit part and return only value as a number\n}\n\nexport function isStoreWithinDistance (distance, maxDistance) {\n  return getDistanceValue(distance) <= maxDistance\n}\n\nexport function getLookupKeys (keysArr, checkingString) {\n  // ${state}_${zipCode}_${city}_${name}_${type}_info\n  const splitCheckingStringArr = checkingString.split('_')\n  const reqdKeys = keysArr.filter((lookupKey) => {\n    const splitLookupStringArr = lookupKey.split('_')\n    if (\n      splitCheckingStringArr.length === 6 &&\n      splitCheckingStringArr[0] === splitLookupStringArr[0] &&\n      splitCheckingStringArr[1] === splitLookupStringArr[1] &&\n      splitCheckingStringArr[2] === splitLookupStringArr[2] &&\n      splitCheckingStringArr[5] === splitLookupStringArr[5]\n    ) {\n      return true\n    }\n    return false\n  })\n  return reqdKeys\n}\n\nexport const delay = (ms) => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport const objectMap = (obj, fn) => obj ? Object.fromEntries(\n  Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)])\n) : obj\n\nexport const trim = (v) => {\n  if (typeof v === 'string') {\n    return v.trim()\n  }\n  return v\n}\n\nexport const returnFormattedOrderNumber = (orderNumber) => {\n  return ORDER_DISPLAY.ORDER + ' #' + orderNumber\n}\n\nexport const trimExtraSpacesFromStringsInObject = (obj) => objectMap(obj, trim)\n\nexport const formatTags = (item) => {\n  const formattedItemTags = {}\n  // parse tags if in format tag:value\n  const parsedTags = item?.tags?.map(tag => tag?.includes(':') ? tag?.split(':') : tag)\n  // add tags to formattedTags object -- format: tag:value or tag:true\n  if (parsedTags) {\n    parsedTags.forEach(tag => {\n      if (Array.isArray(tag) && tag.length > 1) {\n        formattedItemTags[tag[0]] = tag[1]\n      } else {\n        formattedItemTags[tag] = true\n      }\n    })\n  }\n  return formattedItemTags\n}\n"]}]}