{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/controllers/exchangesController.js","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/controllers/exchangesController.js","mtime":1652147712643},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1649977087118}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/controllers/exchangesController.js"],"names":["store","CONSTANTS","UPDATE_EXCHANGE_LIST","RETURN_REASON_ACTION","ACTION_TYPE","isExchangesEnabled","getFieldsFromStore","exchangesAllowed","isGiftReturn","selectedItems","item","length","quantity","canExchangeSize","isTrustWorthyUser","reason","variants","getSizeOptionsForSelectedVariant","color","hasSizeOptions","filter","v","disabled","recommendation_type","SIZE","canExchangeColor","getColorOptionsForSelectedVariant","hasColorOptions","COLOR","canExchangeDamaged","variant","getVariantForItem","enabled","quantity_in_stock","DAMAGED","canExchangeOther","getColorOptionsForPDP","hasOptions","OTHER","selectedColor","originalVariantIncluded","sizes","exchangeVariants","map","sku","subtitle","push","sortSizes","colors","size","name","title","option","getColorOptionsForColorView","options","filtered","o","getPreviouslySelectedOption","exchangeList","find","exchangedItem","identifier","getDefaultValue","actionType","previouslySelectedOption","undefined","items","originalItem","e","defaultItem","saveSelectedItemToStore","selectedItem","commit","handleColorOrSizeOptionSelected","selectedSize","optionForSelectedSizeAndColor","isDisabled","isSameVariant","getters","exchanges_allowed","currentItemIndex","exchangeEligibility","repurchase_model_decision","sizeOrder","includes","sort","a","b","indexOf","Number"],"mappings":"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","sourcesContent":["import store from '@/store'\nimport { CONSTANTS } from '@/constants'\nimport { UPDATE_EXCHANGE_LIST } from '@/store/constants'\n\nconst RETURN_REASON_ACTION = CONSTANTS.RETURN_REASON_ACTION\nconst ACTION_TYPE = CONSTANTS.ACTION_TYPE\n\nexport const isExchangesEnabled = () => {\n  const {\n    exchangesAllowed,\n    isGiftReturn,\n    selectedItems,\n    item\n  } = getFieldsFromStore()\n\n  return (\n    exchangesAllowed &&\n    !isGiftReturn &&\n    selectedItems?.length === 1 && // TODO: will be removed for multiple items selected\n    item?.quantity === 1 // TODO: will be removed once the calculation is fixed\n  )\n}\n\n// an item can be exchanged for size if and only if the following is true:\n// 1. the client has exchanges allowed == true\n// 2. at least one of the variants has quantity_in_stock > 0\n// 3. that variant is of the same color as the item\n// 4. not a gift return\n// 5. is a trustworthyuser\n// 6. there is at least one item that is not disabled\n\nexport const canExchangeSize = () => {\n  const { item, isTrustWorthyUser, reason } = getFieldsFromStore()\n\n  const variants = getSizeOptionsForSelectedVariant(item?.color)\n  const hasSizeOptions = variants.filter((v) => !v.disabled).length > 0\n\n  return (\n    isExchangesEnabled &&\n    reason.recommendation_type === RETURN_REASON_ACTION.SIZE &&\n    hasSizeOptions &&\n    isTrustWorthyUser\n  )\n}\n\nexport const canExchangeColor = () => {\n  const { item, isTrustWorthyUser, reason } = getFieldsFromStore()\n\n  const variants = getColorOptionsForSelectedVariant(item)\n\n  const hasColorOptions = variants.filter((v) => !v.disabled).length > 0\n\n  return (\n    isExchangesEnabled &&\n    reason.recommendation_type === RETURN_REASON_ACTION.COLOR &&\n    hasColorOptions &&\n    isTrustWorthyUser\n  )\n}\nexport const canExchangeDamaged = () => {\n  const { item, isTrustWorthyUser, reason } = getFieldsFromStore()\n\n  const variant = getVariantForItem(item)\n\n  const enabled = variant && variant.quantity_in_stock > 0\n\n  return (\n    isExchangesEnabled &&\n    reason.recommendation_type === RETURN_REASON_ACTION.DAMAGED &&\n    enabled &&\n    isTrustWorthyUser\n  )\n}\nexport const canExchangeOther = () => {\n  const {\n    // item,\n    isTrustWorthyUser,\n    reason\n  } = getFieldsFromStore()\n\n  const variants = getColorOptionsForPDP()\n  const hasOptions = variants.filter((v) => !v.disabled).length > 0\n\n  return (\n    isExchangesEnabled &&\n    reason.recommendation_type === RETURN_REASON_ACTION.OTHER &&\n    hasOptions &&\n    isTrustWorthyUser\n  )\n}\n\n/*\n * GETTERS\n */\n\n// Return the options for each variant\nexport const getSizeOptionsForSelectedVariant = (selectedColor) => {\n  const { item } = getFieldsFromStore()\n  let originalVariantIncluded = false\n\n  const sizes = item.exchangeVariants\n    ?.filter((variant) => variant.color === selectedColor)\n    .map((variant) => {\n      if (variant.sku === item.sku) {\n        originalVariantIncluded = true\n      }\n      return {\n        ...variant,\n        disabled: variant.sku === item.sku || variant.quantity_in_stock <= 0,\n        subtitle: variant.sku === item.sku ? 'Original Purchase' : ''\n      }\n    })\n\n  if (item.color === selectedColor && !originalVariantIncluded) {\n    sizes.push({\n      ...item,\n      disabled: true,\n      subtitle: 'Original Purchase'\n    })\n  }\n\n  return sizes.length > 0 ? sortSizes(sizes) : []\n}\n\nexport const getColorOptionsForSelectedVariant = (item) => {\n  let originalVariantIncluded = false\n  let colors = item.exchangeVariants\n    ?.filter((variant) => variant.size === item.size)\n    .map((variant) => {\n      if (variant.sku === item.sku) {\n        originalVariantIncluded = true\n      }\n      return {\n        ...variant,\n        disabled: variant.sku === item.sku || variant.quantity_in_stock <= 0,\n        name: variant.title,\n        subtitle: variant.sku === item.sku ? 'Original Purchase' : ''\n      }\n    })\n\n  if (!originalVariantIncluded) {\n    colors = [\n      {\n        ...item,\n        disabled: true,\n        name: item.title,\n        subtitle: 'Original Purchase'\n      },\n      ...colors\n    ]\n  }\n  return colors\n}\n\nexport const getColorOptionsForPDP = () => {\n  const { item } = getFieldsFromStore()\n\n  // 1 get all color options and make disabled by default\n  // 2 check the sizes for each option and if at least one not disabled, make color enabled\n  // filter out the disabled colors\n  return getColorOptionsForSelectedVariant(item)\n    .map((option) => {\n      const enabled =\n        getSizeOptionsForSelectedVariant(option.color).filter(\n          (v) => !v.disabled\n        ).length > 0\n\n      return { ...option, disabled: !enabled }\n    })\n    .filter((option) => !option.disabled)\n}\n\nexport const getColorOptionsForColorView = () => {\n  const { item } = getFieldsFromStore()\n\n  const options = getColorOptionsForSelectedVariant(item)\n\n  const filtered = options.filter(\n    (o) => !o.disabled || o.subtitle === 'Original Purchase'\n  )\n\n  return filtered\n}\n\nexport const getPreviouslySelectedOption = () => {\n  const { item, exchangeList } = getFieldsFromStore()\n\n  return exchangeList?.find(\n    (exchangedItem) => exchangedItem?.identifier === item?.identifier\n  )\n}\n\nexport const getDefaultValue = (\n  actionType = ACTION_TYPE.SIZE,\n  selectedColor\n) => {\n  const { item } = getFieldsFromStore()\n\n  const previouslySelectedOption = getPreviouslySelectedOption()\n\n  //  if the actiontype is color, and there is a a previously selected option,\n  // return the previously selected color\n  // else return undefind\n  if (actionType === ACTION_TYPE.COLOR) {\n    if (\n      previouslySelectedOption &&\n      previouslySelectedOption.size === item.size\n    ) {\n      return previouslySelectedOption\n    } else {\n      return undefined\n    }\n  }\n  const items = getSizeOptionsForSelectedVariant(selectedColor || item?.color)\n\n  const originalItem = items.find((e) => e.subtitle === 'Original Purchase')\n  // return the previously selected item by default unless the previously selected item was not of the same color as the default item\n  let defaultItem = previouslySelectedOption || originalItem || items[0]\n\n  if (\n    originalItem &&\n    previouslySelectedOption &&\n    originalItem.color !== previouslySelectedOption?.color\n  ) {\n    defaultItem = originalItem\n  }\n  return defaultItem\n}\n\nexport const saveSelectedItemToStore = (selectedItem) => {\n  const { item, reason } = getFieldsFromStore()\n  store.commit('order/' + UPDATE_EXCHANGE_LIST, {\n    ...selectedItem,\n    identifier: item.identifier,\n    originalItem: item,\n    reason: reason\n  })\n}\n\nexport const handleColorOrSizeOptionSelected = (\n  selectedItem,\n  actionType,\n  item,\n  selectedSize,\n  selectedColor\n) => {\n  let variants = []\n  if (actionType === ACTION_TYPE.COLOR) {\n    variants = getSizeOptionsForSelectedVariant(selectedColor)\n  }\n  if (actionType === ACTION_TYPE.SIZE) {\n    variants = getColorOptionsForSelectedVariant(item)\n  }\n\n  const optionForSelectedSizeAndColor = variants.find(\n    (variant) =>\n      variant.size === selectedSize && variant.color === selectedColor\n  )\n\n  if (\n    optionForSelectedSizeAndColor &&\n    !optionForSelectedSizeAndColor.isDisabled\n  ) {\n    selectedItem = optionForSelectedSizeAndColor\n    selectedSize = optionForSelectedSizeAndColor.size\n    selectedColor = optionForSelectedSizeAndColor.color\n  } else {\n    if (actionType === ACTION_TYPE.COLOR) {\n      selectedSize = null\n    }\n  }\n\n  return {\n    selectedSize,\n    selectedColor,\n    selectedItem\n  }\n}\n\nexport const getVariantForItem = (\n  item,\n  size = item.size,\n  color = item.color\n) => {\n  return item.exchangeVariants.find(\n    (variant) => variant.size === size && variant.color === color\n  )\n}\n\nexport const isSameVariant = ({ size, color }) => {\n  const { item } = getFieldsFromStore()\n  return item.color === color && item.size === size\n}\n\nconst getFieldsFromStore = () => {\n  const { exchanges_allowed: exchangesAllowed } = store.getters[\n    'returns/policies'\n  ]\n  const currentItemIndex = store.getters['returns/currentItemIndex']\n  const selectedItems = store.getters['order/selectedItems']\n  const item = selectedItems[currentItemIndex]\n  const isGiftReturn = store.getters['ui/isGiftReturn']\n  const reason = store.getters['returns/reason']\n  const exchangeList = store.getters['order/exchangeList']\n  const exchangeEligibility = store.getters['exchange/getExchangeEligibility']\n  const isTrustWorthyUser = exchangeEligibility?.repurchase_model_decision\n\n  return {\n    exchangesAllowed,\n    item,\n    isTrustWorthyUser,\n    isGiftReturn,\n    reason,\n    selectedItems,\n    exchangeList\n  }\n}\n\nconst sortSizes = (sizes) => {\n  // Order sizes before returning them\n  const sizeOrder = ['XXXL', 'XXL', 'XL', 'L', 'M', 'S', 'XS', 'XXS', 'XXXS']\n\n  if (sizeOrder.includes(sizes[0].size)) {\n    return sizes.sort((a, b) => {\n      return sizeOrder.indexOf(b.size) - sizeOrder.indexOf(a.size)\n    })\n  } else if (Number(sizes[0].size)) {\n    return sizes.sort((a, b) => Number(b.size) - Number(a.size))\n  } else {\n    return sizes.sort((a, b) => b.size < a.size)\n  }\n}\n"]}]}