{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/controllers/map.js","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/controllers/map.js","mtime":1651609347370},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1649977087118}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/controllers/map.js"],"names":["googleMapsService","store","CONSTANTS","returnShippingOptions","getNearbyStores","shippingOptions","shippingAddress","getters","expressReturns","getExpressReturns","Error","dispatch","carrier","index","findIndex","option","type","RETURN_METHODS","EXPRESS_RETURNS","getShippingAddress","getLatLng","latLng","marker","lat","lng","position","address","checkForExpressDropoffOptions","returnMethods","policyReturnMethods","expressReturnsEnabled","policy","feature_flags","map_enabled","policy_return_methods","method","findAllExpressReturnLocations","nearbyCarriers","placesToCoords","length","console","error","getDropoffLocations","places","markers","i","formattedAddress","push","icon","distance","UNKNOWN","closingTime","openingHours","todayClosingTime"],"mappings":"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","sourcesContent":["import googleMapsService from '@/common/googleMaps.service'\nimport store from '../store'\nimport { CONSTANTS } from '@/constants/index.js'\nimport { returnShippingOptions } from '@/utils'\n\nexport async function getNearbyStores (shippingOptions) {\n  const shippingAddress = store.getters['returns/getAddress']\n  const expressReturns = getExpressReturns(shippingOptions)\n  if (expressReturns === null) {\n    throw new Error('No Express Returns Available')\n  }\n  await store.dispatch('returns/fetchNearbyCarriers', {\n    carrier: expressReturns,\n    shippingAddress: shippingAddress\n  }) // puts nearby carriers in the store\n}\n\n// returns empty string if no express returns\nexport function getExpressReturns (shippingOptions) {\n  const index = shippingOptions.findIndex(option => option.type === CONSTANTS.RETURN_METHODS.EXPRESS_RETURNS)\n  return index !== -1 ? shippingOptions[index] : null\n}\n\nexport async function getShippingAddress () {\n  const shippingAddress = store.getters['returns/formattedShippingAddress']\n  const latLng = await googleMapsService.getLatLng(shippingAddress)\n  const marker = {\n    lat: latLng.lat,\n    lng: latLng.lng\n  }\n  return { position: marker, address: shippingAddress }\n}\n\nexport async function checkForExpressDropoffOptions (returnMethods, policyReturnMethods) {\n  let expressReturnsEnabled = false\n  try {\n    const policy = store.getters['returns/policies']\n    if (policy.feature_flags.map_enabled) {\n      expressReturnsEnabled = policy.policy_return_methods.findIndex(method => method.type === CONSTANTS.RETURN_METHODS.EXPRESS_RETURNS) !== -1\n    }\n    if (expressReturnsEnabled) {\n      const nearbyCarriers = await findAllExpressReturnLocations(returnMethods, policyReturnMethods)\n      if (nearbyCarriers.placesToCoords.length === 0) {\n        expressReturnsEnabled = false\n      }\n    }\n  } catch (e) {\n    console.error(e)\n  }\n  return expressReturnsEnabled\n}\n\nexport async function getDropoffLocations () { // returns placesToCoords\n  const places = store.getters['returns/getNearbyCarriers']\n  const markers = []\n  for (var i = 0; i < places.length; i++) {\n    const latLng = await googleMapsService.getLatLng(places[i].formattedAddress)\n    const marker = {\n      lat: latLng.lat,\n      lng: latLng.lng\n    }\n    markers.push({ icon: places[i].icon, position: marker, address: places[i].formattedAddress, distance: places[i].distance !== null ? places[i].distance : CONSTANTS.UNKNOWN, closingTime: places[i].openingHours.todayClosingTime !== null ? places[i].openingHours.todayClosingTime : CONSTANTS.UNKNOWN })\n  }\n  return markers\n}\n\nexport async function findAllExpressReturnLocations (returnMethods, policyReturnMethods) {\n  const shippingAddress = await getShippingAddress()\n  let placesToCoords = []\n  const shippingOptions = returnShippingOptions(returnMethods, policyReturnMethods)\n  if (shippingOptions && shippingOptions.length > 0 && getExpressReturns(shippingOptions) !== null) { // correct shipping options available\n    await getNearbyStores(shippingOptions)\n    placesToCoords = await getDropoffLocations()\n  }\n  return { shippingAddress: shippingAddress, placesToCoords: placesToCoords }\n}\n"]}]}