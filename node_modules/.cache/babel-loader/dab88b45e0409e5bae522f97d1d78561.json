{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/store/modules/returns/actions.js","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/store/modules/returns/actions.js","mtime":1650554756663},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1649977087118}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/store/modules/returns/actions.js"],"names":["googleMapsService","toRegularTime","validStoreName","isStoreWithinDistance","getLookupKeys","store","formattedTime","hours","minutes","parseInt","sleep","milliseconds","Promise","resolve","setTimeout","GOOGLE_MAP_API_CACHE","GOOGLE_MAP_API_PID_CACHE","GOOGLE_MAP_API_DIST_CACHE","getFormattedStoreTime","place","closingHours","openingHours","openingMinutes","closingMinutes","dayIndex","currentDay","Date","getDay","currentTime","getHours","getMinutes","todaysPeriodArr","opening_hours","periods","filter","reqdDay","close","day","length","count","dayPeriodArr","Math","abs","open","index","closingTime","openingTime","fetchAddressInfo","commit","shippingAddress","returnMethods","isReturnMethodCommited","updatedMethods","all","map","method","type","distanceThreshold","name","customer_facing_carrier","zip_code","substring","street1","state","zipCode","city","lookupKey","keys","Object","rMethods","key","push","getPlaces","places","validPlaces","operationalStores","businessStatus","business_status","result","placeId","place_id","getDetails","getDistance","formatted_address","distance","formattedPhoneNumber","formatted_phone_number","formattedAddress","isOpen","weekday_text","todayClosingTime","todayOpeningTime","console","error","fetchNearbyCarriers","carrier","results","slice","carriers","icon","sort","a","b","split","dispatch"],"mappings":"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","sourcesContent":["import googleMapsService from '@/common/googleMaps.service'\nimport { toRegularTime, validStoreName, isStoreWithinDistance, getLookupKeys } from '@/utils'\nimport store from '@/store'\n\n// in HHMM format\nconst formattedTime = (hours, minutes) => {\n  return parseInt(`${hours}${minutes < 10 ? '0' + minutes : minutes}`)\n}\n\nconst sleep = (milliseconds) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\nconst GOOGLE_MAP_API_CACHE = {}\nconst GOOGLE_MAP_API_PID_CACHE = {}\nconst GOOGLE_MAP_API_DIST_CACHE = {}\n\nconst getFormattedStoreTime = (place) => {\n  let closingHours = null\n  let openingHours = null\n  let openingMinutes = null\n  let closingMinutes = null\n  let dayIndex = ''\n\n  const currentDay = new Date().getDay()\n  const currentTime = formattedTime(new Date().getHours(), new Date().getMinutes())\n  const todaysPeriodArr = place.opening_hours?.periods?.filter(\n    (reqdDay) => reqdDay?.close?.day === currentDay\n  )\n  // todaysPeriod array can be of any length\n\n  if (todaysPeriodArr) {\n    if (!todaysPeriodArr.length) { // holiday\n      for (let day = (currentDay + 1) % 7, count = 0; count < 6; day = (day + 1) % 7, count++) {\n        const dayPeriodArr = place.opening_hours?.periods?.filter(\n          (reqdDay) => reqdDay?.close?.day === day\n        )\n        if (!dayPeriodArr.length) {\n          continue\n        } else {\n          dayIndex = Math.abs(day - currentDay) > 1 ? day : '' // show day of the week only when its not the next day\n          openingHours = dayPeriodArr[0]?.open?.hours\n          openingMinutes = dayPeriodArr[0]?.open?.minutes\n          break\n        }\n      }\n    } else if (todaysPeriodArr.length === 1) {\n    // only one closing and opening time for a day\n      closingHours = todaysPeriodArr[0]?.close?.hours\n      closingMinutes = todaysPeriodArr[0]?.close?.minutes\n      openingHours = todaysPeriodArr[0]?.open?.hours\n      openingMinutes = todaysPeriodArr[0]?.open?.minutes\n    } else {\n    // store open in breaks in a day\n      for (let index = 0; index < todaysPeriodArr.length; index++) {\n        if (currentTime < formattedTime(todaysPeriodArr[index]?.open?.hours, todaysPeriodArr[index]?.open?.minutes\n        ) // closed: before store opening\n        ) {\n          openingHours = todaysPeriodArr[index]?.open?.hours\n          openingMinutes = todaysPeriodArr[index]?.open?.minutes\n          closingHours = todaysPeriodArr[index]?.close?.hours\n          closingMinutes = todaysPeriodArr[index]?.close?.minutes\n          break\n        } else if (currentTime >= formattedTime(todaysPeriodArr[index]?.open?.hours, todaysPeriodArr[index]?.open?.minutes) && currentTime < formattedTime(todaysPeriodArr[index]?.close?.hours, todaysPeriodArr[index]?.close?.minutes)) { // store is open\n          closingHours = todaysPeriodArr[index]?.close?.hours\n          closingMinutes = todaysPeriodArr[index]?.close?.minutes\n          openingHours = todaysPeriodArr[index]?.open?.hours\n          openingMinutes = todaysPeriodArr[index]?.open?.minutes\n          break\n        } else {\n        // closed: after store closing. We need next active day's openingHours\n          for (let day = (currentDay + 1) % 7, count = 0; count < 6; day = (day + 1) % 7, count++) {\n            const dayPeriodArr = place.opening_hours?.periods?.filter(\n              (reqdDay) => reqdDay?.close?.day === day\n            )\n            if (!dayPeriodArr.length) {\n              continue\n            } else {\n              dayIndex = Math.abs(day - currentDay) > 1 ? day : ''\n              openingHours = dayPeriodArr[0]?.open?.hours\n              openingMinutes = dayPeriodArr[0]?.open?.minutes\n              closingHours = todaysPeriodArr[0]?.close?.hours\n              closingMinutes = todaysPeriodArr[0]?.close?.minutes\n              break\n            }\n          }\n        }\n      }\n    }\n  }\n  return {\n    closingTime: toRegularTime({ dayIndex, hours: closingHours, minutes: closingMinutes }) || 'N/A',\n    openingTime: toRegularTime({ dayIndex, hours: openingHours, minutes: openingMinutes }) || 'N/A'\n  }\n}\n\nexport default {\n  async fetchAddressInfo ({ commit }, { shippingAddress, returnMethods }) {\n    var isReturnMethodCommited = false\n    const updatedMethods = []\n    // commit('setLoading', true)\n    try {\n      await Promise.all(\n        returnMethods.map(async (method) => {\n          const { type, distanceThreshold } = method\n          const name = method?.customer_facing_carrier\n          if (shippingAddress?.zip_code?.length > 5) {\n            shippingAddress.zip_code = shippingAddress?.zip_code?.substring(0, 5)\n          }\n          const { street1, state, zip_code: zipCode, city } = shippingAddress\n          const lookupKey = `${state}_${zipCode}_${city}_${name}_${type}_info`\n\n          if (GOOGLE_MAP_API_CACHE[lookupKey]) {\n            const keys = getLookupKeys(Object.keys(GOOGLE_MAP_API_CACHE), lookupKey)\n            var rMethods = []\n            keys.map(key => { if (GOOGLE_MAP_API_CACHE[key] && GOOGLE_MAP_API_CACHE[key].length > 0) { rMethods.push(GOOGLE_MAP_API_CACHE[key][0]) } })\n            commit('updateMethods', rMethods)\n            isReturnMethodCommited = true\n            return GOOGLE_MAP_API_CACHE[lookupKey]\n          }\n\n          // STEP 1: Get places for the specified zipcode, city and state\n          // STEP 2: Ensure the place name has specified names (storeNames) as mentioned in the policy\n          // STEP 3: Filter only OPERATIONAL stores. PERMANENTLY_CLOSED stores are eliminated\n          // STEP 4: Pick up the first operational, valid store (To be changed)\n\n          const places = await googleMapsService.getPlaces(shippingAddress, name, type)\n          if (places.length === 0) {\n            return {\n              ...method\n            }\n          }\n\n          const validPlaces = places.filter((place) => validStoreName(place.name, type))\n          if (validPlaces.length === 0) {\n            return {\n              ...method\n            }\n          }\n\n          const operationalStores = validPlaces.filter(\n            ({ business_status: businessStatus }) =>\n              !businessStatus ? true : businessStatus === 'OPERATIONAL'\n          )\n          if (operationalStores.length === 0) {\n            return {\n              ...method\n            }\n          }\n\n          GOOGLE_MAP_API_CACHE[lookupKey] = []\n\n          for (let index = 0; index < operationalStores.length; index++) {\n            const result = operationalStores[index]\n\n            const { place_id: placeId } = result\n\n            const place = await googleMapsService.getDetails(placeId)\n\n            const distance = await googleMapsService.getDistance(\n            `${street1}, ${city}, ${state} ${zipCode}`,\n            place.formatted_address\n            )\n\n            if (!isStoreWithinDistance(distance?.distance, distanceThreshold)) {\n              continue\n            } else {\n              GOOGLE_MAP_API_CACHE[lookupKey].push({\n                ...method,\n                ...distance,\n                formattedPhoneNumber: place?.formatted_phone_number,\n                formattedAddress: place?.formatted_address,\n                openingHours: {\n                  isOpen: place?.opening_hours?.isOpen(),\n                  weekday_text: place?.opening_hours?.weekday_text,\n                  periods: place?.opening_hours?.periods,\n                  todayClosingTime: getFormattedStoreTime(place).closingTime,\n                  todayOpeningTime: getFormattedStoreTime(place).openingTime\n                }\n              })\n              updatedMethods.push({\n                ...method,\n                ...distance,\n                formattedPhoneNumber: place?.formatted_phone_number,\n                formattedAddress: place?.formatted_address,\n                openingHours: {\n                  isOpen: place?.opening_hours?.isOpen(),\n                  weekday_text: place?.opening_hours?.weekday_text,\n                  periods: place?.opening_hours?.periods,\n                  todayClosingTime: getFormattedStoreTime(place).closingTime,\n                  todayOpeningTime: getFormattedStoreTime(place).openingTime\n                }\n              })\n              break\n            }\n          }\n        })\n      )\n    } catch (error) {\n      console.error('Error fetching address Info', { error })\n    }\n\n    if (!isReturnMethodCommited) {\n      commit('updateMethods', updatedMethods)\n    }\n    // commit('setLoading', false)\n  },\n  async fetchNearbyCarriers ({ commit }, { carrier, shippingAddress }) {\n    commit('setLoading', true)\n    const { type, distanceThreshold } = carrier\n    const name = carrier?.customer_facing_carrier\n    const { street1, state, zip_code: zipCode, city } = shippingAddress\n    // const lookupKey = `${state}_${zipCode}_${city}_${name}_${type}_nearby`\n    try {\n      // if (GOOGLE_MAP_API_CACHE[lookupKey]) {\n      //   commit('setNearbyCarriers', GOOGLE_MAP_API_CACHE[lookupKey])\n      //   commit('setLoading', false)\n      //   return\n      // }\n      const places = await googleMapsService.getPlaces(shippingAddress, name, type)\n\n      let results = places\n        .filter(\n          ({ business_status: businessStatus }) =>\n            !businessStatus ? true : businessStatus === 'OPERATIONAL'\n        )\n      // Only calculate distance for a max of ten results\n      if (results.length > 10) {\n        results = results.slice(0, 10)\n      }\n\n      const carriers = []\n      for await (const result of results) {\n        const { place_id: placeId } = result\n\n        var place = GOOGLE_MAP_API_PID_CACHE[placeId]\n        var distance = GOOGLE_MAP_API_DIST_CACHE[placeId]\n\n        if (!place || !distance) {\n          await sleep(200)\n          place = await googleMapsService.getDetails(placeId)\n          GOOGLE_MAP_API_PID_CACHE[placeId] = place\n\n          await sleep(200)\n          distance = await googleMapsService.getDistance(\n            `${street1}, ${city}, ${state} ${zipCode}`,\n            place.formatted_address\n          )\n\n          GOOGLE_MAP_API_DIST_CACHE[placeId] = distance\n        }\n\n        if (isStoreWithinDistance(distance.distance, distanceThreshold) && validStoreName(place.name, type)) {\n          carriers.push({\n            ...carrier,\n            ...distance,\n            name: place.name,\n            formattedPhoneNumber: place?.formatted_phone_number,\n            formattedAddress: place?.formatted_address,\n            icon: result.icon,\n            openingHours: {\n              isOpen: place?.opening_hours?.isOpen(),\n              weekday_text: place?.opening_hours?.weekday_text,\n              periods: place?.opening_hours?.periods,\n              todayClosingTime: getFormattedStoreTime(place).closingTime,\n              todayOpeningTime: getFormattedStoreTime(place).openingTime\n            }\n          })\n        }\n      }\n\n      carriers.sort(\n        (a, b) => +a.distance.split(' ')[0] - +b.distance.split(' ')[0]\n      ).slice(0, 3)\n\n      // GOOGLE_MAP_API_CACHE[lookupKey] = carriers\n\n      commit('setNearbyCarriers', carriers)\n      commit('setLoading', false)\n    } catch (error) {\n      console.error('Error fetching nearby locations', { error })\n      // delete GOOGLE_MAP_API_CACHE[lookupKey]\n      await sleep(5000)\n      store.dispatch('returns/fetchNearbyCarriers', {\n        carrier: carrier,\n        shippingAddress: shippingAddress\n      })\n    }\n  }\n}\n"]}]}