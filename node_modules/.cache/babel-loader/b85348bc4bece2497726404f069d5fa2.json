{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/controllers/exchangesController.js","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/controllers/exchangesController.js","mtime":1652659341679},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1649977087118}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/controllers/exchangesController.js"],"names":["store","CONSTANTS","UPDATE_EXCHANGE_LIST","RETURN_REASON_ACTION","ACTION_TYPE","isExchangesEnabled","getFieldsFromStore","exchangesAllowed","isGiftReturn","canExchangeSize","item","isTrustWorthyUser","reason","variants","getSizeOptionsForSelectedVariant","color","hasSizeOptions","filter","v","disabled","length","recommendation_type","SIZE","canExchangeColor","getColorOptionsForSelectedVariant","hasColorOptions","COLOR","canExchangeDamaged","variant","getVariantForItem","enabled","quantity_in_stock","DAMAGED","canExchangeOther","getColorOptionsForPDP","hasOptions","OTHER","selectedColor","originalVariantIncluded","sizes","exchangeVariants","map","sku","subtitle","push","sortSizes","colors","size","name","title","option","getColorOptionsForColorView","options","filtered","o","getPreviouslySelectedOption","exchangeList","find","exchangedItem","identifier","getDefaultValue","actionType","previouslySelectedOption","undefined","items","originalItem","e","defaultItem","saveSelectedItemToStore","selectedItem","commit","quantity","handleColorOrSizeOptionSelected","selectedSize","optionForSelectedSizeAndColor","isDisabled","isSameVariant","getters","exchanges_allowed","currentItemIndex","selectedItems","exchangeEligibility","repurchase_model_decision","sizeOrder","includes","sort","a","b","indexOf","Number"],"mappings":"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","sourcesContent":["import store from '@/store'\nimport { CONSTANTS } from '@/constants'\nimport { UPDATE_EXCHANGE_LIST } from '@/store/constants'\n\nconst RETURN_REASON_ACTION = CONSTANTS.RETURN_REASON_ACTION\nconst ACTION_TYPE = CONSTANTS.ACTION_TYPE\n\nexport const isExchangesEnabled = () => {\n  const { exchangesAllowed, isGiftReturn } = getFieldsFromStore()\n\n  return exchangesAllowed && !isGiftReturn\n}\n\n// an item can be exchanged for size if and only if the following is true:\n// 1. the client has exchanges allowed == true\n// 2. at least one of the variants has quantity_in_stock > 0\n// 3. that variant is of the same color as the item\n// 4. not a gift return\n// 5. is a trustworthyuser\n// 6. there is at least one item that is not disabled\n\nexport const canExchangeSize = () => {\n  const { item, isTrustWorthyUser, reason } = getFieldsFromStore()\n\n  const variants = getSizeOptionsForSelectedVariant(item?.color)\n  const hasSizeOptions = variants.filter((v) => !v.disabled).length > 0\n\n  return (\n    isExchangesEnabled &&\n    reason.recommendation_type === RETURN_REASON_ACTION.SIZE &&\n    hasSizeOptions &&\n    isTrustWorthyUser\n  )\n}\n\nexport const canExchangeColor = () => {\n  const { item, isTrustWorthyUser, reason } = getFieldsFromStore()\n\n  const variants = getColorOptionsForSelectedVariant(item)\n\n  const hasColorOptions = variants.filter((v) => !v.disabled).length > 0\n\n  return (\n    isExchangesEnabled &&\n    reason.recommendation_type === RETURN_REASON_ACTION.COLOR &&\n    hasColorOptions &&\n    isTrustWorthyUser\n  )\n}\nexport const canExchangeDamaged = () => {\n  const { item, isTrustWorthyUser, reason } = getFieldsFromStore()\n\n  const variant = getVariantForItem(item)\n\n  const enabled = variant && variant.quantity_in_stock > 0\n\n  return (\n    isExchangesEnabled &&\n    reason.recommendation_type === RETURN_REASON_ACTION.DAMAGED &&\n    enabled &&\n    isTrustWorthyUser\n  )\n}\nexport const canExchangeOther = () => {\n  const {\n    // item,\n    isTrustWorthyUser,\n    reason\n  } = getFieldsFromStore()\n\n  const variants = getColorOptionsForPDP()\n  const hasOptions = variants.filter((v) => !v.disabled).length > 0\n\n  return (\n    isExchangesEnabled &&\n    reason.recommendation_type === RETURN_REASON_ACTION.OTHER &&\n    hasOptions &&\n    isTrustWorthyUser\n  )\n}\n\n/*\n * GETTERS\n */\n\n// Return the options for each variant\nexport const getSizeOptionsForSelectedVariant = (selectedColor) => {\n  const { item } = getFieldsFromStore()\n  let originalVariantIncluded = false\n\n  const sizes = item.exchangeVariants\n    ?.filter((variant) => variant.color === selectedColor)\n    .map((variant) => {\n      if (variant.sku === item.sku) {\n        originalVariantIncluded = true\n      }\n      return {\n        ...variant,\n        disabled: variant.sku === item.sku || variant.quantity_in_stock <= 0,\n        subtitle: variant.sku === item.sku ? 'Original Purchase' : ''\n      }\n    })\n\n  if (item.color === selectedColor && !originalVariantIncluded) {\n    sizes.push({\n      ...item,\n      disabled: true,\n      subtitle: 'Original Purchase'\n    })\n  }\n\n  return sizes.length > 0 ? sortSizes(sizes) : []\n}\n\nexport const getColorOptionsForSelectedVariant = (item) => {\n  let originalVariantIncluded = false\n  let colors = item.exchangeVariants\n    ?.filter((variant) => variant.size === item.size)\n    .map((variant) => {\n      if (variant.sku === item.sku) {\n        originalVariantIncluded = true\n      }\n      return {\n        ...variant,\n        disabled: variant.sku === item.sku || variant.quantity_in_stock <= 0,\n        name: variant.title,\n        subtitle: variant.sku === item.sku ? 'Original Purchase' : ''\n      }\n    })\n\n  if (!originalVariantIncluded) {\n    colors = [\n      {\n        ...item,\n        disabled: true,\n        name: item.title,\n        subtitle: 'Original Purchase'\n      },\n      ...colors\n    ]\n  }\n  return colors\n}\n\nexport const getColorOptionsForPDP = () => {\n  const { item } = getFieldsFromStore()\n\n  // 1 get all color options and make disabled by default\n  // 2 check the sizes for each option and if at least one not disabled, make color enabled\n  // filter out the disabled colors\n  return getColorOptionsForSelectedVariant(item)\n    .map((option) => {\n      const enabled =\n        getSizeOptionsForSelectedVariant(option.color).filter(\n          (v) => !v.disabled\n        ).length > 0\n\n      return { ...option, disabled: !enabled }\n    })\n    .filter((option) => !option.disabled)\n}\n\nexport const getColorOptionsForColorView = () => {\n  const { item } = getFieldsFromStore()\n\n  const options = getColorOptionsForSelectedVariant(item)\n\n  const filtered = options.filter(\n    (o) => !o.disabled || o.subtitle === 'Original Purchase'\n  )\n\n  return filtered\n}\n\nexport const getPreviouslySelectedOption = () => {\n  const { item, exchangeList } = getFieldsFromStore()\n\n  return exchangeList?.find(\n    (exchangedItem) => exchangedItem?.identifier === item?.identifier\n  )\n}\n\nexport const getDefaultValue = (\n  actionType = ACTION_TYPE.SIZE,\n  selectedColor\n) => {\n  const { item } = getFieldsFromStore()\n\n  const previouslySelectedOption = getPreviouslySelectedOption()\n\n  //  if the actiontype is color, and there is a a previously selected option,\n  // return the previously selected color\n  // else return undefind\n  if (actionType === ACTION_TYPE.COLOR) {\n    if (\n      previouslySelectedOption &&\n      previouslySelectedOption.size === item.size\n    ) {\n      return previouslySelectedOption\n    } else {\n      return undefined\n    }\n  }\n  const items = getSizeOptionsForSelectedVariant(selectedColor || item?.color)\n\n  const originalItem = items.find((e) => e.subtitle === 'Original Purchase')\n  // return the previously selected item by default unless the previously selected item was not of the same color as the default item\n  let defaultItem = previouslySelectedOption || originalItem || items[0]\n\n  if (\n    originalItem &&\n    previouslySelectedOption &&\n    originalItem.color !== previouslySelectedOption?.color\n  ) {\n    defaultItem = originalItem\n  }\n  return defaultItem\n}\n\nexport const saveSelectedItemToStore = (selectedItem) => {\n  const { item, reason } = getFieldsFromStore()\n  store.commit('order/' + UPDATE_EXCHANGE_LIST, {\n    ...selectedItem,\n    identifier: item.identifier,\n    originalItem: item,\n    reason: reason,\n    quantity: item.quantity\n  })\n}\n\nexport const handleColorOrSizeOptionSelected = (\n  selectedItem,\n  actionType,\n  item,\n  selectedSize,\n  selectedColor\n) => {\n  let variants = []\n  if (actionType === ACTION_TYPE.COLOR) {\n    variants = getSizeOptionsForSelectedVariant(selectedColor)\n  }\n  if (actionType === ACTION_TYPE.SIZE) {\n    variants = getColorOptionsForSelectedVariant(item)\n  }\n\n  const optionForSelectedSizeAndColor = variants.find(\n    (variant) =>\n      variant.size === selectedSize && variant.color === selectedColor\n  )\n\n  if (\n    optionForSelectedSizeAndColor &&\n    !optionForSelectedSizeAndColor.isDisabled\n  ) {\n    selectedItem = optionForSelectedSizeAndColor\n    selectedSize = optionForSelectedSizeAndColor.size\n    selectedColor = optionForSelectedSizeAndColor.color\n  } else {\n    if (actionType === ACTION_TYPE.COLOR) {\n      selectedSize = null\n    }\n  }\n\n  return {\n    selectedSize,\n    selectedColor,\n    selectedItem\n  }\n}\n\nexport const getVariantForItem = (\n  item,\n  size = item.size,\n  color = item.color\n) => {\n  return item.exchangeVariants.find(\n    (variant) => variant.size === size && variant.color === color\n  )\n}\n\nexport const isSameVariant = ({ size, color }) => {\n  const { item } = getFieldsFromStore()\n  return item.color === color && item.size === size\n}\n\nconst getFieldsFromStore = () => {\n  const { exchanges_allowed: exchangesAllowed } = store.getters[\n    'returns/policies'\n  ]\n  const currentItemIndex = store.getters['returns/currentItemIndex']\n  const selectedItems = store.getters['order/selectedItems']\n  const item = selectedItems[currentItemIndex]\n  const isGiftReturn = store.getters['ui/isGiftReturn']\n  const reason = store.getters['returns/reason']\n  const exchangeList = store.getters['order/exchangeList']\n  const exchangeEligibility = store.getters['exchange/getExchangeEligibility']\n  const isTrustWorthyUser = exchangeEligibility?.repurchase_model_decision\n\n  return {\n    exchangesAllowed,\n    item,\n    isTrustWorthyUser,\n    isGiftReturn,\n    reason,\n    selectedItems,\n    exchangeList\n  }\n}\n\nconst sortSizes = (sizes) => {\n  // Order sizes before returning them\n  const sizeOrder = ['XXXL', 'XXL', 'XL', 'L', 'M', 'S', 'XS', 'XXS', 'XXXS']\n\n  if (sizeOrder.includes(sizes[0].size)) {\n    return sizes.sort((a, b) => {\n      return sizeOrder.indexOf(b.size) - sizeOrder.indexOf(a.size)\n    })\n  } else if (Number(sizes[0].size)) {\n    return sizes.sort((a, b) => Number(b.size) - Number(a.size))\n  } else {\n    return sizes.sort((a, b) => b.size < a.size)\n  }\n}\n"]}]}