{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/Asset/fintify/node_modules/babel-loader/lib/index.js!/Users/naveenmuthyala/Documents/Projects/Asset/fintify/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/naveenmuthyala/Documents/Projects/Asset/fintify/src/store/modules/returns/actions.js","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/fintify/src/store/modules/returns/actions.js","mtime":1665582724815},{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/fintify/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/fintify/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/fintify/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1649977087118}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/naveenmuthyala/Documents/Projects/Asset/fintify/src/store/modules/returns/actions.js"],"names":["googleMapsService","toRegularTime","isStoreWithinDistance","getLookupKeys","dayOfWeekAsString","store","validStoreName","checkMapsPolicy","CONSTANTS","formattedTime","hours","minutes","parseInt","sleep","milliseconds","Promise","resolve","setTimeout","GOOGLE_MAP_API_CACHE","GOOGLE_MAP_API_PID_CACHE","getWeeklyRange","place","formattedWeeklyRange","dateRange","timeRange","weeklyRange","opening_hours","periods","reduce","acc","day","open","start","end","startHour","startMinute","close","endHour","endMinute","slice","dayIndex","getFormattedStoreTime","closingHours","openingHours","openingMinutes","closingMinutes","currentDay","Date","getDay","currentTime","getHours","getMinutes","todaysPeriodArr","filter","reqdDay","length","count","dayPeriodArr","Math","abs","index","closingTime","openingTime","fetchAddressInfo","commit","shippingAddress","returnMethods","console","log","isReturnMethodCommited","updatedMethods","all","map","method","type","distanceThreshold","RETURN_METHODS","MAIL_BACK","push","name","customer_facing_carrier","zip_code","substring","street1","state","zipCode","city","lookupKey","keys","Object","rMethods","key","getPlaces","places","validPlaces","operationalStores","businessStatus","business_status","result","placeId","place_id","getDetails","getDistance","formatted_address","distance","formattedPhoneNumber","formatted_phone_number","formattedAddress","isOpen","weekday_text","todayClosingTime","todayOpeningTime","error","fetchNearbyCarriers","carrier","results","carriers","carrierAlreadyRecorded","findIndex","icon","sort","a","b","split","dispatch"],"mappings":"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","sourcesContent":["import googleMapsService from '@/common/googleMaps.service'\nimport { toRegularTime, isStoreWithinDistance, getLookupKeys, dayOfWeekAsString } from '@/utils'\nimport store from '@/store'\nimport { validStoreName } from '@/controllers/ReturnMethodsController.js'\nimport { checkMapsPolicy } from '@/controllers/MapController.js'\nimport { CONSTANTS } from '@/constants/index.js'\n\n// in HHMM format\nconst formattedTime = (hours, minutes) => {\n  return parseInt(`${hours}${minutes < 10 ? '0' + minutes : minutes}`)\n}\n\nconst sleep = (milliseconds) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\nconst GOOGLE_MAP_API_CACHE = {}\nconst GOOGLE_MAP_API_PID_CACHE = {}\n\nconst getWeeklyRange = (place) => {\n  const formattedWeeklyRange = { dateRange: '', timeRange: '' }\n\n  const weeklyRange = place?.opening_hours?.periods?.reduce((acc, day) => {\n    // if earliest found open day, set as start\n    if (day?.open?.day <= acc?.dateRange?.start) {\n      acc.dateRange.start = day?.open?.day\n    }\n    // if latest found open day, set as end\n    if (day?.open?.day >= acc?.dateRange?.end) {\n      acc.dateRange.end = day?.open?.day\n    }\n    // check if current day open is later than stored\n    if (day?.open?.hours >= acc?.timeRange?.startHour) {\n      if (day?.open?.minutes >= acc?.timeRange?.startMinute) {\n        acc.timeRange.startMinute = day?.open?.minutes\n      }\n      acc.timeRange.startHour = day?.open?.hours\n    }\n    // check if current day close is earlier than stored\n    if (day?.close?.hours <= acc?.timeRange?.endHour || !acc?.timeRange?.endHour) {\n      if (day?.close?.minutes <= acc?.timeRange?.endMinute || !acc?.timeRange?.endMinute) {\n        acc.timeRange.endMinute = day?.open?.minutes\n      }\n      acc.timeRange.endHour = day?.close?.hours\n    }\n    return acc\n  }, { dateRange: { start: '', end: '' }, timeRange: { startHour: '', startMinute: '', endHour: '', endMinute: '' } })\n\n  // reformat for human-readable\n  formattedWeeklyRange.dateRange = `${dayOfWeekAsString([weeklyRange?.dateRange?.start === 0 ? 1 : weeklyRange?.dateRange?.start]).slice(0, 3)} - ${dayOfWeekAsString([weeklyRange?.dateRange?.end]).slice(0, 3)}`\n\n  formattedWeeklyRange.timeRange = `${toRegularTime({ dayIndex: '', hours: weeklyRange?.timeRange?.startHour, minutes: weeklyRange?.timeRange?.startMinute })}\n  - ${toRegularTime({ hours: weeklyRange?.timeRange?.endHour, minutes: weeklyRange?.timeRange?.endMinute || 0 })}`\n\n  return formattedWeeklyRange\n}\n\nconst getFormattedStoreTime = (place) => {\n  let closingHours = null\n  let openingHours = null\n  let openingMinutes = null\n  let closingMinutes = null\n  let dayIndex = ''\n\n  const currentDay = new Date().getDay()\n  const currentTime = formattedTime(new Date().getHours(), new Date().getMinutes())\n  const todaysPeriodArr = place.opening_hours?.periods?.filter(\n    (reqdDay) => reqdDay?.close?.day === currentDay\n  )\n  // todaysPeriod array can be of any length\n\n  if (todaysPeriodArr) {\n    if (!todaysPeriodArr.length) { // holiday\n      for (let day = (currentDay + 1) % 7, count = 0; count < 6; day = (day + 1) % 7, count++) {\n        const dayPeriodArr = place.opening_hours?.periods?.filter(\n          (reqdDay) => reqdDay?.close?.day === day\n        )\n        if (!dayPeriodArr.length) {\n          continue\n        } else {\n          dayIndex = Math.abs(day - currentDay) > 1 ? day : '' // show day of the week only when its not the next day\n          openingHours = dayPeriodArr[0]?.open?.hours\n          openingMinutes = dayPeriodArr[0]?.open?.minutes\n          break\n        }\n      }\n    } else if (todaysPeriodArr.length === 1) {\n    // only one closing and opening time for a day\n      closingHours = todaysPeriodArr[0]?.close?.hours\n      closingMinutes = todaysPeriodArr[0]?.close?.minutes\n      openingHours = todaysPeriodArr[0]?.open?.hours\n      openingMinutes = todaysPeriodArr[0]?.open?.minutes\n    } else {\n    // store open in breaks in a day\n      for (let index = 0; index < todaysPeriodArr.length; index++) {\n        if (currentTime < formattedTime(todaysPeriodArr[index]?.open?.hours, todaysPeriodArr[index]?.open?.minutes\n        ) // closed: before store opening\n        ) {\n          openingHours = todaysPeriodArr[index]?.open?.hours\n          openingMinutes = todaysPeriodArr[index]?.open?.minutes\n          closingHours = todaysPeriodArr[index]?.close?.hours\n          closingMinutes = todaysPeriodArr[index]?.close?.minutes\n          break\n        } else if (currentTime >= formattedTime(todaysPeriodArr[index]?.open?.hours, todaysPeriodArr[index]?.open?.minutes) && currentTime < formattedTime(todaysPeriodArr[index]?.close?.hours, todaysPeriodArr[index]?.close?.minutes)) { // store is open\n          closingHours = todaysPeriodArr[index]?.close?.hours\n          closingMinutes = todaysPeriodArr[index]?.close?.minutes\n          openingHours = todaysPeriodArr[index]?.open?.hours\n          openingMinutes = todaysPeriodArr[index]?.open?.minutes\n          break\n        } else {\n        // closed: after store closing. We need next active day's openingHours\n          for (let day = (currentDay + 1) % 7, count = 0; count < 6; day = (day + 1) % 7, count++) {\n            const dayPeriodArr = place.opening_hours?.periods?.filter(\n              (reqdDay) => reqdDay?.close?.day === day\n            )\n            if (!dayPeriodArr.length) {\n              continue\n            } else {\n              dayIndex = Math.abs(day - currentDay) > 1 ? day : ''\n              openingHours = dayPeriodArr[0]?.open?.hours\n              openingMinutes = dayPeriodArr[0]?.open?.minutes\n              closingHours = todaysPeriodArr[0]?.close?.hours\n              closingMinutes = todaysPeriodArr[0]?.close?.minutes\n              break\n            }\n          }\n        }\n      }\n    }\n  }\n  return {\n    closingTime: toRegularTime({ dayIndex, hours: closingHours, minutes: closingMinutes }) || 'N/A',\n    openingTime: toRegularTime({ dayIndex, hours: openingHours, minutes: openingMinutes }) || 'N/A'\n  }\n}\n\nexport default {\n  async fetchAddressInfo ({ commit }, { shippingAddress, returnMethods }) {\n    console.log({ returnMethods })\n    var isReturnMethodCommited = false\n    const updatedMethods = []\n\n    try {\n      await Promise.all(\n        returnMethods.map(async (method) => {\n          const { type, distanceThreshold } = method\n          if (type === CONSTANTS.RETURN_METHODS.MAIL_BACK) { // fault tolerance - always surface mailback options\n            updatedMethods.push({\n              ...method\n            })\n            return\n          }\n          const name = method?.customer_facing_carrier\n          if (shippingAddress?.zip_code?.length > 5) {\n            shippingAddress.zip_code = shippingAddress?.zip_code?.substring(0, 5)\n          }\n          const { street1, state, zip_code: zipCode, city } = shippingAddress\n          const lookupKey = `${state}_${zipCode}_${city}_${name}_${type}_info`\n\n          if (GOOGLE_MAP_API_CACHE[lookupKey]) {\n            const keys = getLookupKeys(Object.keys(GOOGLE_MAP_API_CACHE), lookupKey)\n            var rMethods = []\n            keys.map(key => { if (GOOGLE_MAP_API_CACHE[key] && GOOGLE_MAP_API_CACHE[key].length > 0) { rMethods.push(GOOGLE_MAP_API_CACHE[key][0]) } })\n            commit('updateMethods', rMethods)\n            isReturnMethodCommited = true\n            return GOOGLE_MAP_API_CACHE[lookupKey]\n          }\n\n          // STEP 1: Get places for the specified zipcode, city and state\n          // STEP 2: Ensure the place name has specified names (storeNames) as mentioned in the policy\n          // STEP 3: Filter only OPERATIONAL stores. PERMANENTLY_CLOSED stores are eliminated\n          // STEP 4: Pick up the first operational, valid store (To be changed)\n\n          let places = await googleMapsService.getPlaces(shippingAddress, name, type)\n          if (places.length === 0) {\n            places = await googleMapsService.getPlaces(shippingAddress, name, type, true)\n            if (places.length === 0) {\n              return {\n                ...method\n              }\n            }\n          }\n\n          let validPlaces = places.filter((place) => validStoreName(place.name, type))\n          if (validPlaces.length === 0) {\n            places = await googleMapsService.getPlaces(shippingAddress, name, type, true)\n            if (places.length === 0) {\n              return {\n                ...method\n              }\n            }\n            validPlaces = places.filter((place) => validStoreName(place.name, type))\n            if (validPlaces.length === 0) {\n              return {\n                ...method\n              }\n            }\n          }\n\n          const operationalStores = validPlaces.filter(\n            ({ business_status: businessStatus }) =>\n              !businessStatus ? true : businessStatus === 'OPERATIONAL'\n          )\n          if (operationalStores.length === 0) {\n            return {\n              ...method\n            }\n          }\n\n          GOOGLE_MAP_API_CACHE[lookupKey] = []\n\n          for (let index = 0; index < operationalStores.length; index++) {\n            const result = operationalStores[index]\n\n            const { place_id: placeId } = result\n\n            const place = await googleMapsService.getDetails(placeId)\n\n            const distance = await googleMapsService.getDistance(\n            `${street1}, ${city}, ${state} ${zipCode}`,\n            place.formatted_address\n            )\n\n            if (!isStoreWithinDistance(distance?.distance, distanceThreshold)) {\n              continue\n            } else {\n              GOOGLE_MAP_API_CACHE[lookupKey].push({\n                ...method,\n                ...distance,\n                formattedPhoneNumber: place?.formatted_phone_number,\n                formattedAddress: place?.formatted_address,\n                openingHours: {\n                  isOpen: place?.opening_hours?.isOpen(),\n                  weekday_text: place?.opening_hours?.weekday_text,\n                  periods: place?.opening_hours?.periods,\n                  todayClosingTime: getFormattedStoreTime(place).closingTime,\n                  todayOpeningTime: getFormattedStoreTime(place).openingTime\n                }\n              })\n              updatedMethods.push({\n                ...method,\n                ...distance,\n                formattedPhoneNumber: place?.formatted_phone_number,\n                formattedAddress: place?.formatted_address,\n                openingHours: {\n                  isOpen: place?.opening_hours?.isOpen(),\n                  weekday_text: place?.opening_hours?.weekday_text,\n                  periods: place?.opening_hours?.periods,\n                  todayClosingTime: getFormattedStoreTime(place).closingTime,\n                  todayOpeningTime: getFormattedStoreTime(place).openingTime\n                }\n              })\n              break\n            }\n          }\n        })\n      )\n    } catch (error) {\n      console.error('Error fetching address Info', { error })\n    }\n\n    if (!isReturnMethodCommited) {\n      console.log({ updatedMethods })\n      commit('updateMethods', updatedMethods)\n    }\n    // commit('setLoading', false)\n  },\n  async fetchNearbyCarriers ({ commit }, { carrier, shippingAddress }) {\n    console.log({ carrier })\n\n    commit('setLoading', true)\n    const { type, distanceThreshold } = carrier\n    const name = carrier?.customer_facing_carrier\n    const { street1, state, zip_code: zipCode, city } = shippingAddress\n    try {\n      const places = await googleMapsService.getPlaces(shippingAddress, name, type)\n\n      let results = places\n        .filter(\n          ({ business_status: businessStatus }) =>\n            !businessStatus ? true : businessStatus === 'OPERATIONAL'\n        )\n      // Only calculate distance for a max of ten results\n      if (results.length > 10) {\n        results = results.slice(0, 10)\n      }\n\n      const carriers = []\n      for await (const result of results) {\n        const { place_id: placeId } = result\n\n        var place = GOOGLE_MAP_API_PID_CACHE[placeId]\n\n        if (!place) {\n          await sleep(200)\n          place = await googleMapsService.getDetails(placeId)\n          GOOGLE_MAP_API_PID_CACHE[placeId] = place\n\n          await sleep(200)\n        }\n        const distance = await googleMapsService.getDistance(\n          `${street1}, ${city}, ${state} ${zipCode}`,\n          place.formatted_address\n        )\n\n        const carrierAlreadyRecorded = carriers.findIndex(carrier => carrier?.formattedAddress === place?.formatted_address) !== -1\n\n        if (isStoreWithinDistance(distance.distance, distanceThreshold) && validStoreName(place.name, type) && !carrierAlreadyRecorded) {\n          carriers.push({\n            ...carrier,\n            ...distance,\n            name: place.name,\n            formattedPhoneNumber: place?.formatted_phone_number,\n            formattedAddress: place?.formatted_address,\n            icon: result.icon,\n            openingHours: {\n              isOpen: place?.opening_hours?.isOpen(),\n              weeklyRange: checkMapsPolicy() ? getWeeklyRange(place) : '',\n              weekday_text: place?.opening_hours?.weekday_text,\n              periods: place?.opening_hours?.periods,\n              todayClosingTime: getFormattedStoreTime(place).closingTime,\n              todayOpeningTime: getFormattedStoreTime(place).openingTime\n            }\n          })\n        }\n      }\n\n      carriers.sort(\n        (a, b) => +a.distance.split(' ')[0] - +b.distance.split(' ')[0]\n      ).slice(0, 3)\n\n      commit('setNearbyCarriers', carriers)\n      commit('setLoading', false)\n    } catch (error) {\n      console.error('Error fetching nearby locations', { error })\n      await sleep(5000)\n      store.dispatch('returns/fetchNearbyCarriers', {\n        carrier: carrier,\n        shippingAddress: shippingAddress\n      })\n    }\n  }\n}\n"]}]}