{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/organism/ExpressReturnMethod.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/organism/ExpressReturnMethod.vue","mtime":1652291597703},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js","mtime":1649977089802}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGZpbmRBbGxFeHByZXNzUmV0dXJuTG9jYXRpb25zIH0gZnJvbSAnQC9jb250cm9sbGVycy9tYXBDb250cm9sbGVyLmpzJwppbXBvcnQgeyBtYXBHZXR0ZXJzLCBtYXBNdXRhdGlvbnMgfSBmcm9tICd2dWV4JwppbXBvcnQgeyBDT05TVEFOVFMgfSBmcm9tICdAL2NvbnN0YW50cy9pbmRleC5qcycKaW1wb3J0IHsKICBESUFMT0dfU0VBUkNIX0xPQ0FUSU9OCn0gZnJvbSAnQC9zdG9yZS9jb25zdGFudHMnCmltcG9ydCBPU2hpcHBpbmdBZGRyZXNzIGZyb20gJ0AvY29tcG9uZW50cy9hdG9tcy9PU2hpcHBpbmdBZGRyZXNzLnZ1ZScKaW1wb3J0IE9EaWFsb2cgZnJvbSAnQC9jb21wb25lbnRzL2F0b21zL09EaWFsb2cudnVlJwppbXBvcnQgU2VhcmNoUmV0dXJuTG9jYXRpb24gZnJvbSAnQC9jb21wb25lbnRzL29yZ2FuaXNtL1NlYXJjaFJldHVybkxvY2F0aW9uLnZ1ZScKaW1wb3J0IE1hcFRpbGVzIGZyb20gJ0AvY29tcG9uZW50cy9vcmdhbmlzbS9NYXBUaWxlcy52dWUnCgpleHBvcnQgZGVmYXVsdCB7CiAgLyogZXNsaW50LWRpc2FibGUgbm8tbmV3ICovCiAgLyogZXNsaW50LWRpc2FibGUgbm8tdW5kZWYgKi8KICBuYW1lOiAnRXhwcmVzc1JldHVybk1ldGhvZCcsCiAgY29tcG9uZW50czogeyBPU2hpcHBpbmdBZGRyZXNzLCBPRGlhbG9nLCBTZWFyY2hSZXR1cm5Mb2NhdGlvbiwgTWFwVGlsZXMgfSwKICBkYXRhICgpIHsKICAgIHJldHVybiB7CiAgICAgIHNoaXBwaW5nQWRkcmVzczoge30sCiAgICAgIERJQUxPR19TRUFSQ0hfTE9DQVRJT046IERJQUxPR19TRUFSQ0hfTE9DQVRJT04sCiAgICAgIHBsYWNlc1RvQ29vcmRzOiBbXSwKICAgICAgaXNMb2FkaW5nOiB0cnVlLAogICAgICBtYXA6IG51bGwsCiAgICAgIG1hcmtlcnM6IFtdLAogICAgICBpc01hcE1vZGFsT3BlbjogZmFsc2UsCiAgICAgIGNlbnRlckluZGV4OiAwLAogICAgICBjZW50ZXJJY29uOiB7CiAgICAgICAgdXJsOiByZXF1aXJlKCdAL2Fzc2V0cy9pbWFnZXMvU3RhcGxlc0ljb24ucG5nJyksCiAgICAgICAgc2NhbGVkU2l6ZTogbmV3IGdvb2dsZS5tYXBzLlNpemUoMjgsIDI4KQogICAgICB9LAogICAgICBtYWluSWNvbjogewogICAgICAgIHVybDogcmVxdWlyZSgnQC9hc3NldHMvaW1hZ2VzL1N0YXBsZXNJY29uLnBuZycpLAogICAgICAgIHNjYWxlZFNpemU6IG5ldyBnb29nbGUubWFwcy5TaXplKDIwLCAyMCkKICAgICAgfSwKICAgICAgaG9tZUljb246IHsKICAgICAgICB1cmw6IHJlcXVpcmUoJ0AvYXNzZXRzL2ltYWdlcy9sb2NhdGlvbi1pY29uLnBuZycpLAogICAgICAgIHNjYWxlZFNpemU6IG5ldyBnb29nbGUubWFwcy5TaXplKDQwLCA0MCkKICAgICAgfSwKICAgICAgb3BlbmVkSW5mb1dpbmRvdzogbnVsbAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoewogICAgICBwb2xpY3lSZXR1cm5NZXRob2RzOiAncmV0dXJucy9wb2xpY3lSZXR1cm5NZXRob2RzJywKICAgICAgcmV0dXJuTWV0aG9kczogJ3JldHVybnMvcmV0dXJuTWV0aG9kcycsCiAgICAgIGZvcm1hdHRlZEFkZHJlc3M6ICdyZXR1cm5zL2Zvcm1hdHRlZFNoaXBwaW5nQWRkcmVzcycsCiAgICAgIGlzTW9kYWxPcGVuOiAncmV0dXJucy9nZXRJc01vZGFsT3BlbicsCiAgICAgIHVuZm9ybWF0dGVkQWRkcmVzczogJ3JldHVybnMvZ2V0QWRkcmVzcycKICAgIH0pCiAgfSwKICB3YXRjaDogewogICAgZm9ybWF0dGVkQWRkcmVzczogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyICgpIHsKICAgICAgICB0aGlzLmxvYWREcm9wb2ZmTG9jYXRpb25EYXRhKCkKICAgICAgfQogICAgfQogIH0sCiAgYXN5bmMgbW91bnRlZCAoKSB7CiAgICB0cnkgewogICAgICB0aGlzLmluaXRNYXAoKQogICAgICBhd2FpdCB0aGlzLnNldEluaXRpYWxNYXJrZXJzKCkKICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgY29uc29sZS5lcnJvcihlKQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwTXV0YXRpb25zKHsKICAgICAgY2xvc2VNb2RhbDogJ3JldHVybnMvY2xvc2VNb2RhbCcKICAgIH0pLAogICAgb3Blbk1hcE1vZGFsICgpIHsKICAgICAgdGhpcy5pc01hcE1vZGFsT3BlbiA9IHRydWUKICAgIH0sCiAgICBjbG9zZU1hcE1vZGFsICgpIHsKICAgICAgdGhpcy5pc01hcE1vZGFsT3BlbiA9IGZhbHNlCiAgICB9LAogICAgYXN5bmMgbG9hZERyb3BvZmZMb2NhdGlvbkRhdGEgKCkgewogICAgICAvLyByZW1vdmUgYWxsIGV4aXN0aW5nIG1hcmtlcnMKICAgICAgdGhpcy5tYXJrZXJzLm1hcChtYXJrZXIgPT4gewogICAgICAgIG1hcmtlci5tYXJrZXIuc2V0TWFwKG51bGwpCiAgICAgIH0pCgogICAgICAvLyByZXNldCBtYXJrZXJzCiAgICAgIHRoaXMubWFya2VycyA9IFtdCgogICAgICAvLyBjbG9zZSBhbnkgbmVjZXNzYXJ5IGluZm8gd2luZG93CiAgICAgIGlmICh0aGlzLm9wZW5lZEluZm9XaW5kb3cgIT09IG51bGwpIHsKICAgICAgICB0aGlzLm9wZW5lZEluZm9XaW5kb3cuY2xvc2UoKQogICAgICB9CgogICAgICAvLyBjbG9zZSBtb2RhbCBpZiBvcGVuCiAgICAgIGlmICh0aGlzLmlzTWFwTW9kYWxPcGVuKSB7CiAgICAgICAgdGhpcy5jbG9zZU1hcE1vZGFsKCkKICAgICAgfQoKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCB0aGlzLnNldEluaXRpYWxNYXJrZXJzKCkKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZSkKICAgICAgfQogICAgICAvLyByZXNldCByZWZzCiAgICAgIHZhciBsbmd0aCA9IE9iamVjdC5rZXlzKHRoaXMuJHJlZnNbJ21hcC10aWxlcyddLiRyZWZzKS5sZW5ndGgKICAgICAgdmFyIGluaXREaXYgPSAnaXRlbScgKyBTdHJpbmcoMCkKICAgICAgZm9yIChsZXQgaiA9IHRoaXMucGxhY2VzVG9Db29yZHMubGVuZ3RoOyBqIDwgbG5ndGg7IGorKykgewogICAgICAgIGNvbnN0IGRpdk5hbWUgPSAnaXRlbScgKyBTdHJpbmcoaikKICAgICAgICBkZWxldGUgdGhpcy4kcmVmc1snbWFwLXRpbGVzJ10uJHJlZnNbZGl2TmFtZV0KICAgICAgfQogICAgICAvLyByZXNldCBjZW50ZXIgaW5kZXgKICAgICAgdGhpcy5jZW50ZXJJbmRleCA9IDAKICAgICAgdGhpcy4kcmVmc1snbWFwLXRpbGVzJ10uJHJlZnNbaW5pdERpdl1bMF0uJGVsLmNsYXNzTGlzdC5hZGQoJ2JnLXdlbGwnKQogICAgICB0aGlzLiRyZWZzWydtYXAtdGlsZXMnXS4kcmVmc1tpbml0RGl2XVswXS4kZWwuY2xhc3NMaXN0LnJlbW92ZSgnd2hpdGUnKQogICAgfSwKICAgIHNjcm9sbFRvVmlldyAoaSwgb3BlbldpbmRvdykgewogICAgICBjb25zdCByZWZOYW1lID0gJ2l0ZW0nICsgU3RyaW5nKGkpCiAgICAgIHRoaXMuJHJlZnNbJ21hcC10aWxlcyddLiRyZWZzW3JlZk5hbWVdWzBdLiRlbC5zY3JvbGxJbnRvVmlldyh7IGJlaGF2aW9yOiAnc21vb3RoJyB9KQogICAgICBmb3IgKGxldCBqID0gMDsgaiA8IE9iamVjdC5rZXlzKHRoaXMuJHJlZnNbJ21hcC10aWxlcyddLiRyZWZzKS5sZW5ndGg7IGorKykgewogICAgICAgIGNvbnN0IGRpdk5hbWUgPSAnaXRlbScgKyBTdHJpbmcoaikKICAgICAgICBpZiAoaiA9PT0gaSkgeyAvLyBncmV5IG91dCBjbGlja2VkIG9uIHRpbGUKICAgICAgICAgIHRoaXMuJHJlZnNbJ21hcC10aWxlcyddLiRyZWZzW2Rpdk5hbWVdWzBdLiRlbC5jbGFzc0xpc3QuYWRkKCdiZy13ZWxsJykKICAgICAgICAgIHRoaXMuJHJlZnNbJ21hcC10aWxlcyddLiRyZWZzW2Rpdk5hbWVdWzBdLiRlbC5jbGFzc0xpc3QucmVtb3ZlKCd3aGl0ZScpCiAgICAgICAgfSBlbHNlIHsgLy8gd2hpdGUgb3V0IGV2ZXJ5IG90aGVyIHRpbGUKICAgICAgICAgIHRoaXMuJHJlZnNbJ21hcC10aWxlcyddLiRyZWZzW2Rpdk5hbWVdWzBdLiRlbC5jbGFzc0xpc3QuYWRkKCd3aGl0ZScpCiAgICAgICAgICB0aGlzLiRyZWZzWydtYXAtdGlsZXMnXS4kcmVmc1tkaXZOYW1lXVswXS4kZWwuY2xhc3NMaXN0LnJlbW92ZSgnYmctd2VsbCcpCiAgICAgICAgfQogICAgICB9CiAgICAgIGlmIChvcGVuV2luZG93KSB7IC8vIGNsaWNrZWQgb24gdGlsZSBzbyBvcGVuIHdpbmRvdwogICAgICAgIHRoaXMub3BlbkluZm9XaW5kb3codGhpcy5tYXAsIHRoaXMubWFya2Vyc1tpXS5tYXJrZXIsIGksIGZhbHNlKQogICAgICB9CiAgICB9LAogICAgaW5pdE1hcCAoKSB7CiAgICAgIHRoaXMubWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJyksIHsKICAgICAgICBjZW50ZXI6IHsgbG5nOiBDT05TVEFOVFMuQkFTRV9MTkcsIGxhdDogQ09OU1RBTlRTLkJBU0VfTEFUIH0sCiAgICAgICAgem9vbTogMTIsCiAgICAgICAgb3B0aW9uczogewogICAgICAgICAgem9vbUNvbnRyb2w6IGZhbHNlLAogICAgICAgICAgbWFwVHlwZUNvbnRyb2w6IGZhbHNlLAogICAgICAgICAgc2NhbGVDb250cm9sOiBmYWxzZSwKICAgICAgICAgIHN0cmVldFZpZXdDb250cm9sOiBmYWxzZSwKICAgICAgICAgIHJvdGF0ZUNvbnRyb2w6IGZhbHNlLAogICAgICAgICAgZnVsbHNjcmVlbkNvbnRyb2w6IGZhbHNlCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIG9wZW5JbmZvV2luZG93IChtYXAsIG1hcmtlciwgaW5kZXgsIHNjcm9sbFRvVmlldykgewogICAgICAvLyBjaGFuZ2UgaWNvbnMKICAgICAgLy8gbWFwLnNldENlbnRlcihtYXJrZXIuZ2V0UG9zaXRpb24oKSkKCiAgICAgIGlmIChzY3JvbGxUb1ZpZXcpIHsgLy8gY2xpY2tlZCBvbiBtYXJrZXIgdG8gc2Nyb2xsIHRpbGUKICAgICAgICB0aGlzLnNjcm9sbFRvVmlldyhpbmRleCwgZmFsc2UpCiAgICAgIH0KCiAgICAgIC8vIG5vdCBzaGlwcGluZyBhZGRyZXNzCiAgICAgIGlmIChpbmRleCAhPT0gLTEpIHsKICAgICAgICBtYXJrZXIuc2V0SWNvbih0aGlzLmNlbnRlckljb24pCiAgICAgIH0KICAgICAgdGhpcy5tYXJrZXJzW3RoaXMuY2VudGVySW5kZXhdLm1hcmtlci5zZXRJY29uKHRoaXMubWFpbkljb24pCgogICAgICBpZiAoaW5kZXggIT09IC0xKSB7CiAgICAgICAgdGhpcy5jZW50ZXJJbmRleCA9IGluZGV4CiAgICAgIH0KCiAgICAgIC8vIG9wZW4vY2xvc2UgaW5mbyB3aW5kb3dzCiAgICAgIGlmICh0aGlzLm9wZW5lZEluZm9XaW5kb3cgIT09IG51bGwpIHsKICAgICAgICB0aGlzLm9wZW5lZEluZm9XaW5kb3cuY2xvc2UoKQogICAgICB9CgogICAgICBjb25zdCBpbmZvV2luZG93ID0gbmV3IGdvb2dsZS5tYXBzLkluZm9XaW5kb3coewogICAgICAgIGNvbnRlbnQ6IHRoaXMuY3JlYXRlQ29udGVudFN0cmluZyhpbmRleCkKICAgICAgfSkKCiAgICAgIGluZm9XaW5kb3cub3BlbihtYXAsIG1hcmtlcikKCiAgICAgIHRoaXMub3BlbmVkSW5mb1dpbmRvdyA9IGluZm9XaW5kb3cKICAgIH0sCiAgICBjcmVhdGVNYXJrZXIgKG1hcCwgb3BlbkluZm9XaW5kb3csIGluZGV4KSB7CiAgICAgIGxldCBtYXJrZXIKCiAgICAgIGlmIChpbmRleCA9PT0gdGhpcy5jZW50ZXJJbmRleCAmJiBpbmRleCAhPT0gLTEpIHsgLy8gZmlyc3QgbWFya2VyIGF1dG9tYXRpY2FsbHkgYmlnZ2VyLCBjZW50ZXIgaW5kZXggaXMgMCBhdG0KICAgICAgICBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHsKICAgICAgICAgIHBvc2l0aW9uOiB0aGlzLnBsYWNlc1RvQ29vcmRzW2luZGV4XS5wb3NpdGlvbiwKICAgICAgICAgIG1hcCwKICAgICAgICAgIGljb246IHRoaXMuY2VudGVySWNvbgogICAgICAgIH0pCiAgICAgIH0gZWxzZSBpZiAoaW5kZXggIT09IC0xKSB7IC8vIGFsbCBvdGhlciBpY29ucwogICAgICAgIG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoewogICAgICAgICAgcG9zaXRpb246IHRoaXMucGxhY2VzVG9Db29yZHNbaW5kZXhdLnBvc2l0aW9uLAogICAgICAgICAgbWFwLAogICAgICAgICAgaWNvbjogdGhpcy5tYWluSWNvbgogICAgICAgIH0pCiAgICAgIH0gZWxzZSB7IC8vIGhvbWUgaWNvbiwgbm8gY2xpY2sgbGlzdGVuZXIKICAgICAgICBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHsKICAgICAgICAgIHBvc2l0aW9uOiB0aGlzLnNoaXBwaW5nQWRkcmVzcy5wb3NpdGlvbiwKICAgICAgICAgIG1hcCwKICAgICAgICAgIGljb246IHRoaXMuaG9tZUljb24KICAgICAgICB9KQogICAgICB9CgogICAgICBpZiAoaW5kZXggIT09IC0xKSB7CiAgICAgICAgbWFya2VyLmFkZExpc3RlbmVyKCdjbGljaycsIChmdW5jdGlvbiAobWFwLCBtYXJrZXIsIGluZGV4KSB7CiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgICAgICAgICBvcGVuSW5mb1dpbmRvdyhtYXAsIG1hcmtlciwgaW5kZXgsIHRydWUpCiAgICAgICAgICB9CiAgICAgICAgfShtYXAsIG1hcmtlciwgaW5kZXgpKSkKICAgICAgfQoKICAgICAgdGhpcy5tYXJrZXJzLnB1c2goeyBtYXJrZXI6IG1hcmtlciwgZGlzdGFuY2U6IGluZGV4ICE9PSAtMSA/IHRoaXMucGxhY2VzVG9Db29yZHNbaW5kZXhdLmRpc3RhbmNlIDogbnVsbCwgY2xvc2luZ1RpbWU6IGluZGV4ICE9PSAtMSA/IHRoaXMucGxhY2VzVG9Db29yZHNbaW5kZXhdLmNsb3NpbmdUaW1lIDogbnVsbCB9KQogICAgfSwKICAgIGFzeW5jIHNldEluaXRpYWxNYXJrZXJzICgpIHsKICAgICAgdGhpcy5pc0xvYWRpbmcgPSB0cnVlCgogICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmaW5kQWxsRXhwcmVzc1JldHVybkxvY2F0aW9ucyh0aGlzLnJldHVybk1ldGhvZHMsIHRoaXMucG9saWN5UmV0dXJuTWV0aG9kcywgdHJ1ZSkKICAgICAgdGhpcy5zaGlwcGluZ0FkZHJlc3MgPSByZXN1bHQuc2hpcHBpbmdBZGRyZXNzCiAgICAgIHRoaXMucGxhY2VzVG9Db29yZHMgPSByZXN1bHQucGxhY2VzVG9Db29yZHMKCiAgICAgIGNvbnN0IHsgbWFwLCBvcGVuSW5mb1dpbmRvdyB9ID0gdGhpcwogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMucGxhY2VzVG9Db29yZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICB0aGlzLmNyZWF0ZU1hcmtlcihtYXAsIG9wZW5JbmZvV2luZG93LCBpKQogICAgICB9CiAgICAgIHRoaXMuY3JlYXRlTWFya2VyKG1hcCwgb3BlbkluZm9XaW5kb3csIC0xKQogICAgICBtYXAuc2V0Q2VudGVyKHRoaXMubWFya2Vyc1swXS5tYXJrZXIuZ2V0UG9zaXRpb24oKSkgLy8gY2VudGVyIGlzIGFsd2F5cyBmaXJzdCBhZGRyZXNzIGZvciB0aGUgbW9tZW50CgogICAgICAvLyBoYXZlIHRoZSBmaXJzdCB3aW5kb3cgYXV0b21hdGljYWxseSBvcGVuZWQKICAgICAgY29uc3QgaW5mb1dpbmRvdyA9IG5ldyBnb29nbGUubWFwcy5JbmZvV2luZG93KHsKICAgICAgICBjb250ZW50OiB0aGlzLmNyZWF0ZUNvbnRlbnRTdHJpbmcoMCkKICAgICAgfSkKCiAgICAgIGlmICh0aGlzLm1hcmtlcnNbMF0uZGlzdGFuY2UgIT09IG51bGwgfHwgdGhpcy5tYXJrZXJzWzBdLmNsb3NpbmdUaW1lICE9PSBudWxsKSB7IC8vIG5vdCBob21lIGljb24KICAgICAgICBpbmZvV2luZG93Lm9wZW4obWFwLCB0aGlzLm1hcmtlcnNbMF0ubWFya2VyKQogICAgICAgIHRoaXMub3BlbmVkSW5mb1dpbmRvdyA9IGluZm9XaW5kb3cKICAgICAgfQoKICAgICAgdGhpcy5pc0xvYWRpbmcgPSBmYWxzZQogICAgfSwKICAgIGNyZWF0ZUNvbnRlbnRTdHJpbmcgKGluZGV4KSB7CiAgICAgIGlmICh0aGlzLm1hcmtlcnNbaW5kZXhdLmRpc3RhbmNlICE9PSBudWxsICYmIHRoaXMubWFya2Vyc1tpbmRleF0uY2xvc2luZ1RpbWUgIT09IG51bGwpIHsKICAgICAgICBjb25zdCBkaXN0YW5jZSA9IHRoaXMubWFya2Vyc1tpbmRleF0uZGlzdGFuY2UgIT09IENPTlNUQU5UUy5VTktOT1dOID8gKHRoaXMubWFya2Vyc1tpbmRleF0uZGlzdGFuY2UpIDogJycKICAgICAgICBjb25zdCBjbG9zZXNBdCA9IHRoaXMubWFya2Vyc1tpbmRleF0uY2xvc2luZ1RpbWUgIT09IENPTlNUQU5UUy5VTktOT1dOID8gKCdjbG9zZXMgYXQgJyArIFN0cmluZyh0aGlzLm1hcmtlcnNbaW5kZXhdLmNsb3NpbmdUaW1lKSkgOiAnJwogICAgICAgIGNvbnN0IG1pZGRsZSA9IChjbG9zZXNBdCA9PT0gJycgfHwgZGlzdGFuY2UgPT09ICcnKSA/ICcnIDogJyAgJyArICcmbWlkZG90OycgKyAnICAnCiAgICAgICAgcmV0dXJuICc8ZGl2IGNsYXNzPSJpbmZvLXdpbmRvdy1jb250ZW50Ij48c3BhbiBjbGFzcz0iaW5mby13aW5kb3ctdGV4dCI+JyArIGRpc3RhbmNlICsgbWlkZGxlICsgY2xvc2VzQXQgKwogICAgICAgICc8L3NwYW4+PC9kaXY+JwogICAgICB9CiAgICAgIHJldHVybiAnJwogICAgfQogIH0KfQo="},{"version":3,"sources":["ExpressReturnMethod.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ExpressReturnMethod.vue","sourceRoot":"src/components/organism","sourcesContent":["<template>\n  <div>\n    <v-overlay\n      :value=\"isLoading\"\n      :z-index=\"1\"\n    >\n      <v-progress-circular\n        class=\"loader\"\n        indeterminate\n        size=\"50\"\n      />\n    </v-overlay>\n    <o-shipping-address\n      v-if=\"!isLoading\"\n      :dialog-type=\"DIALOG_SEARCH_LOCATION\"\n      :formatted-address=\"formattedAddress\"\n      :open-map-modal=\"openMapModal\"\n      :class=\"{\n        'ml-2': $vuetify.breakpoint.xs,\n        'mt-3': $vuetify.breakpoint.mdAndDown,\n        'mt-5': $vuetify.breakpoint.lgAndUp\n      }\"\n      class=\"mb-5 shipping-address\"\n    />\n    <div :class=\"$vuetify.breakpoint.mdAndDown ? 'map-view-sm' : 'map-view-lg'\">\n      <div id=\"map\" :class=\"$vuetify.breakpoint.mdAndDown ? 'map-sm' : 'map-lg'\" />\n      <map-tiles\n        :carriers=\"placesToCoords\"\n        :class=\"$vuetify.breakpoint.mdAndDown ? 'map-tiles-sm' : 'map-tiles-lg'\"\n        ref=\"map-tiles\"\n        :scroll-to-view=\"scrollToView\"\n      />\n    </div>\n    <o-dialog\n      :visible=\"isMapModalOpen\"\n      :is-full-screen=\"true\"\n      @close=\"closeMapModal\"\n    >\n      <search-return-location source=\"mapView\" />\n    </o-dialog>\n  </div>\n</template>\n\n<script>\nimport { findAllExpressReturnLocations } from '@/controllers/mapController.js'\nimport { mapGetters, mapMutations } from 'vuex'\nimport { CONSTANTS } from '@/constants/index.js'\nimport {\n  DIALOG_SEARCH_LOCATION\n} from '@/store/constants'\nimport OShippingAddress from '@/components/atoms/OShippingAddress.vue'\nimport ODialog from '@/components/atoms/ODialog.vue'\nimport SearchReturnLocation from '@/components/organism/SearchReturnLocation.vue'\nimport MapTiles from '@/components/organism/MapTiles.vue'\n\nexport default {\n  /* eslint-disable no-new */\n  /* eslint-disable no-undef */\n  name: 'ExpressReturnMethod',\n  components: { OShippingAddress, ODialog, SearchReturnLocation, MapTiles },\n  data () {\n    return {\n      shippingAddress: {},\n      DIALOG_SEARCH_LOCATION: DIALOG_SEARCH_LOCATION,\n      placesToCoords: [],\n      isLoading: true,\n      map: null,\n      markers: [],\n      isMapModalOpen: false,\n      centerIndex: 0,\n      centerIcon: {\n        url: require('@/assets/images/StaplesIcon.png'),\n        scaledSize: new google.maps.Size(28, 28)\n      },\n      mainIcon: {\n        url: require('@/assets/images/StaplesIcon.png'),\n        scaledSize: new google.maps.Size(20, 20)\n      },\n      homeIcon: {\n        url: require('@/assets/images/location-icon.png'),\n        scaledSize: new google.maps.Size(40, 40)\n      },\n      openedInfoWindow: null\n    }\n  },\n  computed: {\n    ...mapGetters({\n      policyReturnMethods: 'returns/policyReturnMethods',\n      returnMethods: 'returns/returnMethods',\n      formattedAddress: 'returns/formattedShippingAddress',\n      isModalOpen: 'returns/getIsModalOpen',\n      unformattedAddress: 'returns/getAddress'\n    })\n  },\n  watch: {\n    formattedAddress: {\n      deep: true,\n      handler () {\n        this.loadDropoffLocationData()\n      }\n    }\n  },\n  async mounted () {\n    try {\n      this.initMap()\n      await this.setInitialMarkers()\n    } catch (e) {\n      console.error(e)\n    }\n  },\n  methods: {\n    ...mapMutations({\n      closeModal: 'returns/closeModal'\n    }),\n    openMapModal () {\n      this.isMapModalOpen = true\n    },\n    closeMapModal () {\n      this.isMapModalOpen = false\n    },\n    async loadDropoffLocationData () {\n      // remove all existing markers\n      this.markers.map(marker => {\n        marker.marker.setMap(null)\n      })\n\n      // reset markers\n      this.markers = []\n\n      // close any necessary info window\n      if (this.openedInfoWindow !== null) {\n        this.openedInfoWindow.close()\n      }\n\n      // close modal if open\n      if (this.isMapModalOpen) {\n        this.closeMapModal()\n      }\n\n      try {\n        await this.setInitialMarkers()\n      } catch (e) {\n        console.error(e)\n      }\n      // reset refs\n      var lngth = Object.keys(this.$refs['map-tiles'].$refs).length\n      var initDiv = 'item' + String(0)\n      for (let j = this.placesToCoords.length; j < lngth; j++) {\n        const divName = 'item' + String(j)\n        delete this.$refs['map-tiles'].$refs[divName]\n      }\n      // reset center index\n      this.centerIndex = 0\n      this.$refs['map-tiles'].$refs[initDiv][0].$el.classList.add('bg-well')\n      this.$refs['map-tiles'].$refs[initDiv][0].$el.classList.remove('white')\n    },\n    scrollToView (i, openWindow) {\n      const refName = 'item' + String(i)\n      this.$refs['map-tiles'].$refs[refName][0].$el.scrollIntoView({ behavior: 'smooth' })\n      for (let j = 0; j < Object.keys(this.$refs['map-tiles'].$refs).length; j++) {\n        const divName = 'item' + String(j)\n        if (j === i) { // grey out clicked on tile\n          this.$refs['map-tiles'].$refs[divName][0].$el.classList.add('bg-well')\n          this.$refs['map-tiles'].$refs[divName][0].$el.classList.remove('white')\n        } else { // white out every other tile\n          this.$refs['map-tiles'].$refs[divName][0].$el.classList.add('white')\n          this.$refs['map-tiles'].$refs[divName][0].$el.classList.remove('bg-well')\n        }\n      }\n      if (openWindow) { // clicked on tile so open window\n        this.openInfoWindow(this.map, this.markers[i].marker, i, false)\n      }\n    },\n    initMap () {\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        center: { lng: CONSTANTS.BASE_LNG, lat: CONSTANTS.BASE_LAT },\n        zoom: 12,\n        options: {\n          zoomControl: false,\n          mapTypeControl: false,\n          scaleControl: false,\n          streetViewControl: false,\n          rotateControl: false,\n          fullscreenControl: false\n        }\n      })\n    },\n    openInfoWindow (map, marker, index, scrollToView) {\n      // change icons\n      // map.setCenter(marker.getPosition())\n\n      if (scrollToView) { // clicked on marker to scroll tile\n        this.scrollToView(index, false)\n      }\n\n      // not shipping address\n      if (index !== -1) {\n        marker.setIcon(this.centerIcon)\n      }\n      this.markers[this.centerIndex].marker.setIcon(this.mainIcon)\n\n      if (index !== -1) {\n        this.centerIndex = index\n      }\n\n      // open/close info windows\n      if (this.openedInfoWindow !== null) {\n        this.openedInfoWindow.close()\n      }\n\n      const infoWindow = new google.maps.InfoWindow({\n        content: this.createContentString(index)\n      })\n\n      infoWindow.open(map, marker)\n\n      this.openedInfoWindow = infoWindow\n    },\n    createMarker (map, openInfoWindow, index) {\n      let marker\n\n      if (index === this.centerIndex && index !== -1) { // first marker automatically bigger, center index is 0 atm\n        marker = new google.maps.Marker({\n          position: this.placesToCoords[index].position,\n          map,\n          icon: this.centerIcon\n        })\n      } else if (index !== -1) { // all other icons\n        marker = new google.maps.Marker({\n          position: this.placesToCoords[index].position,\n          map,\n          icon: this.mainIcon\n        })\n      } else { // home icon, no click listener\n        marker = new google.maps.Marker({\n          position: this.shippingAddress.position,\n          map,\n          icon: this.homeIcon\n        })\n      }\n\n      if (index !== -1) {\n        marker.addListener('click', (function (map, marker, index) {\n          return function () {\n            openInfoWindow(map, marker, index, true)\n          }\n        }(map, marker, index)))\n      }\n\n      this.markers.push({ marker: marker, distance: index !== -1 ? this.placesToCoords[index].distance : null, closingTime: index !== -1 ? this.placesToCoords[index].closingTime : null })\n    },\n    async setInitialMarkers () {\n      this.isLoading = true\n\n      const result = await findAllExpressReturnLocations(this.returnMethods, this.policyReturnMethods, true)\n      this.shippingAddress = result.shippingAddress\n      this.placesToCoords = result.placesToCoords\n\n      const { map, openInfoWindow } = this\n      for (let i = 0; i < this.placesToCoords.length; i++) {\n        this.createMarker(map, openInfoWindow, i)\n      }\n      this.createMarker(map, openInfoWindow, -1)\n      map.setCenter(this.markers[0].marker.getPosition()) // center is always first address for the moment\n\n      // have the first window automatically opened\n      const infoWindow = new google.maps.InfoWindow({\n        content: this.createContentString(0)\n      })\n\n      if (this.markers[0].distance !== null || this.markers[0].closingTime !== null) { // not home icon\n        infoWindow.open(map, this.markers[0].marker)\n        this.openedInfoWindow = infoWindow\n      }\n\n      this.isLoading = false\n    },\n    createContentString (index) {\n      if (this.markers[index].distance !== null && this.markers[index].closingTime !== null) {\n        const distance = this.markers[index].distance !== CONSTANTS.UNKNOWN ? (this.markers[index].distance) : ''\n        const closesAt = this.markers[index].closingTime !== CONSTANTS.UNKNOWN ? ('closes at ' + String(this.markers[index].closingTime)) : ''\n        const middle = (closesAt === '' || distance === '') ? '' : '  ' + '&middot;' + '  '\n        return '<div class=\"info-window-content\"><span class=\"info-window-text\">' + distance + middle + closesAt +\n        '</span></div>'\n      }\n      return ''\n    }\n  }\n}\n</script>\n\n<style>\n  .gmnoprint, .gm-style-cc {\n    display: none !important;\n    visibility: hidden !important;\n  }\n  .loader {\n    z-index: 11;\n    display: flex;\n    justify-content: center;\n  }\n  .map-lg {\n    width: 50%;\n    height: auto;\n  }\n  .info-window-text {\n    font-family: var(--bs-body-font-family);\n    font-size: 11px;\n    font-weight: var(--bs-body-font-weight);\n    color: var(--bs-body-color);\n    line-height: var(--bs-body-line-height);\n  }\n  .gm-style .gm-style-iw-c {\n    border-radius: 16px !important;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n    width: 180px;\n    height: 42px;\n    padding: 10px;\n  }\n  .gm-ui-hover-effect {\n    top: -3px !important;\n    right: 0px !important;\n  }\n  .map-view-lg {\n    display: flex;\n    height: 720px;\n    margin-bottom: 8px;\n    flex-direction: row-reverse;\n  }\n  .map-tiles-lg {\n    width: 50%;\n  }\n  .map-sm {\n    height: 342px;\n    width: 100%;\n  }\n  .map-tiles-sm {\n    width: 100%;\n  }\n  .map-view-sm {\n    flex-direction: column;\n    height: unset;\n  }\n  .shipping-address {\n    overflow: hidden !important;\n  }\n</style>\n"]}]}