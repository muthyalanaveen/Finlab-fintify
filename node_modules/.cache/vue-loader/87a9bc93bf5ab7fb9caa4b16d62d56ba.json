{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/organism/ExpressReturnMethod.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/organism/ExpressReturnMethod.vue","mtime":1651264216775},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js","mtime":1649977089802}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ExpressReturnMethod.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"ExpressReturnMethod.vue","sourceRoot":"src/components/organism","sourcesContent":["<template>\n  <div>\n    <v-overlay\n      :value=\"isLoading\"\n      :z-index=\"1\"\n    >\n      <v-progress-circular\n        class=\"loader\"\n        indeterminate\n        size=\"50\"\n      />\n    </v-overlay>\n    <o-shipping-address\n      v-if=\"!isLoading\"\n      :dialog-type=\"DIALOG_SEARCH_LOCATION\"\n      :formatted-address=\"formattedAddress\"\n      :open-map-modal=\"openMapModal\"\n      :class=\"{\n        'ml-4': $vuetify.breakpoint.smAndDown,\n      }\"\n      class=\"mt-6 mb-4\"\n    />\n    <div id=\"map\" />\n    <o-dialog\n      :visible=\"isMapModalOpen\"\n      :is-full-screen=\"true\"\n      @close=\"closeMapModal\"\n    >\n      <search-return-location source=\"mapView\" :select-clicked=\"loadDropoffLocationData\" />\n    </o-dialog>\n  </div>\n</template>\n\n<script>\nimport { findAllExpressReturnLocations } from '@/controllers/map.js'\nimport { mapGetters, mapMutations } from 'vuex'\nimport { CONSTANTS } from '@/constants/index.js'\nimport {\n  DIALOG_SEARCH_LOCATION\n} from '@/store/constants'\nimport OShippingAddress from '@/components/atoms/OShippingAddress.vue'\nimport ODialog from '@/components/atoms/ODialog.vue'\nimport SearchReturnLocation from '@/components/organism/SearchReturnLocation.vue'\n\nexport default {\n  /* eslint-disable no-new */\n  /* eslint-disable no-undef */\n  name: 'ExpressReturnMethod',\n  components: { OShippingAddress, ODialog, SearchReturnLocation },\n  data () {\n    return {\n      shippingAddress: {},\n      DIALOG_SEARCH_LOCATION: DIALOG_SEARCH_LOCATION,\n      placesToCoords: [],\n      isLoading: true,\n      map: null,\n      markers: [],\n      isMapModalOpen: false,\n      centerIndex: 0,\n      firstLoad: true,\n      centerIcon: {\n        url: require('@/assets/images/StaplesIcon.png'),\n        scaledSize: new google.maps.Size(28, 28)\n      },\n      mainIcon: {\n        url: require('@/assets/images/StaplesIcon.png'),\n        scaledSize: new google.maps.Size(20, 20)\n      },\n      homeIcon: {\n        url: require('@/assets/images/purple-home.png'),\n        scaledSize: new google.maps.Size(40, 40)\n      },\n      updatedHomeIcon: {\n        url: require('@/assets/images/purple-home.png'), // TODO: replace with new icon\n        scaledSize: new google.maps.Size(40, 40)\n      },\n      openedInfoWindow: null\n    }\n  },\n  computed: {\n    ...mapGetters({\n      policyReturnMethods: 'returns/policyReturnMethods',\n      returnMethods: 'returns/returnMethods',\n      formattedAddress: 'returns/formattedShippingAddress',\n      isModalOpen: 'returns/getIsModalOpen',\n      unformattedAddress: 'returns/getAddress'\n    })\n  },\n  async mounted () {\n    try {\n      this.initMap()\n      this.setInitialMarkers()\n    } catch (e) {\n      console.error(e)\n    }\n  },\n  methods: {\n    ...mapMutations({\n      closeModal: 'returns/closeModal'\n    }),\n    openMapModal () {\n      this.isMapModalOpen = true\n    },\n    closeMapModal () {\n      this.isMapModalOpen = false\n    },\n    async loadDropoffLocationData () {\n      // remove all existing markers\n      this.markers.map(marker => {\n        marker.marker.setMap(null)\n      })\n\n      // reset markers\n      this.markers = []\n\n      // close any necessary info window\n      if (this.openedInfoWindow !== null) {\n        this.openedInfoWindow.close()\n      }\n\n      // if modal is open, close it  -- TODO: issue with using this\n      if (this.isMapModalOpen) {\n        this.closeMapModal()\n      }\n\n      try {\n        this.setInitialMarkers()\n      } catch (e) {\n        console.error(e)\n      }\n    },\n    initMap () {\n      this.map = new google.maps.Map(document.getElementById('map'), {\n        center: { lng: CONSTANTS.BASE_LNG, lat: CONSTANTS.BASE_LAT },\n        zoom: 11,\n        options: {\n          zoomControl: false,\n          mapTypeControl: false,\n          scaleControl: false,\n          streetViewControl: false,\n          rotateControl: false,\n          fullscreenControl: false\n        }\n      })\n    },\n    openInfoWindow (map, marker, index) {\n      // change icons\n      // map.setCenter(marker.getPosition())\n\n      // not shipping address\n      if (index !== -1) {\n        marker.setIcon(this.centerIcon)\n      }\n      this.markers[this.centerIndex].marker.setIcon(this.mainIcon)\n\n      if (index !== -1) {\n        this.centerIndex = index\n      }\n\n      // open/close info windows\n      if (this.openedInfoWindow !== null) {\n        this.openedInfoWindow.close()\n      }\n\n      const infoWindow = new google.maps.InfoWindow({\n        content: this.createContentString(index)\n      })\n\n      infoWindow.open(map, marker)\n\n      this.openedInfoWindow = infoWindow\n    },\n    createMarker (map, openInfoWindow, index) {\n      let marker\n\n      if (index === this.centerIndex && index !== -1) { // first marker automatically bigger, center index is 0 atm\n        marker = new google.maps.Marker({\n          position: this.placesToCoords[index].position,\n          map,\n          icon: this.centerIcon\n        })\n      } else if (index !== -1) { // all other icons\n        marker = new google.maps.Marker({\n          position: this.placesToCoords[index].position,\n          map,\n          icon: this.mainIcon\n        })\n      } else { // home icon, no click listener\n        const icon = this.firstLoad ? this.homeIcon : this.updatedHomeIcon\n        marker = new google.maps.Marker({\n          position: this.shippingAddress.position,\n          map,\n          icon: icon\n        })\n      }\n\n      if (index !== -1) {\n        marker.addListener('click', (function (map, marker, index) {\n          return function () {\n            openInfoWindow(map, marker, index)\n          }\n        }(map, marker, index)))\n      }\n\n      this.markers.push({ marker: marker, distance: index !== -1 ? this.placesToCoords[index].distance : null, closingTime: index !== -1 ? this.placesToCoords[index].closingTime : null })\n    },\n    async setInitialMarkers () {\n      this.isLoading = true\n\n      const result = await findAllExpressReturnLocations(this.returnMethods, this.policyReturnMethods, true)\n      this.shippingAddress = result.shippingAddress\n      this.placesToCoords = result.placesToCoords\n\n      const { map, openInfoWindow } = this\n      for (let i = 0; i < this.placesToCoords.length; i++) {\n        this.createMarker(map, openInfoWindow, i)\n      }\n      this.createMarker(map, openInfoWindow, -1)\n      map.setCenter(this.markers[0].marker.getPosition()) // center is always first address for the moment\n\n      // have the first window automatically opened\n      /*\n      const infoWindow = new google.maps.InfoWindow({\n        content: this.createContentString(0)\n      })\n\n      if (this.markers[0].distance !== null || this.markers[0].closingTime !== null) { // not home icon\n        infoWindow.open(map, this.markers[0].marker)\n        this.openedInfoWindow = infoWindow\n      }\n      */\n\n      this.isLoading = false\n    },\n    createContentString (index) {\n      if (this.markers[index].distance !== null && this.markers[index].closingTime !== null) {\n        const distance = this.markers[index].distance !== CONSTANTS.UNKNOWN ? (this.markers[index].distance) : ''\n        const closesAt = this.markers[index].closingTime !== CONSTANTS.UNKNOWN ? ('closes at ' + String(this.markers[index].closingTime)) : ''\n        const middle = (closesAt === '' || distance === '') ? '' : '  ' + '&middot;' + '  '\n        return '<div class=\"info-window-content\"><span class=\"info-window-text\">' + distance + middle + closesAt +\n        '</span></div>'\n      }\n      return ''\n    }\n  }\n}\n</script>\n\n<style>\n  .gmnoprint, .gm-style-cc {\n    display: none !important;\n    visibility: hidden !important;\n  }\n  .loader {\n    z-index: 11;\n    display: flex;\n    justify-content: center;\n  }\n  #map {\n    width:100%;\n    height: 400px;\n  }\n  .info-window-text {\n    font-family: var(--bs-body-font-family);\n    font-size: 11px;\n    font-weight: var(--bs-body-font-weight);\n    color: var(--bs-body-color);\n    line-height: var(--bs-body-line-height);\n  }\n  .gm-style .gm-style-iw-c {\n    border-radius: 16px !important;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    justify-content: center;\n    width: 180px;\n    height: 42px;\n    padding: 10px;\n  }\n  .gm-ui-hover-effect {\n    top: -3px !important;\n    right: 0px !important;\n  }\n</style>\n"]}]}