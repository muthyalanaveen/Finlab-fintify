{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/pages/ExchangeColorView.vue?vue&type=style&index=0&id=f3b4358c&scoped=true&lang=css&","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/pages/ExchangeColorView.vue","mtime":1665066062314},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/css-loader/index.js","mtime":1649977086861},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1649977090577},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js","mtime":1649977089802}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhhbGYtd2lkdGggewogIG1heC13aWR0aDogNTAlCn0K"},{"version":3,"sources":["ExchangeColorView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0LA;AACA;AACA","file":"ExchangeColorView.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n  <v-sheet tile>\n    <v-sheet\n      class=\"mt-6\"\n      tile\n      v-if=\"!this.isLoading\"\n    >\n      <header-title class=\"mt-6 mb-2\">\n        {{ title1_text }}\n      </header-title>\n      <header-small-title class=\"my-4\">\n        {{ title2_text }}\n      </header-small-title>\n\n      <product-slide-view\n        class=\"mt-2 p-1\"\n        :class=\"{\n          'ml-0': $vuetify.breakpoint.smAndDown,\n          'ml-n4': $vuetify.breakpoint.mdAndUp,\n        }\"\n        id=\"exchange-color-product-slide\"\n        :cards=\"this.exchangeItemVariantCards\"\n        :on-card-selected=\"onCardSelected\"\n        :default-value=\"defaultValue\"\n      />\n      <v-row\n        :class=\"{\n          'mt-3': $vuetify.breakpoint.smAndDown,\n          'mt-5': $vuetify.breakpoint.mdAndUp,\n        }\"\n      >\n        <v-col\n          :class=\"{\n            'pb-0 ': $vuetify.breakpoint.smAndDown,\n            'half-width': $vuetify.breakpoint.mdAndUp\n          }\"\n          order-md=\"2\"\n          class=\"d-flex justify-end\"\n        >\n          <action-button\n            @click.stop=\"togglePdpPage(true)\"\n            tertiary-color\n            :loading=\"isLoading\"\n            :block=\"$vuetify.breakpoint.smAndDown\"\n            large\n            text\n          >\n            {{ action2_Text }}\n          </action-button>\n          <PDPPage\n            :visible=\"showPDPPage\"\n            @close=\"togglePdpPage(false)\"\n            :return-reason-clicked=\"returnReasonClicked\"\n          />\n        </v-col>\n        <v-col\n          :class=\"{\n            'half-width': $vuetify.breakpoint.mdAndUp\n          }\"\n          order-md=\"1\"\n        >\n          <action-button\n            @click.stop=\"onClickMethod\"\n            primary-color\n            :loading=\"isLoading || isMapLoading\"\n            :block=\"$vuetify.breakpoint.smAndDown\"\n            large\n            :disabled=\"isDisabled\"\n          >\n            {{ this.selectedItem ? action1_Selected_Text : action1_Text }}\n          </action-button>\n        </v-col>\n      </v-row>\n    </v-sheet>\n    <div v-else>\n      <v-skeleton-loader type=\"card\" />\n    </div>\n  </v-sheet>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport {\n  saveSelectedItemToStore,\n  getDefaultValue,\n  getColorOptionsForColorView\n} from '@/controllers/ExchangesController'\nimport HeaderSmallTitle from '@/components/molecules/HeaderSmallTitle.vue'\nimport HeaderTitle from '@/components/molecules/HeaderTitle.vue'\nimport { CONSTANTS } from '@/constants'\nimport { PAGE_TITLES } from 'branding/strings.json'\nimport { runAccessibilityForRadioGroup, runAccessibilityForProductCards } from '@/utils/index.js'\n\nexport default {\n  name: 'ExchangeColorView',\n  components: {\n    ProductSlideView: () =>\n      import('@/components/organism/ProductSlideView.vue'),\n    PDPPage: () => import('@/components/pages/PDPPage.vue'),\n    ActionButton: () => import('@/components/atoms/ActionButton.vue'),\n    HeaderTitle,\n    HeaderSmallTitle\n  },\n  data: () => ({\n    showPDPPage: false,\n    title1_text: \"Let's try a different color\",\n    title2_text: 'Select a color',\n    action1_Text: 'Select a color to exchange',\n    action1_Selected_Text: 'Exchange for this color',\n    action2_Text: 'See all sizes and colors...',\n    selectedItem: null,\n    isDisabled: true,\n    ACTION_TYPE: CONSTANTS.ACTION_TYPE\n  }),\n  props: {\n    returnReasonClicked: {\n      type: Function,\n      required: true\n    },\n    isMapLoading: {\n      type: Boolean,\n      required: true\n    }\n  },\n  computed: {\n    ...mapGetters({\n      isLoading: 'exchange/isLoading',\n      currentItemIndex: 'returns/currentItemIndex',\n      selectedItems: 'order/selectedItems',\n      exchangeList: 'order/exchangeList'\n    }),\n    item () {\n      return this.selectedItems[this.currentItemIndex]\n    },\n    exchangeItemVariantCards () {\n      return getColorOptionsForColorView()\n    },\n    defaultValue () {\n      return getDefaultValue(this.ACTION_TYPE.COLOR)\n    }\n  },\n  methods: {\n    onCardSelected (card) {\n      if (!card.disabled) {\n        this.selectedItem = card\n        this.updateIsDisabled()\n      }\n    },\n    togglePdpPage (opening) {\n      if (opening) {\n        this.showPDPPage = true\n        document.title = PAGE_TITLES.PDP_PAGE\n        setTimeout(runAccessibilityForRadioGroup, 500, true)\n        setTimeout(runAccessibilityForProductCards, 500, true)\n      } else {\n        this.showPDPPage = false\n        document.title = PAGE_TITLES.EXCHANGE\n      }\n    },\n    onClickMethod (event) {\n      saveSelectedItemToStore(this.selectedItem)\n      this.returnReasonClicked()\n      this.$emit('click', event)\n    },\n    updateIsDisabled () {\n      this.isDisabled = !(\n        this.selectedItem &&\n        !this.selectedItem.disabled &&\n        !this.isLoading\n      )\n    },\n    updateCardSubtitles () {\n      this.exchangeItemVariantCards.forEach(card => {\n        card.subtitle = card.subtitle ? card.size + ' ' + card.subtitle : card.size\n      })\n    }\n  },\n  mounted () {\n    this.selectedItem = this.defaultValue\n    this.updateCardSubtitles()\n    this.updateIsDisabled()\n    setTimeout(runAccessibilityForProductCards, 500, false)\n  }\n}\n</script>\n<style scoped>\n.half-width {\n  max-width: 50%\n}\n</style>\n"]}]}