{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/Asset/returns_portal_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/naveenmuthyala/Documents/Projects/Asset/returns_portal_ui/src/components/pages/QRCodeView.vue?vue&type=style&index=0&id=7f70cfae&scoped=true&lang=css&","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/returns_portal_ui/src/components/pages/QRCodeView.vue","mtime":1665066062325},{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/returns_portal_ui/node_modules/css-loader/index.js","mtime":1649977086861},{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/returns_portal_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1649977090577},{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/Asset/returns_portal_ui/node_modules/vue-loader/lib/index.js","mtime":1649977089802}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5xckNvZGUgewogIG1heC13aWR0aDogMzAwcHg7CiAgbWF4LWhlaWdodDogMzAwcHg7Cn0K"},{"version":3,"sources":["QRCodeView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;AACA","file":"QRCodeView.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n  <div style=\"max-width: 664px; margin: auto\">\n    <div class=\"d-flex justify-content-between align-center mt-12\">\n      <header-title>\n        {{ NEXT_STEPS }}\n      </header-title>\n\n      <v-btn\n        icon\n        style=\"background-color: #ffffff; color: #000000;\"\n        @click.stop=\"closeAction\"\n        v-if=\"showClose\"\n      >\n        <CloseIcon />\n      </v-btn>\n    </div>\n\n    <div class=\"d-flex justify-center my-8\">\n      <img\n        class=\"qrCode\"\n        :src=\"this.qrImage\"\n        v-if=\"this.qrImage\"\n        alt=\"Return QR code\"\n      >\n      <o-text\n        md\n        disabled\n        v-else\n      >\n        QR code not found. Please try again\n      </o-text>\n    </div>\n    <div class=\"d-flex flex-column\">\n      <o-text\n        text-primary\n        md\n        bold\n        heading\n      >\n        {{ getReturnMethodTitle() }}\n      </o-text>\n      <div class=\"d-flex align-center mt-4\">\n        <o-text>\n          {{ qrDescription }}\n        </o-text>\n      </div>\n    </div>\n    <action-button\n      tertiary-color\n      text\n      v-if=\"!isMailBack\"\n      class=\"ml-n4 mt-4\"\n      @click=\"openModal({type: DIALOG_CARRIER_LOCATIONS, selectedCarrier: carrier})\"\n    >\n      {{ SEE_LOCATIONS }}\n    </action-button>\n    <o-dialog\n      is-full-screen\n      :visible=\"isModalOpen\"\n    >\n      <return-locations\n        :show-select-locations=\"false\"\n        :title=\"SEE_RETURN_LOCATIONS\"\n        v-if=\"activeModal === DIALOG_CARRIER_LOCATIONS\"\n        :return-type=\"getReturnMethodType()\"\n        :from-return-methods=\"this.fromReturnMethods\"\n        @closeClicked=\"closeModal\"\n      />\n      <return-store-info\n        v-if=\"activeModal === DIALOG_CARRIER_INFORMATION\"\n        is-rma-submitted\n        @closeClicked=\"closeModal\"\n      />\n      <search-return-location\n        v-if=\"activeModal === DIALOG_SEARCH_LOCATION\"\n        source=\"qrCodeView\"\n        @closeClicked=\"closeModal\"\n      />\n    </o-dialog>\n  </div>\n</template>\n\n<script>\nimport OText from '@/components/atoms/OText.vue'\nimport HeaderTitle from '@/components/molecules/HeaderTitle.vue'\nimport {\n  CONFIRMATION_VIEW,\n  RETURN_METHOD_DIALOGS\n} from 'branding/strings.json'\nimport ActionButton from '@/components/atoms/ActionButton.vue'\nimport ReturnLocations from '@/components/organism/ReturnLocations.vue'\nimport ODialog from '@/components/atoms/ODialog.vue'\nimport { mapGetters, mapMutations } from 'vuex'\nimport { DIALOG_CARRIER_INFORMATION, DIALOG_CARRIER_LOCATIONS, DIALOG_SEARCH_LOCATION } from '@/store/constants'\nimport ReturnStoreInfo from '@/components/organism/ReturnStoreInfo.vue'\nimport SearchReturnLocation from '@/components/organism/SearchReturnLocation.vue'\nimport { isMailBackReturn, getSelectedReturnMethodDropOffDescription } from '@/controllers/ReturnMethodsController.js'\nimport { convertImageData } from '@/utils'\nimport { CONSTANTS } from '@/constants/index.js'\nimport CloseIcon from 'vue-material-design-icons/Close.vue'\n\nexport default {\n  name: 'QRCodeView',\n\n  components: {\n    OText,\n    HeaderTitle,\n    ActionButton,\n    ReturnLocations,\n    ODialog,\n    ReturnStoreInfo,\n    SearchReturnLocation,\n    CloseIcon\n  },\n\n  data () {\n    return {\n      QR_DROP_OFF_DATE: CONFIRMATION_VIEW.QR_DROP_OFF_DATE,\n      QR_CODE_DESCRIPTION_REFUND_ONLY: CONFIRMATION_VIEW.QR_CODE_DESCRIPTION_REFUND_ONLY,\n      QR_CODE_DESCRIPTION_EXCHANGE_ONLY: CONFIRMATION_VIEW.QR_CODE_DESCRIPTION_EXCHANGE_ONLY,\n      QR_CODE_DESCRIPTION_REFUND_EXCHANGE: CONFIRMATION_VIEW.QR_CODE_DESCRIPTION_REFUND_EXCHANGE,\n      SEE_LOCATIONS: CONFIRMATION_VIEW.SEE_LOCATIONS,\n      SEE_RETURN_LOCATIONS: RETURN_METHOD_DIALOGS.SEE_RETURN_LOCATIONS,\n      NEXT_STEPS: CONFIRMATION_VIEW.NEXT_STEPS,\n      qrImage: String,\n      DIALOG_CARRIER_INFORMATION,\n      DIALOG_CARRIER_LOCATIONS,\n      DIALOG_SEARCH_LOCATION,\n      qrDescription: ''\n    }\n  },\n\n  props: {\n    qrData: {\n      type: Object,\n      required: true\n    },\n    fromReturnMethods: {\n      type: Boolean,\n      required: true,\n      default: false\n    },\n    isExchangeOrRefund: {\n      type: String,\n      required: true,\n      default: ''\n    },\n    showClose: {\n      type: Boolean,\n      required: true,\n      default: false\n    }\n  },\n\n  computed: {\n    ...mapGetters({\n      selectedReturnMethod: 'returns/getSelectedReturnMethod',\n      isModalOpen: 'returns/getIsModalOpen',\n      activeModal: 'returns/getActiveModal',\n      policies: 'returns/policies'\n    }),\n    isMailBack () {\n      return isMailBackReturn(this.selectedReturnMethod)\n    }\n  },\n\n  methods: {\n    ...mapMutations({\n      openModal: 'returns/openModal',\n      closeModal: 'returns/closeModal'\n    }),\n\n    getReturnMethodTitle: function () {\n      return getSelectedReturnMethodDropOffDescription(this.selectedReturnMethod)\n    },\n\n    getReturnMethodType: function () {\n      return this.selectedReturnMethod.type\n    },\n\n    closeAction (event) {\n      this.$emit('closeClicked', event)\n    }\n  },\n\n  mounted () {\n    const refundTimingEstimate = this.policies.refund_timing_estimate ? this.policies.refund_timing_estimate : '5-7'\n    const carrier = this.selectedReturnMethod?.customer_facing_carrier\n\n    this.qrImage = convertImageData(this.qrData.image)\n    if (this.isExchangeOrRefund === CONSTANTS.REFUND) {\n      this.qrDescription = this.QR_CODE_DESCRIPTION_REFUND_ONLY.replace(\n        '$$refundTimingEstimate',\n        refundTimingEstimate\n      ).replace('$$CARRIER', carrier)\n    } else if (this.isExchangeOrRefund === CONSTANTS.EXCHANGE) {\n      this.qrDescription = this.QR_CODE_DESCRIPTION_EXCHANGE_ONLY.replace('$$CARRIER', carrier)\n    } else {\n      this.qrDescription = this.QR_CODE_DESCRIPTION_REFUND_EXCHANGE.replace(\n        '$$refundTimingEstimate',\n        refundTimingEstimate\n      ).replace('$$CARRIER', carrier)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.qrCode {\n  max-width: 300px;\n  max-height: 300px;\n}\n</style>\n"]}]}