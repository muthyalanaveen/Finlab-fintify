{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/pages/ExchangeSizeView.vue?vue&type=style&index=0&id=0d654ca4&scoped=true&lang=css&","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/pages/ExchangeSizeView.vue","mtime":1651785416402},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/css-loader/index.js","mtime":1649977086861},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1649977090577},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js","mtime":1649977089802}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5oYWxmLXdpZHRoIHsKICBtYXgtd2lkdGg6IDUwJQp9Cg=="},{"version":3,"sources":["ExchangeSizeView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA","file":"ExchangeSizeView.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n  <div>\n    <div class=\"px-1\" v-if=\"!this.isLoading\">\n      <header-title class=\"mt-7 mb-2\">\n        {{ title1_text }}\n      </header-title>\n      <header-small-title class=\"mb-4\">\n        {{ title2_text }}\n      </header-small-title>\n      <size-dropdown\n        :default-value=\"defaultValue\"\n        :items=\"this.exchangeSizeOptions\"\n        :on-change=\"onSizeSelected\"\n      />\n      <v-row\n        :class=\"{\n          'mt-3': $vuetify.breakpoint.smAndDown,\n          'mt-5': $vuetify.breakpoint.mdAndUp,\n        }\"\n      >\n        <v-col\n          :class=\"{\n            'pb-0': $vuetify.breakpoint.smAndDown,\n            'half-width': $vuetify.breakpoint.mdAndUp\n          }\"\n          order-md=\"2\"\n          class=\"d-flex justify-end\"\n        >\n          <action-button\n            class=\"pr-0\"\n            @click.stop=\"showPDPPage = true\"\n            tertiary-color\n            :loading=\"isLoading\"\n            :block=\"$vuetify.breakpoint.smAndDown\"\n            large\n            text\n          >\n            {{ action2_Text }}\n          </action-button>\n          <PDPPage\n            :visible=\"showPDPPage\"\n            @close=\"showPDPPage = false\"\n            :return-reason-clicked=\"returnReasonClicked\"\n          />\n        </v-col>\n        <v-col\n          :class=\"{\n            'half-width': $vuetify.breakpoint.mdAndUp,\n          }\"\n          order-md=\"1\"\n        >\n          <action-button\n            @click.stop=\"onClickMethod\"\n            primary-color\n            :loading=\"isLoading || isMapLoading\"\n            :block=\"$vuetify.breakpoint.smAndDown\"\n            large\n            :disabled=\"isDisabled\"\n          >\n            {{ isDisabled ? action1_Text : action1_Selected_Text }}\n          </action-button>\n        </v-col>\n      </v-row>\n    </div>\n    <div v-else>\n      <v-skeleton-loader type=\"list-item\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport {\n  getSizeOptionsForSelectedVariant,\n  saveSelectedItemToStore,\n  getDefaultValue\n} from '@/controllers/exchangesController'\n\nexport default {\n  name: 'ExchangeSizeView',\n  props: {\n    returnReasonClicked: {\n      type: Function,\n      required: true\n    },\n    isMapLoading: {\n      type: Boolean,\n      required: true\n    }\n  },\n  components: {\n    SizeDropdown: () => import('@/components/molecules/SizeDropdown.vue'),\n    HeaderTitle: () => import('@/components/molecules/HeaderTitle.vue'),\n    HeaderSmallTitle: () =>\n      import('@/components/molecules/HeaderSmallTitle.vue'),\n    PDPPage: () => import('@/components/pages/PDPPage.vue'),\n    ActionButton: () => import('@/components/atoms/ActionButton.vue')\n  },\n  data: () => ({\n    showPDPPage: false,\n    title1_text: \"Let's try a different size\",\n    title2_text: 'Select a size',\n    action1_Text: 'Select a size to exchange',\n    action1_Selected_Text: 'Exchange for this size',\n    action2_Text: 'See all sizes and colors...',\n    selectedItem: {},\n    isDisabled: true\n  }),\n  computed: {\n    ...mapGetters({\n      isLoading: 'exchange/isLoading',\n      currentItemIndex: 'returns/currentItemIndex',\n      selectedItems: 'order/selectedItems',\n      reason: 'returns/reason',\n      exchangeList: 'order/exchangeList'\n    }),\n    item () {\n      return this.selectedItems[this.currentItemIndex]\n    },\n    exchangeSizeOptions () {\n      return getSizeOptionsForSelectedVariant(this.item?.color)\n    },\n    defaultValue () {\n      return getDefaultValue()\n    }\n  },\n  mounted () {\n    this.selectedItem = this.defaultValue\n    this.updateIsDisabled()\n  },\n  methods: {\n    onSizeSelected (selectedItem) {\n      if (!selectedItem.disabled) {\n        console.log(this.selectedItem, this.defaultValue)\n        this.selectedItem = selectedItem\n        this.updateIsDisabled()\n      }\n    },\n    onClickMethod (event) {\n      saveSelectedItemToStore(this.selectedItem)\n      this.returnReasonClicked()\n      this.$emit('click', event)\n    },\n    updateIsDisabled () {\n      this.isDisabled = !(\n        this.selectedItem &&\n        !this.selectedItem.disabled &&\n        !this.isLoading\n      )\n    }\n  }\n}\n</script>\n<style scoped>\n.half-width {\n  max-width: 50%\n}\n</style>\n"]}]}