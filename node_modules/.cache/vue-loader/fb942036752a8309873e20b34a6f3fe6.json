{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/pages/ReturnListView.vue?vue&type=style&index=0&id=3f8a188e&scoped=true&lang=css&","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/pages/ReturnListView.vue","mtime":1664574245799},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/css-loader/index.js","mtime":1649977086861},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1649977090577},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js","mtime":1649977089802}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29udGFpbmVyIHsKICBwYWRkaW5nLXRvcDogMzBweDsKfQouZGVza3RvcC1idXR0b24gewogIHdpZHRoOiA0MCU7CiAgbWluLWhlaWdodDogNjZweDsKICB6LWluZGV4OiA5OSAhaW1wb3J0YW50Owp9Ci5tb2JpbGUtYnV0dG9uIHsKICBib3JkZXItcmFkaXVzOiAwZW07CiAgbWluLWhlaWdodDogNjZweDsKICB3aWR0aDogMTAwJTsKICB6LWluZGV4OiA5OSAhaW1wb3J0YW50Owp9Ci5yb3VuZGVkLWNpcmNsZSB7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIHdpZHRoOiAzNnB4OwogIGhlaWdodDogMzZweDsKICBwYWRkaW5nOiA4cHg7CgogIGJhY2tncm91bmQ6ICNmNmY2ZjY7CiAgY29sb3I6IGJsYWNrOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQojcmV0dXJuLWxpc3QtdGFiIC52LXNsaWRlLWdyb3VwX19wcmV2IHsKICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["ReturnListView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReturnListView.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n  <div>\n    <v-row class=\"justify-center mt-2\">\n      <v-col\n        md=\"5\"\n        sm=\"8\"\n        xs=\"12\"\n      >\n        <div class=\"mx-4 mb-6\">\n          <product-list-header\n            :selected-count=\"this.selectedCount\"\n            :order-number=\"this.order.order_id\"\n            :class=\"{ 'ml-n1': $vuetify.breakpoint.smAndDown }\"\n            :total-items-count-title=\"getCountTitle\"\n            :rma-items-count-title=\"getRMACountTitle\"\n            :is-return-user=\"this.getRmaItemsLength > 0\"\n          />\n        </div>\n        <v-list\n          class=\"mb-12 mt-2\"\n          :class=\"{ 'pb-16': $vuetify.breakpoint.smAndDown }\"\n        >\n          <div v-if=\"isLoading\">\n            <o-skeleton-card\n              v-for=\"(item, index) in $vuetify.breakpoint.smAndDown ? 6 : 10\"\n              :key=\"index\"\n            />\n          </div>\n\n          <div\n            v-if=\"this.getOrderItemsLength > 0 && this.getRmaItemsLength > 0\"\n          >\n            <v-tabs\n              v-model=\"active_tab\"\n              color=\"var(--button-tertiary)\"\n              id=\"return-list-tab\"\n              slider-color=\"var(--button-tertiary)\"\n              height=\"56px\"\n              slider-size=\"1\"\n              grow\n            >\n              <v-tab\n                v-for=\"tab of tabs\"\n                :key=\"tab.index\"\n                :ripple=\"false\"\n                @click=\"tabChanged(tab.index)\"\n              >\n                <v-col class=\"d-flex justify-center align-center\">\n                  <o-text class=\"pb-3\" v-html=\"getTabName(tab.index)\" />\n                  <div\n                    v-if=\"tab.index !== active_tab\"\n                    class=\"v-tabs-slider-wrapper\"\n                    style=\"height: 1px; width: 100%; color: #D9D9D9\"\n                  >\n                    <div class=\"v-tabs-slider\" />\n                  </div>\n                </v-col>\n              </v-tab>\n            </v-tabs>\n            <v-tabs-items v-model=\"active_tab\">\n              <v-tab-item\n                v-for=\"tab of tabs\"\n                :key=\"tab.index\"\n                role=\"tabpanel\"\n              >\n                <order-list v-if=\"tab.index === 0\" class=\"mt-3 normalWt\" />\n                <div v-if=\"tab.index === 1\">\n                  <return-user-view class=\"mt-3\" />\n                </div>\n              </v-tab-item>\n            </v-tabs-items>\n          </div>\n\n          <div\n            v-if=\"this.getOrderItemsLength > 0 && this.getRmaItemsLength === 0\"\n          >\n            <order-list class=\"normalWt\" />\n          </div>\n\n          <div\n            v-if=\"this.getRmaItemsLength > 0 && this.getOrderItemsLength === 0\"\n          >\n            <return-user-view />\n          </div>\n        </v-list>\n      </v-col>\n    </v-row>\n    <div class=\"d-flex justify-center\" v-if=\"showReturnActionButton\">\n      <action-button\n        fixed\n        bottom\n        :class=\"{\n          'mb-n4 mobile-button': $vuetify.breakpoint.smAndDown,\n          'mb-n2 desktop-button': $vuetify.breakpoint.mdAndUp,\n        }\"\n        :disabled=\"selectedCount === 0\"\n        @click=\"nextPage\"\n        :loading=\"isLoading\"\n        primary-color\n      >\n        {{ getStickyLabel }}\n      </action-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  FETCH_ORDER,\n  EMPTY_REFUND_LIST,\n  EMPTY_EXCHANGE_LIST,\n  FETCH_VARIANTS\n} from '@/store/constants.js'\nimport { PAGE_TITLES, ORDER_DISPLAY, TRACKING_VIEW } from 'branding/strings.json'\nimport { mapGetters } from 'vuex'\nimport ActionButton from '@/components/atoms/ActionButton.vue'\nimport ProductListHeader from '@/components/organism/ProductListHeader.vue'\nimport OSkeletonCard from '@/components/atoms/OSkeletonCard.vue'\nimport OrderList from './OrderList.vue'\nimport ReturnUserView from './ReturnUserView.vue'\nimport OText from '@/components/atoms/OText.vue'\nimport { isExchangesEnabled } from '@/controllers/ExchangesController'\nimport { CONSTANTS } from '@/constants'\n\nexport default {\n  components: {\n    ActionButton,\n    ProductListHeader,\n    OSkeletonCard,\n    OrderList,\n    ReturnUserView,\n    OText\n  },\n\n  props: {},\n\n  beforeRouteLeave (to, from, next) {\n    // If the form is dirty and the user did not confirm leave,\n    // prevent losing unsaved changes by canceling navigation\n    this.$store.commit('ui/updateIsStickyButtonVisible', false)\n    next()\n  },\n  beforeDestroy () {\n    this.$store.commit('ui/updateIsStickyButtonVisible', false)\n  },\n  beforeUnmount () {\n    this.$store.commit('ui/updateIsStickyButtonVisible', false)\n  },\n  created () {\n    this.$store.commit('ui/updateIsStickyButtonVisible', true)\n  },\n\n  data () {\n    return {\n      active_tab: this.getReturnSelectedTab,\n      showReturnActionButton: true,\n      tabs: []\n    }\n  },\n  mounted () {\n    this.active_tab = this.getReturnSelectedTab\n    if (this.order.order_hash === '') {\n      this.getData()\n    } else {\n      this.showOrHideReturnItemsButton(this.order.order.items)\n    }\n    var tabObj1 = { index: 0, name: '' }\n    var tabObj2 = { index: 1, name: '' }\n    var tabsArray = []\n    tabsArray.push(tabObj1)\n    tabsArray.push(tabObj2)\n    this.tabs = tabsArray\n    this.$store.commit('returns/resetIndex')\n  },\n\n  methods: {\n    getTabName (index) {\n      var title = ''\n      if (index === 0) {\n        title =\n        '<div class=\\'d-flex flex-column\\'><o-text style=\\'text-transform: none; font-weight: 900\\'>' + PAGE_TITLES.ALL + '</o-text><o-text style=\\'text-transform: none\\' sm> ' + ORDER_DISPLAY.SELECT_TO_RETURN + '</o-text></div>'\n      } else {\n        title = '<div class=\\'d-flex flex-column\\'><o-text style=\\'text-transform: none; font-weight: 900\\'>' + PAGE_TITLES.PAST_RETURNS + `</o-text><o-text style='text-transform: none' sm>${this.getCountSubTitle()}</o-text></div>`\n      }\n      return title\n    },\n    async nextPage () {\n      this.$store.commit('ui/updateIsStickyButtonVisible', false)\n      this.$store.commit('order/' + EMPTY_REFUND_LIST)\n      this.$store.commit('order/' + EMPTY_EXCHANGE_LIST)\n      this.$router.push('/orders/' + this.order.order_hash + '/reasons')\n      if (isExchangesEnabled()) {\n        this.$store.dispatch(`exchange/${FETCH_VARIANTS}`, this.selectedItems)\n      }\n    },\n    async getData () {\n      const hash = this.$route.params.id\n      let params = { order_hash: hash }\n\n      if (this.$route.params.id === CONSTANTS.API_VERSION && this.$route.query?.order_id && this.$route.query?.zip_code) {\n        params = {\n          order_id: this.$route.query?.order_id,\n          zip_code: this.$route.query?.zip_code\n        }\n      }\n      await this.$store\n        .dispatch('order/' + FETCH_ORDER, params)\n        .then((response) => {\n          if (response) {\n            this.showOrHideReturnItemsButton(response.order.items)\n          }\n        })\n        .catch((err) => {\n          this.$router.push('/orderandzipcode')\n          console.error({ err })\n        })\n    },\n    tabChanged (index) {\n      if (index === 0) {\n        document.title = PAGE_TITLES.ITEM_SELECTION\n      } else {\n        document.title = PAGE_TITLES.PAST_RETURNS\n      }\n      this.$store.commit('returns/updateReturnSelectedTab', index)\n      this.showOrHideReturnItemsButton(this.order.order.items)\n    },\n    showOrHideReturnItemsButton (items) {\n      var allItemsReturned = true\n      items.forEach((item) => {\n        if (item.quantity > 0) {\n          allItemsReturned = false\n          return allItemsReturned\n        }\n      })\n      this.showReturnActionButton =\n        this.order?.rma_list?.length === 0 ||\n        (this.getReturnSelectedTab === 0 && !allItemsReturned)\n    },\n    getCountSubTitle () {\n      const completedCount = this.rmaList?.rmaListItems?.filter(\n        (returnItem) => returnItem.return_status === 'COMPLETED'\n      )?.length\n      const canceledCount = this.rmaList?.rmaListItems?.filter(\n        (returnItem) => returnItem.return_status === 'CANCELED'\n      )?.length\n      const inProgressCount =\n        this.rmaList?.rmaListItems?.length - completedCount - canceledCount\n      var progressTitle = ''\n      if (inProgressCount >= 0 && completedCount > 0) {\n        progressTitle = `${inProgressCount}` + ' ' + TRACKING_VIEW.IN_PROGRESS + ' ' + '·' + ' ' + `${completedCount}` + ' ' + TRACKING_VIEW.COMPLETED\n      } else if (completedCount > 0) {\n        progressTitle = `${completedCount}` + ' ' + TRACKING_VIEW.COMPLETED\n      } else if (inProgressCount >= 0) {\n        progressTitle = `${inProgressCount}` + ' ' + TRACKING_VIEW.IN_PROGRESS\n      }\n      return progressTitle\n    }\n  },\n\n  computed: {\n    ...mapGetters({\n      order: 'order/order',\n      isLoading: 'order/isLoading',\n      getReturnSelectedTab: 'returns/getReturnSelectedTab',\n      selectedItems: 'order/selectedItems',\n      rmaList: 'order/rmaList',\n      policies: 'returns/policies'\n    }),\n    selectedCount () {\n      const selectedItems = this.order.order.items.filter(\n        (item) => item.selected\n      )\n\n      return selectedItems.reduce((accSum, item) => {\n        return accSum + item.quantity\n      }, 0)\n    },\n    getStickyLabel () {\n      return this.selectedCount === 0\n        ? 'Select items to return'\n        : `Return ${this.selectedCount} ${\n            this.selectedCount > 1 ? 'items' : 'item'\n          }`\n    },\n    getCountTitle () {\n      const totalItems = this.order.order.items.reduce((accSum, item) => {\n        return accSum + item.original_quantity\n      }, 0)\n\n      return ` · ${totalItems} ${totalItems > 1 ? 'items' : 'item'}`\n    },\n    getRMACountTitle () {\n      let title = ''\n      if (this.order?.rma_list?.length > 0) {\n        title =\n          ' · ' +\n          this.order?.rma_list?.length +\n          (this.order?.rma_list?.length > 1 ? ' returns' : ' return')\n      }\n      return title\n    },\n    getOrderItemsLength () {\n      return this.order?.order?.items?.length\n        ? this.order.order.items.length\n        : 0\n    },\n    getRmaItemsLength () {\n      return this.order?.rma_list?.length ? this.order.rma_list.length : 0\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  padding-top: 30px;\n}\n.desktop-button {\n  width: 40%;\n  min-height: 66px;\n  z-index: 99 !important;\n}\n.mobile-button {\n  border-radius: 0em;\n  min-height: 66px;\n  width: 100%;\n  z-index: 99 !important;\n}\n.rounded-circle {\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  padding: 8px;\n\n  background: #f6f6f6;\n  color: black;\n  text-align: center;\n}\n#return-list-tab .v-slide-group__prev {\n  display: none !important;\n}\n</style>\n"]}]}