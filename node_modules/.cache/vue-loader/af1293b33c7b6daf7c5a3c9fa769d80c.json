{"remainingRequest":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/molecules/ListItemSkeleton.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/src/components/molecules/ListItemSkeleton.vue","mtime":1653330817028},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/thread-loader/dist/cjs.js","mtime":1649977086740},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/babel-loader/lib/index.js","mtime":1649977089120},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/cache-loader/dist/cjs.js","mtime":1649977086874},{"path":"/Users/naveenmuthyala/Documents/Projects/returns_portal_ui/returns_portal_ui/node_modules/vue-loader/lib/index.js","mtime":1649977089802}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xpc3RJdGVtU2tlbGV0b24nLAogIGNvbXBvbmVudHM6IHsKICB9LAogIHByb3BzOiB7CiAgICBsaXN0OiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiBbXQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgb25DbGlja01ldGhvZCAoZXZlbnQpIHsKICAgICAgdGhpcy4kZW1pdCgnb25DbGljaycsIGV2ZW50KQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoeyBvcmRlcjogJ29yZGVyL29yZGVyJyB9KQogIH0KfQo="},{"version":3,"sources":["ListItemSkeleton.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListItemSkeleton.vue","sourceRoot":"src/components/molecules","sourcesContent":["<template>\n  <div>\n    <div\n      v-for=\"(_, index) in this.list\"\n      :key=\"index\"\n      class=\"tile\"\n    >\n      <v-divider class=\"my-0\" />\n      <v-list-item class=\"d-flex align-center tile \">\n        <v-skeleton-loader type=\"list-item\" style=\"width:100%; background: #e1e6fa;\" />\n        <v-icon\n          color=\"#B7B7B7\"\n          class=\"ml-auto d-flex align-end\"\n          :class=\"{\n            'mr-2': $vuetify.breakpoint.smAndDown,\n            'mr-n1': $vuetify.breakpoint.mdAndUp,\n          }\"\n          size=\"20\"\n        >\n          mdi-chevron-right\n        </v-icon>\n      </v-list-item>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'ListItemSkeleton',\n  components: {\n  },\n  props: {\n    list: {\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    onClickMethod (event) {\n      this.$emit('onClick', event)\n    }\n  },\n  computed: {\n    ...mapGetters({ order: 'order/order' })\n  }\n}\n</script>\n\n<style scoped>\n.tile {\n  display: block;\n  cursor: pointer;\n  min-height: 64px;\n}\n.tile:hover,\n.v-list-item--link:before {\n  background: #f2f5ff;\n}\n.tile:active {\n  background: #e1e6fa;\n}\n</style>\n"]}]}