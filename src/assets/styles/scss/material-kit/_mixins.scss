
// Placeholder text
@mixin material-placeholder() {
  &::-moz-placeholder {@content; } // Firefox
  &:-ms-input-placeholder {@content; } // Internet Explorer 10+
  &::-webkit-input-placeholder  {@content; } // Safari and Chrome
}

@mixin toolbar-colors($variation-color, $text-color){
  background-color: $variation-color !important;

  .md-title,
  .md-list .md-list-item-content,
  .md-toolbar-toggle .icon-bar,
  &,
  &:hover,
  &:focus{
    color: $text-color !important;
  }
}

@mixin inputs-color($input-class, $color) {
  &.has-#{$input-class} {
    &:before {
      background-color: $color !important;
    }

    &.md-focused .md-icon {
      color: $color !important;
    }
  }
}

@mixin tabs-color($color) {
  &,
  &:hover,
  &:focus{
    background-color: $color !important;
  }
}

@mixin badge-color() {
    &.badge-primary{
        background-color: $brand-primary;
    }
    &.badge-info {
        background-color: $brand-info;
    }
    &.badge-success{
        background-color: $brand-success;
    }
    &.badge-warning{
        background-color: $brand-warning;
    }
    &.badge-danger{
        background-color: $brand-danger;
    }
    &.badge-rose{
      background-color: $brand-rose;
    }
    &.badge-default{
        background-color: $gray-light;
    }
}

@mixin md-progress-bar($color) {
  &:not(.md-buffer){
    background: rgba($color,.2);
  }

  .md-progress-bar-fill{
    background-color: $color !important;
  }

  &.md-buffer {
    .md-progress-bar-fill{
      background-color: $color;
    }
    .md-progress-bar-buffer {
      border-color: rgba($color,.2);
    }
  }
}


@mixin dropdown-colors($variation-color) {
  .dropdown-menu {
    border-radius: $border-radius-base !important;
    li > a {
      &:hover,
      &:focus {
        color: $white-color !important;
        background-color: $variation-color !important;
      }
    }

    .active > a {
      &:hover,
      &:focus {
        color: $white-color !important;
      }
      background-color: $variation-color !important;
      color: $white-color !important;
    }
  }
}

@mixin alert-color($color) {
  background-color: $color;
  color: $white-color;
  border-radius: $border-radius-base;
}

@mixin transition($time, $type){
    -webkit-transition: all $time $type;
    -moz-transition: all $time $type;
    -o-transition: all $time $type;
    -ms-transition: all $time $type;
    transition: all $time $type;
}

@mixin transform-scale($value){
     -webkit-transform: scale($value);
        -moz-transform: scale($value);
        -o-transform: scale($value);
        -ms-transform: scale($value);
        transform: scale($value);
}

@mixin transform-scale3d($value){
     -webkit-transform: scale3d($value);
        -moz-transform: scale3d($value);
        -o-transform: scale3d($value);
        -ms-transform: scale3d($value);
        transform: scale3d($value);
}

@mixin transform-translate-x($value){
     -webkit-transform:  translate3d($value, 0, 0);
        -moz-transform: translate3d($value, 0, 0);
        -o-transform: translate3d($value, 0, 0);
        -ms-transform: translate3d($value, 0, 0);
        transform: translate3d($value, 0, 0);
}

@mixin transform-translate-y($value){
     -webkit-transform:  translate3d(0,$value, 0);
        -moz-transform: translate3d(0, $value, 0);
        -o-transform: translate3d(0, $value, 0);
        -ms-transform: translate3d(0, $value, 0);
        transform: translate3d(0, $value, 0);
}

@mixin transform-origin($coordinates){
      -webkit-transform-origin: $coordinates;
        -moz-transform-origin: $coordinates;
        -o-transform-origin: $coordinates;
        -ms-transform-origin: $coordinates;
        transform-origin: $coordinates;
}

@mixin black-filter(){
    background: rgba(0,0,0,.55);
    position: absolute;
    width: 100%;
    height: 100%;
    content: "";
    z-index: 0;
    left: 0;
    top: 0;
}

@mixin animation($value){
      -webkit-animation: $value;
        -moz-animation: $value;
        -o-animation: $value;
        -ms-animation: $value;
        animation: $value;
}

@mixin radial-gradient($extern-color, $center-color){
    background: $extern-color;
    background: -moz-radial-gradient(center, ellipse cover, $center-color 0%, $extern-color 100%); /* FF3.6+ */
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,$center-color), color-stop(100%,$extern-color)); /* Chrome,Safari4+ */
    background: -webkit-radial-gradient(center, ellipse cover, $center-color 0%,$extern-color 100%); /* Chrome10+,Safari5.1+ */
    background: -o-radial-gradient(center, ellipse cover, $center-color 0%,$extern-color 100%); /* Opera 12+ */
    background: -ms-radial-gradient(center, ellipse cover, $center-color 0%,$extern-color 100%); /* IE10+ */
    background: radial-gradient(ellipse at center, $center-color 0%,$extern-color 100%); /* W3C */
    background-size: 550% 450%;
}

@mixin tag-color ($color){
    .tag{
         background-color: $color;
         color: $white-color;
         .tagsinput-remove-link{
             color: $white-color;
         }
     }
     .tagsinput-add{
         color: $color;
     }
}
@mixin create-colored-tags(){
    &.tag-primary{
        @include tag-color($brand-primary);
    }
    &.tag-info {
        @include tag-color($brand-info);
    }
    &.tag-success{
        @include tag-color($brand-success);
    }
    &.tag-warning{
        @include tag-color($brand-warning);
    }
    &.tag-danger{
        @include tag-color($brand-danger);
    }
    &.tag-rose{
      @include tag-color($brand-rose);
    }
}

@mixin rotate-180(){
    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);
    -webkit-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    transform: rotate(180deg);
}

@mixin rotate() {
    -webkit-transform: rotate( 45deg );
    -moz-transform: rotate( 45deg );
    -o-transform: rotate( 45deg );
    -ms-transform: rotate(45deg);
    transform: rotate( 45deg );
}

@mixin linear-gradient($color1, $color2){
    background: $color1; /* For browsers that do not support gradients */
    background: -webkit-linear-gradient(60deg, $color1 , $color2); /* For Safari 5.1 to 6.0 */
    background: -o-linear-gradient(60deg, $color1, $color2); /* For Opera 11.1 to 12.0 */
    background: -moz-linear-gradient(60deg, $color1, $color2); /* For Firefox 3.6 to 15 */
    background: linear-gradient(60deg, $color1 , $color2); /* Standard syntax */
}



// Mixins for buttons

@mixin btn-styles2($btn-color, $btn-color-hover, $btn-color-active, $btn-color-disabled-bg, $btn-color-disabled-txt, $btn-color-disabled-border) {

  &,
  &:hover,
  &:focus,
  .open > &.dropdown-toggle,
  .open > &.dropdown-toggle:focus,
  .open > &.dropdown-toggle:hover {
    background-color: $btn-color !important;
    font-weight: $font-weight-extra-bold;
    @if ($btn-color == $white-color)  {
      &,
      i{
        color: $gray-dark !important;
      }
    }  @else {
      &,
      i{
        color: $white-color !important;
      }
    }
  }

  &:focus,
  &:hover{
    background-color: $btn-color-hover !important;
  }
  &:active,
  &.active
  {
    background-color: $btn-color-active !important;
  }

&.disabled,
&:disabled,
&[disabled],
fieldset[disabled] & {
  &,
  &:hover,
  &:focus,
  &.focus,
  &:active,
  &.active {
      box-shadow: none;
      background-color: $btn-color-disabled-bg !important;
      color: $btn-color-disabled-txt !important;
      pointer-events: none;
      border: solid 1px $btn-color-disabled-border;
  }
}

&.md-simple{
    &,
    &:hover,
    &:focus,
    &:active,
    &.active,
    &:active:focus,
    &:active:hover,
    &.active:focus,
    &.active:hover,
    .open > &.dropdown-toggle,
    .open > &.dropdown-toggle:focus,
    .open > &.dropdown-toggle:hover{
      background-color: transparent !important;
      color: $btn-color !important;
      box-shadow: none;
      i{
        color: $btn-color !important;
      }
    }
}

}

@mixin btn-styles($btn-color) {

    &,
    &:hover,
    &:focus,
    &:active,
    &.active,
    &:active:focus,
    &:active:hover,
    &.active:focus,
    &.active:hover,
    .open > &.dropdown-toggle,
    .open > &.dropdown-toggle:focus,
    .open > &.dropdown-toggle:hover {
      background-color: $btn-color !important;
      @if $btn-color == $white-color {
        &,
        i{
          color: $gray-dark !important;
        }
      } @else {
        &,
        i{
          color: $white-color !important;
        }
      }
    }

    &:focus,
    &:active,
    &:hover{
      background-color: darken($btn-color, 20%) !important;
    }

  &.disabled,
  &:disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &.focus,
    &:active,
    &.active {
        box-shadow: none;
        pointer-events: none;
    }
  }

  &.md-simple{
      &,
      &:hover,
      &:focus,
      &:active,
      &.active,
      &:active:focus,
      &:active:hover,
      &.active:focus,
      &.active:hover,
      .open > &.dropdown-toggle,
      .open > &.dropdown-toggle:focus,
      .open > &.dropdown-toggle:hover{
        background-color: transparent !important;
        color: $btn-color !important;
        box-shadow: none;

        i{
          color: $btn-color !important;
        }
      }
  }

}

@mixin set-background-color-button ($color){
    .nav{
        .md-list-item-container.active {
            background-color: $color !important;
        }
    }
}

@mixin font($font-family, $font-file) {
  @font-face {
    font-family: $font-family;
    src: url($font-file+'.eot');
    src: url($font-file+'.eot?#iefix') format('embedded-opentype'),
         url($font-file+'.woff') format('woff'),
         url($font-file+'.ttf') format('truetype'),
         url($font-file+'.svg#'+$font-family) format('svg');
    font-weight: normal;
    font-style: normal;
  }
}


